; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\myiic.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\myiic.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\MySrc -I..\..\Libraries -I..\..\MySrc\ostask -I..\..\MySrc\MPU6050 -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 -DSTM32F40_41xxx --omf_browse=.\flash\obj\myiic.crf ..\..\MySrc\MPU6050\myiic.c]
                          THUMB

                          AREA ||i.IIC_Ack||, CODE, READONLY, ALIGN=2

                  IIC_Ack PROC
;;;78     //产生ACK应答
;;;79     void IIC_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;80     {
;;;81     	IIC_SCL=0;
000002  2000              MOVS     r0,#0
000004  490e              LDR      r1,|L1.64|
000006  6008              STR      r0,[r1,#0]
;;;82     	SDA_OUT();
000008  480e              LDR      r0,|L1.68|
00000a  6800              LDR      r0,[r0,#0]
00000c  f4202040          BIC      r0,r0,#0xc0000
000010  490c              LDR      r1,|L1.68|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f4402080          ORR      r0,r0,#0x40000
00001c  6008              STR      r0,[r1,#0]
;;;83     	IIC_SDA=0;
00001e  2000              MOVS     r0,#0
000020  4909              LDR      r1,|L1.72|
000022  f8c102a4          STR      r0,[r1,#0x2a4]
;;;84     	delay_us(1);
000026  2001              MOVS     r0,#1
000028  f7fffffe          BL       delay_us_nos
;;;85     	IIC_SCL=1;
00002c  2001              MOVS     r0,#1
00002e  4904              LDR      r1,|L1.64|
000030  6008              STR      r0,[r1,#0]
;;;86     	delay_us(1);
000032  f7fffffe          BL       delay_us_nos
;;;87     	IIC_SCL=0;
000036  2000              MOVS     r0,#0
000038  4903              LDR      r1,|L1.72|
00003a  f8c102a0          STR      r0,[r1,#0x2a0]
;;;88     }
00003e  bd10              POP      {r4,pc}
;;;89     //不产生ACK应答
                          ENDP

                  |L1.64|
                          DCD      0x424082a0
                  |L1.68|
                          DCD      0x40020400
                  |L1.72|
                          DCD      0x42408000

                          AREA ||i.IIC_Init||, CODE, READONLY, ALIGN=2

                  IIC_Init PROC
;;;18     //初始化IIC
;;;19     void IIC_Init(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;20     {
;;;21       GPIO_InitTypeDef  GPIO_InitStructure;
;;;22     
;;;23       RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);//使能GPIOB时钟
000002  2101              MOVS     r1,#1
000004  2002              MOVS     r0,#2
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;24     
;;;25       //GPIOB8,B9初始化设置
;;;26       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9;
00000a  f44f7040          MOV      r0,#0x300
00000e  9000              STR      r0,[sp,#0]
;;;27       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;//普通输出模式
000010  2001              MOVS     r0,#1
000012  f88d0004          STRB     r0,[sp,#4]
;;;28       GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;//推挽输出
000016  2000              MOVS     r0,#0
000018  f88d0006          STRB     r0,[sp,#6]
;;;29       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;//100MHz
00001c  2003              MOVS     r0,#3
00001e  f88d0005          STRB     r0,[sp,#5]
;;;30       GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;//上拉
000022  2001              MOVS     r0,#1
000024  f88d0007          STRB     r0,[sp,#7]
;;;31       GPIO_Init(GPIOB, &GPIO_InitStructure);//初始化
000028  4669              MOV      r1,sp
00002a  4805              LDR      r0,|L2.64|
00002c  f7fffffe          BL       GPIO_Init
;;;32     	IIC_SCL=1;
000030  2001              MOVS     r0,#1
000032  4904              LDR      r1,|L2.68|
000034  6008              STR      r0,[r1,#0]
;;;33     	IIC_SDA=1;
000036  4904              LDR      r1,|L2.72|
000038  f8c102a4          STR      r0,[r1,#0x2a4]
;;;34     }
00003c  bd1c              POP      {r2-r4,pc}
;;;35     //产生IIC起始信号
                          ENDP

00003e  0000              DCW      0x0000
                  |L2.64|
                          DCD      0x40020400
                  |L2.68|
                          DCD      0x424082a0
                  |L2.72|
                          DCD      0x42408000

                          AREA ||i.IIC_NAck||, CODE, READONLY, ALIGN=2

                  IIC_NAck PROC
;;;89     //不产生ACK应答
;;;90     void IIC_NAck(void)
000000  b510              PUSH     {r4,lr}
;;;91     {
;;;92     	IIC_SCL=0;
000002  2000              MOVS     r0,#0
000004  490e              LDR      r1,|L3.64|
000006  6008              STR      r0,[r1,#0]
;;;93     	SDA_OUT();
000008  480e              LDR      r0,|L3.68|
00000a  6800              LDR      r0,[r0,#0]
00000c  f4202040          BIC      r0,r0,#0xc0000
000010  490c              LDR      r1,|L3.68|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f4402080          ORR      r0,r0,#0x40000
00001c  6008              STR      r0,[r1,#0]
;;;94     	IIC_SDA=1;
00001e  2001              MOVS     r0,#1
000020  4909              LDR      r1,|L3.72|
000022  f8c102a4          STR      r0,[r1,#0x2a4]
;;;95     	delay_us(1);
000026  f7fffffe          BL       delay_us_nos
;;;96     	IIC_SCL=1;
00002a  2001              MOVS     r0,#1
00002c  4904              LDR      r1,|L3.64|
00002e  6008              STR      r0,[r1,#0]
;;;97     	delay_us(1);
000030  f7fffffe          BL       delay_us_nos
;;;98     	IIC_SCL=0;
000034  2000              MOVS     r0,#0
000036  4904              LDR      r1,|L3.72|
000038  f8c102a0          STR      r0,[r1,#0x2a0]
;;;99     }
00003c  bd10              POP      {r4,pc}
;;;100    //IIC发送一个字节
                          ENDP

00003e  0000              DCW      0x0000
                  |L3.64|
                          DCD      0x424082a0
                  |L3.68|
                          DCD      0x40020400
                  |L3.72|
                          DCD      0x42408000

                          AREA ||i.IIC_Read_Byte||, CODE, READONLY, ALIGN=2

                  IIC_Read_Byte PROC
;;;120    //读1个字节，ack=1时，发送ACK，ack=0，发送nACK
;;;121    u8 IIC_Read_Byte(unsigned char ack)
000000  b570              PUSH     {r4-r6,lr}
;;;122    {
000002  4605              MOV      r5,r0
;;;123    	unsigned char i,receive=0;
000004  2400              MOVS     r4,#0
;;;124    	SDA_IN();//SDA设置为输入
000006  4816              LDR      r0,|L4.96|
000008  6800              LDR      r0,[r0,#0]
00000a  f4202040          BIC      r0,r0,#0xc0000
00000e  4914              LDR      r1,|L4.96|
000010  6008              STR      r0,[r1,#0]
000012  4608              MOV      r0,r1
000014  6800              LDR      r0,[r0,#0]
000016  6008              STR      r0,[r1,#0]
;;;125        for(i=0;i<8;i++ )
000018  2600              MOVS     r6,#0
00001a  e016              B        |L4.74|
                  |L4.28|
;;;126    	{
;;;127            IIC_SCL=0;
00001c  2000              MOVS     r0,#0
00001e  4911              LDR      r1,|L4.100|
000020  6008              STR      r0,[r1,#0]
;;;128            delay_us(1);
000022  2001              MOVS     r0,#1
000024  f7fffffe          BL       delay_us_nos
;;;129    		IIC_SCL=1;
000028  2001              MOVS     r0,#1
00002a  490f              LDR      r1,|L4.104|
00002c  f8c102a0          STR      r0,[r1,#0x2a0]
;;;130            receive<<=1;
000030  0660              LSLS     r0,r4,#25
000032  0e04              LSRS     r4,r0,#24
;;;131            if(READ_SDA)receive++;
000034  480b              LDR      r0,|L4.100|
000036  387c              SUBS     r0,r0,#0x7c
000038  6800              LDR      r0,[r0,#0]
00003a  b108              CBZ      r0,|L4.64|
00003c  1c60              ADDS     r0,r4,#1
00003e  b2c4              UXTB     r4,r0
                  |L4.64|
;;;132    		delay_us(1);
000040  2001              MOVS     r0,#1
000042  f7fffffe          BL       delay_us_nos
000046  1c70              ADDS     r0,r6,#1              ;125
000048  b2c6              UXTB     r6,r0                 ;125
                  |L4.74|
00004a  2e08              CMP      r6,#8                 ;125
00004c  dbe6              BLT      |L4.28|
;;;133        }
;;;134        if (!ack)
00004e  b915              CBNZ     r5,|L4.86|
;;;135            IIC_NAck();//发送nACK
000050  f7fffffe          BL       IIC_NAck
000054  e001              B        |L4.90|
                  |L4.86|
;;;136        else
;;;137            IIC_Ack(); //发送ACK
000056  f7fffffe          BL       IIC_Ack
                  |L4.90|
;;;138        return receive;
00005a  4620              MOV      r0,r4
;;;139    }
00005c  bd70              POP      {r4-r6,pc}
;;;140    
                          ENDP

00005e  0000              DCW      0x0000
                  |L4.96|
                          DCD      0x40020400
                  |L4.100|
                          DCD      0x424082a0
                  |L4.104|
                          DCD      0x42408000

                          AREA ||i.IIC_Send_Byte||, CODE, READONLY, ALIGN=2

                  IIC_Send_Byte PROC
;;;103    //0，无应答
;;;104    void IIC_Send_Byte(u8 txd)
000000  b570              PUSH     {r4-r6,lr}
;;;105    {
000002  4604              MOV      r4,r0
;;;106        u8 t;
;;;107    	SDA_OUT();
000004  4814              LDR      r0,|L5.88|
000006  6800              LDR      r0,[r0,#0]
000008  f4202040          BIC      r0,r0,#0xc0000
00000c  4912              LDR      r1,|L5.88|
00000e  6008              STR      r0,[r1,#0]
000010  4608              MOV      r0,r1
000012  6800              LDR      r0,[r0,#0]
000014  f4402080          ORR      r0,r0,#0x40000
000018  6008              STR      r0,[r1,#0]
;;;108        IIC_SCL=0;//拉低时钟开始数据传输
00001a  2000              MOVS     r0,#0
00001c  490f              LDR      r1,|L5.92|
00001e  6008              STR      r0,[r1,#0]
;;;109        for(t=0;t<8;t++)
000020  2500              MOVS     r5,#0
000022  e016              B        |L5.82|
                  |L5.36|
;;;110        {
;;;111            IIC_SDA=(txd&0x80)>>7;
000024  09e0              LSRS     r0,r4,#7
000026  490d              LDR      r1,|L5.92|
000028  1d09              ADDS     r1,r1,#4
00002a  6008              STR      r0,[r1,#0]
;;;112            txd<<=1;
00002c  0660              LSLS     r0,r4,#25
00002e  0e04              LSRS     r4,r0,#24
;;;113    		delay_us(1);   //对TEA5767这三个延时都是必须的
000030  2001              MOVS     r0,#1
000032  f7fffffe          BL       delay_us_nos
;;;114    		IIC_SCL=1;
000036  2001              MOVS     r0,#1
000038  4909              LDR      r1,|L5.96|
00003a  f8c102a0          STR      r0,[r1,#0x2a0]
;;;115    		delay_us(1);
00003e  f7fffffe          BL       delay_us_nos
;;;116    		IIC_SCL=0;
000042  2000              MOVS     r0,#0
000044  4905              LDR      r1,|L5.92|
000046  6008              STR      r0,[r1,#0]
;;;117    		delay_us(1);
000048  2001              MOVS     r0,#1
00004a  f7fffffe          BL       delay_us_nos
00004e  1c68              ADDS     r0,r5,#1              ;109
000050  b2c5              UXTB     r5,r0                 ;109
                  |L5.82|
000052  2d08              CMP      r5,#8                 ;109
000054  dbe6              BLT      |L5.36|
;;;118        }
;;;119    }
000056  bd70              POP      {r4-r6,pc}
;;;120    //读1个字节，ack=1时，发送ACK，ack=0，发送nACK
                          ENDP

                  |L5.88|
                          DCD      0x40020400
                  |L5.92|
                          DCD      0x424082a0
                  |L5.96|
                          DCD      0x42408000

                          AREA ||i.IIC_Start||, CODE, READONLY, ALIGN=2

                  IIC_Start PROC
;;;35     //产生IIC起始信号
;;;36     void IIC_Start(void)
000000  b510              PUSH     {r4,lr}
;;;37     {
;;;38     	SDA_OUT();     //sda线输出
000002  480f              LDR      r0,|L6.64|
000004  6800              LDR      r0,[r0,#0]
000006  f4202040          BIC      r0,r0,#0xc0000
00000a  490d              LDR      r1,|L6.64|
00000c  6008              STR      r0,[r1,#0]
00000e  4608              MOV      r0,r1
000010  6800              LDR      r0,[r0,#0]
000012  f4402080          ORR      r0,r0,#0x40000
000016  6008              STR      r0,[r1,#0]
;;;39     	IIC_SDA=1;
000018  2001              MOVS     r0,#1
00001a  490a              LDR      r1,|L6.68|
00001c  6008              STR      r0,[r1,#0]
;;;40     	IIC_SCL=1;
00001e  490a              LDR      r1,|L6.72|
000020  f8c102a0          STR      r0,[r1,#0x2a0]
;;;41     	delay_us(1);
000024  f7fffffe          BL       delay_us_nos
;;;42      	IIC_SDA=0;//START:when CLK is high,DATA change form high to low
000028  2000              MOVS     r0,#0
00002a  4906              LDR      r1,|L6.68|
00002c  6008              STR      r0,[r1,#0]
;;;43     	delay_us(1);
00002e  2001              MOVS     r0,#1
000030  f7fffffe          BL       delay_us_nos
;;;44     	IIC_SCL=0;//钳住I2C总线，准备发送或接收数据
000034  2000              MOVS     r0,#0
000036  4904              LDR      r1,|L6.72|
000038  f8c102a0          STR      r0,[r1,#0x2a0]
;;;45     }
00003c  bd10              POP      {r4,pc}
;;;46     //产生IIC停止信号
                          ENDP

00003e  0000              DCW      0x0000
                  |L6.64|
                          DCD      0x40020400
                  |L6.68|
                          DCD      0x424082a4
                  |L6.72|
                          DCD      0x42408000

                          AREA ||i.IIC_Stop||, CODE, READONLY, ALIGN=2

                  IIC_Stop PROC
;;;46     //产生IIC停止信号
;;;47     void IIC_Stop(void)
000000  b510              PUSH     {r4,lr}
;;;48     {
;;;49     	SDA_OUT();//sda线输出
000002  480e              LDR      r0,|L7.60|
000004  6800              LDR      r0,[r0,#0]
000006  f4202040          BIC      r0,r0,#0xc0000
00000a  490c              LDR      r1,|L7.60|
00000c  6008              STR      r0,[r1,#0]
00000e  4608              MOV      r0,r1
000010  6800              LDR      r0,[r0,#0]
000012  f4402080          ORR      r0,r0,#0x40000
000016  6008              STR      r0,[r1,#0]
;;;50     	IIC_SCL=0;
000018  2000              MOVS     r0,#0
00001a  4909              LDR      r1,|L7.64|
00001c  6008              STR      r0,[r1,#0]
;;;51     	IIC_SDA=0;//STOP:when CLK is high DATA change form low to high
00001e  4909              LDR      r1,|L7.68|
000020  f8c102a4          STR      r0,[r1,#0x2a4]
;;;52      	delay_us(1);
000024  2001              MOVS     r0,#1
000026  f7fffffe          BL       delay_us_nos
;;;53     	IIC_SCL=1;
00002a  2001              MOVS     r0,#1
00002c  4904              LDR      r1,|L7.64|
00002e  6008              STR      r0,[r1,#0]
;;;54     	IIC_SDA=1;//发送I2C总线结束信号
000030  4904              LDR      r1,|L7.68|
000032  f8c102a4          STR      r0,[r1,#0x2a4]
;;;55     	delay_us(1);
000036  f7fffffe          BL       delay_us_nos
;;;56     }
00003a  bd10              POP      {r4,pc}
;;;57     //等待应答信号到来
                          ENDP

                  |L7.60|
                          DCD      0x40020400
                  |L7.64|
                          DCD      0x424082a0
                  |L7.68|
                          DCD      0x42408000

                          AREA ||i.IIC_Wait_Ack||, CODE, READONLY, ALIGN=2

                  IIC_Wait_Ack PROC
;;;59     //        0，接收应答成功
;;;60     u8 IIC_Wait_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;61     {
;;;62     	u8 ucErrTime=0;
000002  2400              MOVS     r4,#0
;;;63     	SDA_IN();      //SDA设置为输入
000004  4813              LDR      r0,|L8.84|
000006  6800              LDR      r0,[r0,#0]
000008  f4202040          BIC      r0,r0,#0xc0000
00000c  4911              LDR      r1,|L8.84|
00000e  6008              STR      r0,[r1,#0]
000010  4608              MOV      r0,r1
000012  6800              LDR      r0,[r0,#0]
000014  6008              STR      r0,[r1,#0]
;;;64     	IIC_SDA=1;delay_us(1);
000016  2001              MOVS     r0,#1
000018  490f              LDR      r1,|L8.88|
00001a  6008              STR      r0,[r1,#0]
00001c  f7fffffe          BL       delay_us_nos
;;;65     	IIC_SCL=1;delay_us(1);
000020  2001              MOVS     r0,#1
000022  490e              LDR      r1,|L8.92|
000024  f8c102a0          STR      r0,[r1,#0x2a0]
000028  f7fffffe          BL       delay_us_nos
;;;66     	while(READ_SDA)
00002c  e007              B        |L8.62|
                  |L8.46|
;;;67     	{
;;;68     		ucErrTime++;
00002e  1c60              ADDS     r0,r4,#1
000030  b2c4              UXTB     r4,r0
;;;69     		if(ucErrTime>250)
000032  2cfa              CMP      r4,#0xfa
000034  dd03              BLE      |L8.62|
;;;70     		{
;;;71     			IIC_Stop();
000036  f7fffffe          BL       IIC_Stop
;;;72     			return 1;
00003a  2001              MOVS     r0,#1
                  |L8.60|
;;;73     		}
;;;74     	}
;;;75     	IIC_SCL=0;//时钟输出0
;;;76     	return 0;
;;;77     }
00003c  bd10              POP      {r4,pc}
                  |L8.62|
00003e  4806              LDR      r0,|L8.88|
000040  3880              SUBS     r0,r0,#0x80           ;66
000042  6800              LDR      r0,[r0,#0]            ;66
000044  2800              CMP      r0,#0                 ;66
000046  d1f2              BNE      |L8.46|
000048  4903              LDR      r1,|L8.88|
00004a  1f09              SUBS     r1,r1,#4              ;75
00004c  6008              STR      r0,[r1,#0]            ;75
00004e  bf00              NOP                            ;76
000050  e7f4              B        |L8.60|
;;;78     //产生ACK应答
                          ENDP

000052  0000              DCW      0x0000
                  |L8.84|
                          DCD      0x40020400
                  |L8.88|
                          DCD      0x424082a4
                  |L8.92|
                          DCD      0x42408000

;*** Start embedded assembler ***

#line 1 "..\\..\\MySrc\\MPU6050\\myiic.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_myiic_c_IIC_Init____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_myiic_c_IIC_Init____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_myiic_c_IIC_Init____REVSH|
#line 144
|__asm___7_myiic_c_IIC_Init____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_myiic_c_IIC_Init____RRX|
#line 300
|__asm___7_myiic_c_IIC_Init____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
