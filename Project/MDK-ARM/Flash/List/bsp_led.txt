; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_led.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_led.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\MySrc -I..\..\Libraries -I..\..\MySrc\ostask -I..\..\MySrc\MPU6050 -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 -DSTM32F40_41xxx --omf_browse=.\flash\obj\bsp_led.crf ..\..\User\bsp_stm32f4xx\src\bsp_led.c]
                          THUMB

                          AREA ||i.bsp_InitLed||, CODE, READONLY, ALIGN=2

                  bsp_InitLed PROC
;;;10     */
;;;11     void bsp_InitLed(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;12     {
;;;13     	GPIO_InitTypeDef GPIO_InitStructure;
;;;14     
;;;15     	/* 打开GPIO时钟 */
;;;16     	RCC_AHB1PeriphClockCmd(RCC_ALL_LED, ENABLE);
000002  2101              MOVS     r1,#1
000004  2006              MOVS     r0,#6
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;17     
;;;18     
;;;19     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;		/* 设为输出口 */
00000a  2001              MOVS     r0,#1
00000c  f88d0004          STRB     r0,[sp,#4]
;;;20     	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;		/* 设为推挽模式 */
000010  2000              MOVS     r0,#0
000012  f88d0006          STRB     r0,[sp,#6]
;;;21     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;	/* 上下拉电阻不使能 */
000016  f88d0007          STRB     r0,[sp,#7]
;;;22     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;	/* IO口最大速度 */
00001a  2003              MOVS     r0,#3
00001c  f88d0005          STRB     r0,[sp,#5]
;;;23     
;;;24     #ifdef __LED1
;;;25     	bsp_LedOff(1);
000020  2001              MOVS     r0,#1
000022  f7fffffe          BL       bsp_LedOff
;;;26     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED1;
000026  2040              MOVS     r0,#0x40
000028  9000              STR      r0,[sp,#0]
;;;27     	GPIO_Init(GPIO_PORT_LED1, &GPIO_InitStructure);
00002a  4669              MOV      r1,sp
00002c  480b              LDR      r0,|L1.92|
00002e  f7fffffe          BL       GPIO_Init
;;;28     #endif
;;;29     
;;;30     #ifdef __LED2
;;;31     	bsp_LedOff(2);
000032  2002              MOVS     r0,#2
000034  f7fffffe          BL       bsp_LedOff
;;;32     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED2;
000038  f44f4000          MOV      r0,#0x8000
00003c  9000              STR      r0,[sp,#0]
;;;33     	GPIO_Init(GPIO_PORT_LED2, &GPIO_InitStructure);
00003e  4669              MOV      r1,sp
000040  4807              LDR      r0,|L1.96|
000042  f7fffffe          BL       GPIO_Init
;;;34     #endif
;;;35     
;;;36     #ifdef __LED3
;;;37     	bsp_LedOff(3);
000046  2003              MOVS     r0,#3
000048  f7fffffe          BL       bsp_LedOff
;;;38     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED3;
00004c  f44f5000          MOV      r0,#0x2000
000050  9000              STR      r0,[sp,#0]
;;;39     	GPIO_Init(GPIO_PORT_LED3, &GPIO_InitStructure);
000052  4669              MOV      r1,sp
000054  4801              LDR      r0,|L1.92|
000056  f7fffffe          BL       GPIO_Init
;;;40     #endif
;;;41     
;;;42     #ifdef __LED4
;;;43     	bsp_LedOff(4);
;;;44     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED4;
;;;45     	GPIO_Init(GPIO_PORT_LED4, &GPIO_InitStructure);
;;;46     #endif
;;;47     }
00005a  bd1c              POP      {r2-r4,pc}
;;;48     
                          ENDP

                  |L1.92|
                          DCD      0x40020800
                  |L1.96|
                          DCD      0x40020400

                          AREA ||i.bsp_IsLedOn||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  bsp_IsLedOn PROC
;;;150    */
;;;151    uint8_t bsp_IsLedOn(uint8_t _no)
000000  b510              PUSH     {r4,lr}
;;;152    {
000002  4604              MOV      r4,r0
;;;153    	switch (_no)
000004  2c01              CMP      r4,#1
000006  d004              BEQ      |L2.18|
000008  2c02              CMP      r4,#2
00000a  d00a              BEQ      |L2.34|
00000c  2c03              CMP      r4,#3
00000e  d118              BNE      |L2.66|
000010  e00f              B        |L2.50|
                  |L2.18|
;;;154    	{
;;;155    #ifdef __LED1
;;;156    		case 1:	if ((GPIO_PORT_LED1->ODR & GPIO_PIN_LED1) == 0) return 1;break;
000012  4810              LDR      r0,|L2.84|
000014  6800              LDR      r0,[r0,#0]
000016  f0000040          AND      r0,r0,#0x40
00001a  b908              CBNZ     r0,|L2.32|
00001c  2001              MOVS     r0,#1
                  |L2.30|
;;;157    #endif
;;;158    
;;;159    
;;;160    #ifdef __LED2
;;;161    		case 2:	if ((GPIO_PORT_LED2->ODR & GPIO_PIN_LED2) == 0) return 1;break;
;;;162    #endif
;;;163    
;;;164    
;;;165    #ifdef __LED3
;;;166    		case 3:	if ((GPIO_PORT_LED3->ODR & GPIO_PIN_LED3) == 0) return 1;break;
;;;167    #endif
;;;168    
;;;169    
;;;170    #ifdef __LED4
;;;171    		case 4:	if ((GPIO_PORT_LED4->ODR & GPIO_PIN_LED4) == 0) return 1;break;
;;;172    #endif
;;;173    		default:printf("LED%d未开启却被使用\r\n",_no);
;;;174    
;;;175    	}
;;;176    	return 0;
;;;177    }
00001e  bd10              POP      {r4,pc}
                  |L2.32|
000020  e014              B        |L2.76|
                  |L2.34|
000022  480d              LDR      r0,|L2.88|
000024  6800              LDR      r0,[r0,#0]            ;161
000026  f4004000          AND      r0,r0,#0x8000         ;161
00002a  b908              CBNZ     r0,|L2.48|
00002c  2001              MOVS     r0,#1                 ;161
00002e  e7f6              B        |L2.30|
                  |L2.48|
000030  e00c              B        |L2.76|
                  |L2.50|
000032  4808              LDR      r0,|L2.84|
000034  6800              LDR      r0,[r0,#0]            ;166
000036  f4005000          AND      r0,r0,#0x2000         ;166
00003a  b908              CBNZ     r0,|L2.64|
00003c  2001              MOVS     r0,#1                 ;166
00003e  e7ee              B        |L2.30|
                  |L2.64|
000040  e004              B        |L2.76|
                  |L2.66|
000042  4621              MOV      r1,r4                 ;173
000044  a005              ADR      r0,|L2.92|
000046  f7fffffe          BL       __2printf
00004a  bf00              NOP                            ;153
                  |L2.76|
00004c  bf00              NOP                            ;156
00004e  2000              MOVS     r0,#0                 ;176
000050  e7e5              B        |L2.30|
;;;178    
                          ENDP

000052  0000              DCW      0x0000
                  |L2.84|
                          DCD      0x40020814
                  |L2.88|
                          DCD      0x40020414
                  |L2.92|
00005c  4c454425          DCB      "LED%d",206,180,191,170,198,244,200,180,177,187,202,185,211
000060  64ceb4bf
000064  aac6f4c8
000068  b4b1bbca
00006c  b9d3    
00006e  c30d0a00          DCB      195,"\r\n",0
000072  00                DCB      0
000073  00                DCB      0

                          AREA ||i.bsp_LedOff||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  bsp_LedOff PROC
;;;88     */
;;;89     void bsp_LedOff(uint8_t _no)
000000  b510              PUSH     {r4,lr}
;;;90     {
000002  4604              MOV      r4,r0
;;;91     	switch (_no)
000004  2c01              CMP      r4,#1
000006  d004              BEQ      |L3.18|
000008  2c02              CMP      r4,#2
00000a  d006              BEQ      |L3.26|
00000c  2c03              CMP      r4,#3
00000e  d10e              BNE      |L3.46|
000010  e008              B        |L3.36|
                  |L3.18|
;;;92     	{
;;;93     #ifdef __LED1
;;;94     		case 1:GPIO_PORT_LED1->BSRRL = GPIO_PIN_LED1;break;
000012  2040              MOVS     r0,#0x40
000014  4909              LDR      r1,|L3.60|
000016  8008              STRH     r0,[r1,#0]
000018  e00e              B        |L3.56|
                  |L3.26|
;;;95     #endif
;;;96     
;;;97     #ifdef __LED2
;;;98     		case 2:GPIO_PORT_LED2->BSRRL = GPIO_PIN_LED2;break;
00001a  f44f4000          MOV      r0,#0x8000
00001e  4908              LDR      r1,|L3.64|
000020  8008              STRH     r0,[r1,#0]
000022  e009              B        |L3.56|
                  |L3.36|
;;;99     #endif
;;;100    
;;;101    #ifdef __LED3
;;;102    		case 3:GPIO_PORT_LED3->BSRRL = GPIO_PIN_LED3;break;
000024  f44f5000          MOV      r0,#0x2000
000028  4904              LDR      r1,|L3.60|
00002a  8008              STRH     r0,[r1,#0]
00002c  e004              B        |L3.56|
                  |L3.46|
;;;103    #endif
;;;104    
;;;105    #ifdef __LED4
;;;106    		case 4:GPIO_PORT_LED4->BSRRL = GPIO_PIN_LED4;break;
;;;107    #endif
;;;108    		default:printf("LED%d未开启却被使用\r\n",_no);
00002e  4621              MOV      r1,r4
000030  a004              ADR      r0,|L3.68|
000032  f7fffffe          BL       __2printf
000036  bf00              NOP                            ;91
                  |L3.56|
000038  bf00              NOP                            ;94
;;;109    	}
;;;110    }
00003a  bd10              POP      {r4,pc}
;;;111    
                          ENDP

                  |L3.60|
                          DCD      0x40020818
                  |L3.64|
                          DCD      0x40020418
                  |L3.68|
000044  4c454425          DCB      "LED%d",206,180,191,170,198,244,200,180,177,187,202,185,211
000048  64ceb4bf
00004c  aac6f4c8
000050  b4b1bbca
000054  b9d3    
000056  c30d0a00          DCB      195,"\r\n",0
00005a  00                DCB      0
00005b  00                DCB      0

                          AREA ||i.bsp_LedOn||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  bsp_LedOn PROC
;;;56     */
;;;57     void bsp_LedOn(uint8_t _no)
000000  b510              PUSH     {r4,lr}
;;;58     {
000002  4604              MOV      r4,r0
;;;59     	switch (_no)
000004  2c01              CMP      r4,#1
000006  d004              BEQ      |L4.18|
000008  2c02              CMP      r4,#2
00000a  d006              BEQ      |L4.26|
00000c  2c03              CMP      r4,#3
00000e  d10e              BNE      |L4.46|
000010  e008              B        |L4.36|
                  |L4.18|
;;;60     	{
;;;61     #ifdef __LED1
;;;62     		case 1:GPIO_PORT_LED1->BSRRH = GPIO_PIN_LED1;break;
000012  2040              MOVS     r0,#0x40
000014  4909              LDR      r1,|L4.60|
000016  8008              STRH     r0,[r1,#0]
000018  e00e              B        |L4.56|
                  |L4.26|
;;;63     #endif
;;;64     
;;;65     #ifdef __LED2
;;;66     		case 2:GPIO_PORT_LED2->BSRRH = GPIO_PIN_LED2;break;
00001a  f44f4000          MOV      r0,#0x8000
00001e  4908              LDR      r1,|L4.64|
000020  8008              STRH     r0,[r1,#0]
000022  e009              B        |L4.56|
                  |L4.36|
;;;67     #endif
;;;68     
;;;69     #ifdef __LED3
;;;70     		case 3:GPIO_PORT_LED3->BSRRH = GPIO_PIN_LED3;break;
000024  f44f5000          MOV      r0,#0x2000
000028  4904              LDR      r1,|L4.60|
00002a  8008              STRH     r0,[r1,#0]
00002c  e004              B        |L4.56|
                  |L4.46|
;;;71     #endif
;;;72     
;;;73     #ifdef __LED4
;;;74     		case 4:GPIO_PORT_LED4->BSRRH = GPIO_PIN_LED4;break;
;;;75     #endif
;;;76     		default:printf("LED%d未开启却被使用\r\n",_no);
00002e  4621              MOV      r1,r4
000030  a004              ADR      r0,|L4.68|
000032  f7fffffe          BL       __2printf
000036  bf00              NOP                            ;59
                  |L4.56|
000038  bf00              NOP                            ;62
;;;77     
;;;78     	}
;;;79     }
00003a  bd10              POP      {r4,pc}
;;;80     
                          ENDP

                  |L4.60|
                          DCD      0x4002081a
                  |L4.64|
                          DCD      0x4002041a
                  |L4.68|
000044  4c454425          DCB      "LED%d",206,180,191,170,198,244,200,180,177,187,202,185,211
000048  64ceb4bf
00004c  aac6f4c8
000050  b4b1bbca
000054  b9d3    
000056  c30d0a00          DCB      195,"\r\n",0
00005a  00                DCB      0
00005b  00                DCB      0

                          AREA ||i.bsp_LedToggle||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  bsp_LedToggle PROC
;;;119    */
;;;120    void bsp_LedToggle(uint8_t _no)
000000  b510              PUSH     {r4,lr}
;;;121    {
000002  4604              MOV      r4,r0
;;;122    	switch (_no)
000004  2c01              CMP      r4,#1
000006  d004              BEQ      |L5.18|
000008  2c02              CMP      r4,#2
00000a  d009              BEQ      |L5.32|
00000c  2c03              CMP      r4,#3
00000e  d115              BNE      |L5.60|
000010  e00d              B        |L5.46|
                  |L5.18|
;;;123    	{
;;;124    #ifdef __LED1
;;;125    		case 1:GPIO_PORT_LED1->ODR ^= GPIO_PIN_LED1;break;
000012  480e              LDR      r0,|L5.76|
000014  6800              LDR      r0,[r0,#0]
000016  f0800040          EOR      r0,r0,#0x40
00001a  490c              LDR      r1,|L5.76|
00001c  6008              STR      r0,[r1,#0]
00001e  e012              B        |L5.70|
                  |L5.32|
;;;126    #endif
;;;127    
;;;128    #ifdef __LED2
;;;129    		case 2:GPIO_PORT_LED2->ODR ^= GPIO_PIN_LED2;break;
000020  480b              LDR      r0,|L5.80|
000022  6800              LDR      r0,[r0,#0]
000024  f4804000          EOR      r0,r0,#0x8000
000028  4909              LDR      r1,|L5.80|
00002a  6008              STR      r0,[r1,#0]
00002c  e00b              B        |L5.70|
                  |L5.46|
;;;130    #endif
;;;131    
;;;132    #ifdef __LED3
;;;133    		case 3:GPIO_PORT_LED3->ODR ^= GPIO_PIN_LED3;break;
00002e  4807              LDR      r0,|L5.76|
000030  6800              LDR      r0,[r0,#0]
000032  f4805000          EOR      r0,r0,#0x2000
000036  4905              LDR      r1,|L5.76|
000038  6008              STR      r0,[r1,#0]
00003a  e004              B        |L5.70|
                  |L5.60|
;;;134    #endif
;;;135    
;;;136    #ifdef __LED4
;;;137    		case 4:GPIO_PORT_LED4->ODR ^= GPIO_PIN_LED4;break;
;;;138    #endif
;;;139    		default:printf("LED%d未开启却被使用\r\n",_no);
00003c  4621              MOV      r1,r4
00003e  a005              ADR      r0,|L5.84|
000040  f7fffffe          BL       __2printf
000044  bf00              NOP                            ;122
                  |L5.70|
000046  bf00              NOP                            ;125
;;;140    	}
;;;141    }
000048  bd10              POP      {r4,pc}
;;;142    
                          ENDP

00004a  0000              DCW      0x0000
                  |L5.76|
                          DCD      0x40020814
                  |L5.80|
                          DCD      0x40020414
                  |L5.84|
000054  4c454425          DCB      "LED%d",206,180,191,170,198,244,200,180,177,187,202,185,211
000058  64ceb4bf
00005c  aac6f4c8
000060  b4b1bbca
000064  b9d3    
000066  c30d0a00          DCB      195,"\r\n",0
00006a  00                DCB      0
00006b  00                DCB      0

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\src\\bsp_led.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_bsp_led_c_ba23b041____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REVSH|
#line 144
|__asm___9_bsp_led_c_ba23b041____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____RRX|
#line 300
|__asm___9_bsp_led_c_ba23b041____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
