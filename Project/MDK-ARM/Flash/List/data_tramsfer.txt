; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\flash\obj\data_tramsfer.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\data_tramsfer.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\MySrc -I..\..\Libraries -I..\..\MySrc\ostask -I..\..\MySrc\MPU6050 -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 -DSTM32F40_41xxx --omf_browse=.\flash\obj\data_tramsfer.crf ..\..\MySrc\Data_Tramsfer.cpp]
                          THUMB

                          AREA ||i.ANO_Data1_Send||, CODE, READONLY, ALIGN=2

                  ANO_Data1_Send PROC
;;;144    
;;;145    void ANO_Data1_Send(u8 temp,float Data1)
000000  b5f0              PUSH     {r4-r7,lr}
;;;146    {
000002  ed2d8b02          VPUSH    {d8}
000006  b081              SUB      sp,sp,#4
000008  4606              MOV      r6,r0
00000a  eeb08a40          VMOV.F32 s16,s0
;;;147    	u8 _cnt=0;
00000e  2400              MOVS     r4,#0
;;;148    	u8 sum= 0;
000010  2700              MOVS     r7,#0
;;;149    	u8 i=0;
000012  2500              MOVS     r5,#0
;;;150    	int16_t _temp=0;
000014  2000              MOVS     r0,#0
000016  9000              STR      r0,[sp,#0]
;;;151    
;;;152    	data_to_send[_cnt++]=0xAA;//帧头
000018  22aa              MOVS     r2,#0xaa
00001a  4621              MOV      r1,r4
00001c  1c64              ADDS     r4,r4,#1
00001e  481b              LDR      r0,|L1.140|
000020  5442              STRB     r2,[r0,r1]
;;;153    	data_to_send[_cnt++]=0xAA;//帧头
000022  4621              MOV      r1,r4
000024  1c64              ADDS     r4,r4,#1
000026  5442              STRB     r2,[r0,r1]
;;;154    	data_to_send[_cnt++]=temp;//功能字
000028  4621              MOV      r1,r4
00002a  1c64              ADDS     r4,r4,#1
00002c  5446              STRB     r6,[r0,r1]
;;;155    	data_to_send[_cnt++]=0;//数据长度
00002e  2200              MOVS     r2,#0
000030  4621              MOV      r1,r4
000032  1c64              ADDS     r4,r4,#1
000034  5442              STRB     r2,[r0,r1]
;;;156    
;;;157    	_temp = (int)Data1;
000036  eebd0ac8          VCVT.S32.F32 s0,s16
00003a  ee100a10          VMOV     r0,s0
00003e  b200              SXTH     r0,r0
000040  9000              STR      r0,[sp,#0]
;;;158    	data_to_send[_cnt++]=BYTE1(_temp);
000042  f89d2001          LDRB     r2,[sp,#1]
000046  4621              MOV      r1,r4
000048  1c64              ADDS     r4,r4,#1
00004a  4810              LDR      r0,|L1.140|
00004c  5442              STRB     r2,[r0,r1]
;;;159    	data_to_send[_cnt++]=BYTE0(_temp);
00004e  f89d2000          LDRB     r2,[sp,#0]
000052  4621              MOV      r1,r4
000054  1c64              ADDS     r4,r4,#1
000056  5442              STRB     r2,[r0,r1]
;;;160    
;;;161    	data_to_send[3] = _cnt-4;//数据长度
000058  1f20              SUBS     r0,r4,#4
00005a  490c              LDR      r1,|L1.140|
00005c  70c8              STRB     r0,[r1,#3]
;;;162    	for(i=0;i<_cnt;i++) sum += data_to_send[i];	//求取校验值
00005e  bf00              NOP      
000060  e005              B        |L1.110|
                  |L1.98|
000062  480a              LDR      r0,|L1.140|
000064  5d40              LDRB     r0,[r0,r5]
000066  4438              ADD      r0,r0,r7
000068  b2c7              UXTB     r7,r0
00006a  1c68              ADDS     r0,r5,#1
00006c  b2c5              UXTB     r5,r0
                  |L1.110|
00006e  42a5              CMP      r5,r4
000070  dbf7              BLT      |L1.98|
;;;163    	data_to_send[_cnt++]=sum;//校验值
000072  4620              MOV      r0,r4
000074  1c61              ADDS     r1,r4,#1
000076  b2cc              UXTB     r4,r1
000078  4904              LDR      r1,|L1.140|
00007a  540f              STRB     r7,[r1,r0]
;;;164    
;;;165    #if USE_UART1_FIFO_DMA
;;;166    	USART1_DMA_Send((uint8_t*)data_to_send,_cnt);
00007c  4621              MOV      r1,r4
00007e  4803              LDR      r0,|L1.140|
000080  f7fffffe          BL       USART1_DMA_Send
;;;167    #else
;;;168    	USART1_SendString(_cnt,data_to_send);
;;;169    #endif
;;;170    }
000084  b001              ADD      sp,sp,#4
000086  ecbd8b02          VPOP     {d8}
00008a  bdf0              POP      {r4-r7,pc}
;;;171    
                          ENDP

                  |L1.140|
                          DCD      data_to_send

                          AREA ||i.ANO_Data2_Send||, CODE, READONLY, ALIGN=2

                  ANO_Data2_Send PROC
;;;114    
;;;115    void ANO_Data2_Send(u8 temp,float Data1, float Data2)
000000  b5f0              PUSH     {r4-r7,lr}
;;;116    {
000002  ed2d8b02          VPUSH    {d8}
000006  b081              SUB      sp,sp,#4
000008  4606              MOV      r6,r0
00000a  eeb08a40          VMOV.F32 s16,s0
00000e  eef08a60          VMOV.F32 s17,s1
;;;117    	u8 _cnt=0;
000012  2400              MOVS     r4,#0
;;;118    	u8 sum= 0;
000014  2700              MOVS     r7,#0
;;;119    	u8 i=0;
000016  2500              MOVS     r5,#0
;;;120    	int16_t _temp=0;
000018  2000              MOVS     r0,#0
00001a  9000              STR      r0,[sp,#0]
;;;121    
;;;122    	data_to_send[_cnt++]=0xAA;//帧头
00001c  22aa              MOVS     r2,#0xaa
00001e  4621              MOV      r1,r4
000020  1c64              ADDS     r4,r4,#1
000022  4824              LDR      r0,|L2.180|
000024  5442              STRB     r2,[r0,r1]
;;;123    	data_to_send[_cnt++]=0xAA;//帧头
000026  4621              MOV      r1,r4
000028  1c64              ADDS     r4,r4,#1
00002a  5442              STRB     r2,[r0,r1]
;;;124    	data_to_send[_cnt++]=temp;//功能字
00002c  4621              MOV      r1,r4
00002e  1c64              ADDS     r4,r4,#1
000030  5446              STRB     r6,[r0,r1]
;;;125    	data_to_send[_cnt++]=0;//数据长度
000032  2200              MOVS     r2,#0
000034  4621              MOV      r1,r4
000036  1c64              ADDS     r4,r4,#1
000038  5442              STRB     r2,[r0,r1]
;;;126    
;;;127    	_temp = (int)Data1;
00003a  eebd0ac8          VCVT.S32.F32 s0,s16
00003e  ee100a10          VMOV     r0,s0
000042  b200              SXTH     r0,r0
000044  9000              STR      r0,[sp,#0]
;;;128    	data_to_send[_cnt++]=BYTE1(_temp);
000046  f89d2001          LDRB     r2,[sp,#1]
00004a  4621              MOV      r1,r4
00004c  1c64              ADDS     r4,r4,#1
00004e  4819              LDR      r0,|L2.180|
000050  5442              STRB     r2,[r0,r1]
;;;129    	data_to_send[_cnt++]=BYTE0(_temp);
000052  f89d2000          LDRB     r2,[sp,#0]
000056  4621              MOV      r1,r4
000058  1c64              ADDS     r4,r4,#1
00005a  5442              STRB     r2,[r0,r1]
;;;130    	_temp = (int)Data2;
00005c  eebd0ae8          VCVT.S32.F32 s0,s17
000060  ee100a10          VMOV     r0,s0
000064  b200              SXTH     r0,r0
000066  9000              STR      r0,[sp,#0]
;;;131    	data_to_send[_cnt++]=BYTE1(_temp);
000068  f89d2001          LDRB     r2,[sp,#1]
00006c  4621              MOV      r1,r4
00006e  1c64              ADDS     r4,r4,#1
000070  4810              LDR      r0,|L2.180|
000072  5442              STRB     r2,[r0,r1]
;;;132    	data_to_send[_cnt++]=BYTE0(_temp);
000074  f89d2000          LDRB     r2,[sp,#0]
000078  4620              MOV      r0,r4
00007a  1c61              ADDS     r1,r4,#1
00007c  b2cc              UXTB     r4,r1
00007e  490d              LDR      r1,|L2.180|
000080  540a              STRB     r2,[r1,r0]
;;;133    	 //_temp=0;//先清零
;;;134    	data_to_send[3] = _cnt-4;//数据长度
000082  1f20              SUBS     r0,r4,#4
000084  70c8              STRB     r0,[r1,#3]
;;;135    	for(i=0;i<_cnt;i++) sum += data_to_send[i];	//求取校验值
000086  bf00              NOP      
000088  e005              B        |L2.150|
                  |L2.138|
00008a  480a              LDR      r0,|L2.180|
00008c  5d40              LDRB     r0,[r0,r5]
00008e  4438              ADD      r0,r0,r7
000090  b2c7              UXTB     r7,r0
000092  1c68              ADDS     r0,r5,#1
000094  b2c5              UXTB     r5,r0
                  |L2.150|
000096  42a5              CMP      r5,r4
000098  dbf7              BLT      |L2.138|
;;;136    	data_to_send[_cnt++]=sum;//校验值
00009a  4620              MOV      r0,r4
00009c  1c61              ADDS     r1,r4,#1
00009e  b2cc              UXTB     r4,r1
0000a0  4904              LDR      r1,|L2.180|
0000a2  540f              STRB     r7,[r1,r0]
;;;137    
;;;138    #if USE_UART1_FIFO_DMA
;;;139    	USART1_DMA_Send((uint8_t*)data_to_send,_cnt);
0000a4  4621              MOV      r1,r4
0000a6  4803              LDR      r0,|L2.180|
0000a8  f7fffffe          BL       USART1_DMA_Send
;;;140    #else
;;;141    	USART1_SendString(_cnt,data_to_send);
;;;142    #endif
;;;143    }
0000ac  b001              ADD      sp,sp,#4
0000ae  ecbd8b02          VPOP     {d8}
0000b2  bdf0              POP      {r4-r7,pc}
;;;144    
                          ENDP

                  |L2.180|
                          DCD      data_to_send

                          AREA ||i.ANO_Data3_Send||, CODE, READONLY, ALIGN=2

                  ANO_Data3_Send PROC
;;;81     
;;;82     void ANO_Data3_Send(u8 temp,float Data1, float Data2, float Data3)
000000  b5f0              PUSH     {r4-r7,lr}
;;;83     {
000002  ed2d8b04          VPUSH    {d8-d9}
000006  b081              SUB      sp,sp,#4
000008  4606              MOV      r6,r0
00000a  eeb08a40          VMOV.F32 s16,s0
00000e  eef08a60          VMOV.F32 s17,s1
000012  eeb09a41          VMOV.F32 s18,s2
;;;84     	u8 _cnt=0;
000016  2400              MOVS     r4,#0
;;;85     	u8 sum= 0;
000018  2700              MOVS     r7,#0
;;;86     	u8 i=0;
00001a  2500              MOVS     r5,#0
;;;87     	int16_t _temp=0;
00001c  2000              MOVS     r0,#0
00001e  9000              STR      r0,[sp,#0]
;;;88     
;;;89     	data_to_send[_cnt++]=0xAA;//帧头
000020  22aa              MOVS     r2,#0xaa
000022  4621              MOV      r1,r4
000024  1c64              ADDS     r4,r4,#1
000026  482e              LDR      r0,|L3.224|
000028  5442              STRB     r2,[r0,r1]
;;;90     	data_to_send[_cnt++]=0xAA;//帧头
00002a  4621              MOV      r1,r4
00002c  1c64              ADDS     r4,r4,#1
00002e  5442              STRB     r2,[r0,r1]
;;;91     	data_to_send[_cnt++]=temp;//功能字
000030  4621              MOV      r1,r4
000032  1c64              ADDS     r4,r4,#1
000034  5446              STRB     r6,[r0,r1]
;;;92     	data_to_send[_cnt++]=0;//数据长度
000036  2200              MOVS     r2,#0
000038  4621              MOV      r1,r4
00003a  1c64              ADDS     r4,r4,#1
00003c  5442              STRB     r2,[r0,r1]
;;;93     
;;;94     	_temp = (int)Data1;
00003e  eebd0ac8          VCVT.S32.F32 s0,s16
000042  ee100a10          VMOV     r0,s0
000046  b200              SXTH     r0,r0
000048  9000              STR      r0,[sp,#0]
;;;95     	data_to_send[_cnt++]=BYTE1(_temp);
00004a  f89d2001          LDRB     r2,[sp,#1]
00004e  4621              MOV      r1,r4
000050  1c64              ADDS     r4,r4,#1
000052  4823              LDR      r0,|L3.224|
000054  5442              STRB     r2,[r0,r1]
;;;96     	data_to_send[_cnt++]=BYTE0(_temp);
000056  f89d2000          LDRB     r2,[sp,#0]
00005a  4621              MOV      r1,r4
00005c  1c64              ADDS     r4,r4,#1
00005e  5442              STRB     r2,[r0,r1]
;;;97     	_temp = (int)Data2;
000060  eebd0ae8          VCVT.S32.F32 s0,s17
000064  ee100a10          VMOV     r0,s0
000068  b200              SXTH     r0,r0
00006a  9000              STR      r0,[sp,#0]
;;;98     	data_to_send[_cnt++]=BYTE1(_temp);
00006c  f89d2001          LDRB     r2,[sp,#1]
000070  4621              MOV      r1,r4
000072  1c64              ADDS     r4,r4,#1
000074  481a              LDR      r0,|L3.224|
000076  5442              STRB     r2,[r0,r1]
;;;99     	data_to_send[_cnt++]=BYTE0(_temp);
000078  f89d2000          LDRB     r2,[sp,#0]
00007c  4620              MOV      r0,r4
00007e  1c61              ADDS     r1,r4,#1
000080  b2cc              UXTB     r4,r1
000082  4917              LDR      r1,|L3.224|
000084  540a              STRB     r2,[r1,r0]
;;;100    	_temp = (int)Data3;
000086  eebd0ac9          VCVT.S32.F32 s0,s18
00008a  ee100a10          VMOV     r0,s0
00008e  b200              SXTH     r0,r0
000090  9000              STR      r0,[sp,#0]
;;;101    	data_to_send[_cnt++]=BYTE1(_temp);
000092  f89d2001          LDRB     r2,[sp,#1]
000096  4620              MOV      r0,r4
000098  1c61              ADDS     r1,r4,#1
00009a  b2cc              UXTB     r4,r1
00009c  4910              LDR      r1,|L3.224|
00009e  540a              STRB     r2,[r1,r0]
;;;102    	data_to_send[_cnt++]=BYTE0(_temp);
0000a0  f89d2000          LDRB     r2,[sp,#0]
0000a4  4620              MOV      r0,r4
0000a6  1c61              ADDS     r1,r4,#1
0000a8  b2cc              UXTB     r4,r1
0000aa  490d              LDR      r1,|L3.224|
0000ac  540a              STRB     r2,[r1,r0]
;;;103    	 //_temp=0;//先清零
;;;104    	data_to_send[3] = _cnt-4;//数据长度
0000ae  1f20              SUBS     r0,r4,#4
0000b0  70c8              STRB     r0,[r1,#3]
;;;105    	for(i=0;i<_cnt;i++) sum += data_to_send[i];	//求取校验值
0000b2  bf00              NOP      
0000b4  e005              B        |L3.194|
                  |L3.182|
0000b6  480a              LDR      r0,|L3.224|
0000b8  5d40              LDRB     r0,[r0,r5]
0000ba  4438              ADD      r0,r0,r7
0000bc  b2c7              UXTB     r7,r0
0000be  1c68              ADDS     r0,r5,#1
0000c0  b2c5              UXTB     r5,r0
                  |L3.194|
0000c2  42a5              CMP      r5,r4
0000c4  dbf7              BLT      |L3.182|
;;;106    	data_to_send[_cnt++]=sum;//校验值
0000c6  4620              MOV      r0,r4
0000c8  1c61              ADDS     r1,r4,#1
0000ca  b2cc              UXTB     r4,r1
0000cc  4904              LDR      r1,|L3.224|
0000ce  540f              STRB     r7,[r1,r0]
;;;107    
;;;108    #if USE_UART1_FIFO_DMA
;;;109    	USART1_DMA_Send((uint8_t*)data_to_send,_cnt);
0000d0  4621              MOV      r1,r4
0000d2  4803              LDR      r0,|L3.224|
0000d4  f7fffffe          BL       USART1_DMA_Send
;;;110    #else
;;;111    	USART1_SendString(_cnt,data_to_send);
;;;112    #endif
;;;113    }
0000d8  b001              ADD      sp,sp,#4
0000da  ecbd8b04          VPOP     {d8-d9}
0000de  bdf0              POP      {r4-r7,pc}
;;;114    
                          ENDP

                  |L3.224|
                          DCD      data_to_send

                          AREA ||i.ANO_Data6_Send||, CODE, READONLY, ALIGN=2

                  ANO_Data6_Send PROC
;;;4      
;;;5      void ANO_Data6_Send(u8 temp,float Data1, float Data2, float Data3, float Data4, float Data5, float Data6)
000000  b5f0              PUSH     {r4-r7,lr}
;;;6      {
000002  ed2d8b06          VPUSH    {d8-d10}
000006  b081              SUB      sp,sp,#4
000008  4606              MOV      r6,r0
00000a  eeb08a40          VMOV.F32 s16,s0
00000e  eef08a60          VMOV.F32 s17,s1
000012  eeb09a41          VMOV.F32 s18,s2
000016  eef09a61          VMOV.F32 s19,s3
00001a  eeb0aa42          VMOV.F32 s20,s4
00001e  eef0aa62          VMOV.F32 s21,s5
;;;7      	u8 _cnt=0;
000022  2400              MOVS     r4,#0
;;;8      	u8 sum= 0;
000024  2700              MOVS     r7,#0
;;;9      	u8 i=0;
000026  2500              MOVS     r5,#0
;;;10     	int16_t _temp=0;
000028  2000              MOVS     r0,#0
00002a  9000              STR      r0,[sp,#0]
;;;11     
;;;12     	data_to_send[_cnt++]=0xAA;//帧头
00002c  22aa              MOVS     r2,#0xaa
00002e  4621              MOV      r1,r4
000030  1c64              ADDS     r4,r4,#1
000032  484d              LDR      r0,|L4.360|
000034  5442              STRB     r2,[r0,r1]
;;;13     	data_to_send[_cnt++]=0xAA;//帧头
000036  4621              MOV      r1,r4
000038  1c64              ADDS     r4,r4,#1
00003a  5442              STRB     r2,[r0,r1]
;;;14     	data_to_send[_cnt++]=temp;//功能字
00003c  4621              MOV      r1,r4
00003e  1c64              ADDS     r4,r4,#1
000040  5446              STRB     r6,[r0,r1]
;;;15     	data_to_send[_cnt++]=0;//数据长度
000042  2200              MOVS     r2,#0
000044  4621              MOV      r1,r4
000046  1c64              ADDS     r4,r4,#1
000048  5442              STRB     r2,[r0,r1]
;;;16     
;;;17     	_temp = (int)Data1;
00004a  eebd0ac8          VCVT.S32.F32 s0,s16
00004e  ee100a10          VMOV     r0,s0
000052  b200              SXTH     r0,r0
000054  9000              STR      r0,[sp,#0]
;;;18     	data_to_send[_cnt++]=BYTE1(_temp);
000056  f89d2001          LDRB     r2,[sp,#1]
00005a  4621              MOV      r1,r4
00005c  1c64              ADDS     r4,r4,#1
00005e  4842              LDR      r0,|L4.360|
000060  5442              STRB     r2,[r0,r1]
;;;19     	data_to_send[_cnt++]=BYTE0(_temp);
000062  f89d2000          LDRB     r2,[sp,#0]
000066  4621              MOV      r1,r4
000068  1c64              ADDS     r4,r4,#1
00006a  5442              STRB     r2,[r0,r1]
;;;20     	_temp = (int)Data2;
00006c  eebd0ae8          VCVT.S32.F32 s0,s17
000070  ee100a10          VMOV     r0,s0
000074  b200              SXTH     r0,r0
000076  9000              STR      r0,[sp,#0]
;;;21     	data_to_send[_cnt++]=BYTE1(_temp);
000078  f89d2001          LDRB     r2,[sp,#1]
00007c  4621              MOV      r1,r4
00007e  1c64              ADDS     r4,r4,#1
000080  4839              LDR      r0,|L4.360|
000082  5442              STRB     r2,[r0,r1]
;;;22     	data_to_send[_cnt++]=BYTE0(_temp);
000084  f89d2000          LDRB     r2,[sp,#0]
000088  4620              MOV      r0,r4
00008a  1c61              ADDS     r1,r4,#1
00008c  b2cc              UXTB     r4,r1
00008e  4936              LDR      r1,|L4.360|
000090  540a              STRB     r2,[r1,r0]
;;;23     	_temp = (int)Data3;
000092  eebd0ac9          VCVT.S32.F32 s0,s18
000096  ee100a10          VMOV     r0,s0
00009a  b200              SXTH     r0,r0
00009c  9000              STR      r0,[sp,#0]
;;;24     	data_to_send[_cnt++]=BYTE1(_temp);
00009e  f89d2001          LDRB     r2,[sp,#1]
0000a2  4620              MOV      r0,r4
0000a4  1c61              ADDS     r1,r4,#1
0000a6  b2cc              UXTB     r4,r1
0000a8  492f              LDR      r1,|L4.360|
0000aa  540a              STRB     r2,[r1,r0]
;;;25     	data_to_send[_cnt++]=BYTE0(_temp);
0000ac  f89d2000          LDRB     r2,[sp,#0]
0000b0  4621              MOV      r1,r4
0000b2  1c60              ADDS     r0,r4,#1
0000b4  b2c4              UXTB     r4,r0
0000b6  482c              LDR      r0,|L4.360|
0000b8  5442              STRB     r2,[r0,r1]
;;;26     	_temp = (int)Data4;
0000ba  eebd0ae9          VCVT.S32.F32 s0,s19
0000be  ee100a10          VMOV     r0,s0
0000c2  b200              SXTH     r0,r0
0000c4  9000              STR      r0,[sp,#0]
;;;27     	data_to_send[_cnt++]=BYTE1(_temp);
0000c6  f89d2001          LDRB     r2,[sp,#1]
0000ca  4620              MOV      r0,r4
0000cc  1c61              ADDS     r1,r4,#1
0000ce  b2cc              UXTB     r4,r1
0000d0  4925              LDR      r1,|L4.360|
0000d2  540a              STRB     r2,[r1,r0]
;;;28     	data_to_send[_cnt++]=BYTE0(_temp);
0000d4  f89d2000          LDRB     r2,[sp,#0]
0000d8  4620              MOV      r0,r4
0000da  1c61              ADDS     r1,r4,#1
0000dc  b2cc              UXTB     r4,r1
0000de  4922              LDR      r1,|L4.360|
0000e0  540a              STRB     r2,[r1,r0]
;;;29     		_temp = (int)Data5;
0000e2  eebd0aca          VCVT.S32.F32 s0,s20
0000e6  ee100a10          VMOV     r0,s0
0000ea  b200              SXTH     r0,r0
0000ec  9000              STR      r0,[sp,#0]
;;;30     	data_to_send[_cnt++]=BYTE1(_temp);
0000ee  f89d2001          LDRB     r2,[sp,#1]
0000f2  4620              MOV      r0,r4
0000f4  1c61              ADDS     r1,r4,#1
0000f6  b2cc              UXTB     r4,r1
0000f8  491b              LDR      r1,|L4.360|
0000fa  540a              STRB     r2,[r1,r0]
;;;31     	data_to_send[_cnt++]=BYTE0(_temp);
0000fc  f89d2000          LDRB     r2,[sp,#0]
000100  4620              MOV      r0,r4
000102  1c61              ADDS     r1,r4,#1
000104  b2cc              UXTB     r4,r1
000106  4918              LDR      r1,|L4.360|
000108  540a              STRB     r2,[r1,r0]
;;;32     	_temp = (int)Data6;
00010a  eebd0aea          VCVT.S32.F32 s0,s21
00010e  ee100a10          VMOV     r0,s0
000112  b200              SXTH     r0,r0
000114  9000              STR      r0,[sp,#0]
;;;33     	data_to_send[_cnt++]=BYTE1(_temp);
000116  f89d2001          LDRB     r2,[sp,#1]
00011a  4620              MOV      r0,r4
00011c  1c61              ADDS     r1,r4,#1
00011e  b2cc              UXTB     r4,r1
000120  4911              LDR      r1,|L4.360|
000122  540a              STRB     r2,[r1,r0]
;;;34     	data_to_send[_cnt++]=BYTE0(_temp);
000124  f89d2000          LDRB     r2,[sp,#0]
000128  4621              MOV      r1,r4
00012a  1c60              ADDS     r0,r4,#1
00012c  b2c4              UXTB     r4,r0
00012e  480e              LDR      r0,|L4.360|
000130  5442              STRB     r2,[r0,r1]
;;;35     	 //_temp=0;//先清零
;;;36     	data_to_send[3] = _cnt-4;//数据长度
000132  1f20              SUBS     r0,r4,#4
000134  490c              LDR      r1,|L4.360|
000136  70c8              STRB     r0,[r1,#3]
;;;37     	for(i=0;i<_cnt;i++) sum += data_to_send[i];	//求取校验值
000138  bf00              NOP      
00013a  e005              B        |L4.328|
                  |L4.316|
00013c  480a              LDR      r0,|L4.360|
00013e  5d40              LDRB     r0,[r0,r5]
000140  4438              ADD      r0,r0,r7
000142  b2c7              UXTB     r7,r0
000144  1c68              ADDS     r0,r5,#1
000146  b2c5              UXTB     r5,r0
                  |L4.328|
000148  42a5              CMP      r5,r4
00014a  dbf7              BLT      |L4.316|
;;;38     	data_to_send[_cnt++]=sum;//校验值
00014c  4620              MOV      r0,r4
00014e  1c61              ADDS     r1,r4,#1
000150  b2cc              UXTB     r4,r1
000152  4905              LDR      r1,|L4.360|
000154  540f              STRB     r7,[r1,r0]
;;;39     
;;;40     	USART1_DMA_Send((uint8_t*)data_to_send,_cnt);
000156  4621              MOV      r1,r4
000158  4803              LDR      r0,|L4.360|
00015a  f7fffffe          BL       USART1_DMA_Send
;;;41     //#if USE_UART1_FIFO_DMA
;;;42     //	USART1_DMA_Send((uint8_t*)data_to_send,_cnt);
;;;43     //#else
;;;44     //	USART1_SendString(_cnt,data_to_send);
;;;45     //#endif
;;;46     }
00015e  b001              ADD      sp,sp,#4
000160  ecbd8b06          VPOP     {d8-d10}
000164  bdf0              POP      {r4-r7,pc}
;;;47     
                          ENDP

000166  0000              DCW      0x0000
                  |L4.360|
                          DCD      data_to_send

                          AREA ||i.USART1_SendString||, CODE, READONLY, ALIGN=2

                  USART1_SendString PROC
;;;171    
;;;172    void USART1_SendString(u8 len,u8 *data)
000000  b570              PUSH     {r4-r6,lr}
;;;173    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;174    	u8 i;
;;;175    	for(i=0;i<len;i++)
000006  2400              MOVS     r4,#0
000008  e00b              B        |L5.34|
                  |L5.10|
;;;176    	{
;;;177    		USART1->DR=(uint16_t)data[i];
00000a  5d30              LDRB     r0,[r6,r4]
00000c  4906              LDR      r1,|L5.40|
00000e  8088              STRH     r0,[r1,#4]
;;;178    		while(USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET);//等待发送结束
000010  bf00              NOP      
                  |L5.18|
000012  2140              MOVS     r1,#0x40
000014  4804              LDR      r0,|L5.40|
000016  f7fffffe          BL       USART_GetFlagStatus
00001a  2800              CMP      r0,#0
00001c  d0f9              BEQ      |L5.18|
00001e  1c60              ADDS     r0,r4,#1              ;175
000020  b2c4              UXTB     r4,r0                 ;175
                  |L5.34|
000022  42ac              CMP      r4,r5                 ;175
000024  dbf1              BLT      |L5.10|
;;;179    	}
;;;180    }
000026  bd70              POP      {r4-r6,pc}
;;;181    
                          ENDP

                  |L5.40|
                          DCD      0x40011000

                          AREA ||.ARM.exidx||, LINKORDER=||i.ANO_Data6_Send||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i.ANO_Data6_Send||
                          DCD      0x00000001

                          AREA ||area_number.7||, LINKORDER=||i.ANO_Data3_Send||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.ANO_Data3_Send||
                          DCD      0x00000001

                          AREA ||area_number.8||, LINKORDER=||i.ANO_Data2_Send||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.ANO_Data2_Send||
                          DCD      0x00000001

                          AREA ||area_number.9||, LINKORDER=||i.ANO_Data1_Send||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.ANO_Data1_Send||
                          DCD      0x00000001

                          AREA ||area_number.10||, LINKORDER=||i.USART1_SendString||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.USART1_SendString||
                          DCD      0x00000001

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  data_to_send
                          %        50

;*** Start embedded assembler ***

#line 1 "..\\..\\MySrc\\Data_Tramsfer.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_Data_Tramsfer_cpp_24967df3___Z7__REV16j|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___17_Data_Tramsfer_cpp_24967df3___Z7__REV16j| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_Data_Tramsfer_cpp_24967df3___Z7__REVSHi|
#line 144
|__asm___17_Data_Tramsfer_cpp_24967df3___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___17_Data_Tramsfer_cpp_24967df3___Z5__RRXj|
#line 300
|__asm___17_Data_Tramsfer_cpp_24967df3___Z5__RRXj| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
