; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\setparameter.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\setparameter.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\MySrc -I..\..\Libraries -I..\..\MySrc\ostask -I..\..\MySrc\MPU6050 -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 -DSTM32F40_41xxx --omf_browse=.\flash\obj\setparameter.crf ..\..\MySrc\SetParameter.cpp]
                          THUMB

                          AREA ||i.CheckParameter_Operater||, CODE, READONLY, ALIGN=2

                  CheckParameter_Operater PROC
;;;126     */
;;;127    void CheckParameter_Operater(void)
000000  b500              PUSH     {lr}
;;;128    {
000002  ed2d8b0c          VPUSH    {d8-d13}
000006  b08b              SUB      sp,sp,#0x2c
;;;129    //键鼠
;;;130    	u1_printf("\
000008  4827              LDR      r0,|L1.168|
00000a  ed900a06          VLDR     s0,[r0,#0x18]
00000e  ee101a10          VMOV     r1,s0
000012  4608              MOV      r0,r1
000014  f7fffffe          BL       __aeabi_f2d
000018  ec410b18          VMOV     d8,r0,r1
00001c  4822              LDR      r0,|L1.168|
00001e  ed900a05          VLDR     s0,[r0,#0x14]
000022  ee101a10          VMOV     r1,s0
000026  4608              MOV      r0,r1
000028  f7fffffe          BL       __aeabi_f2d
00002c  ec410b19          VMOV     d9,r0,r1
000030  481d              LDR      r0,|L1.168|
000032  ed900a04          VLDR     s0,[r0,#0x10]
000036  ee101a10          VMOV     r1,s0
00003a  4608              MOV      r0,r1
00003c  f7fffffe          BL       __aeabi_f2d
000040  ec410b1a          VMOV     d10,r0,r1
000044  4818              LDR      r0,|L1.168|
000046  ed900a03          VLDR     s0,[r0,#0xc]
00004a  ee101a10          VMOV     r1,s0
00004e  4608              MOV      r0,r1
000050  f7fffffe          BL       __aeabi_f2d
000054  ec410b1b          VMOV     d11,r0,r1
000058  4813              LDR      r0,|L1.168|
00005a  ed900a02          VLDR     s0,[r0,#8]
00005e  ee101a10          VMOV     r1,s0
000062  4608              MOV      r0,r1
000064  f7fffffe          BL       __aeabi_f2d
000068  ec410b1c          VMOV     d12,r0,r1
00006c  480e              LDR      r0,|L1.168|
00006e  ed900a01          VLDR     s0,[r0,#4]
000072  ee101a10          VMOV     r1,s0
000076  4608              MOV      r0,r1
000078  f7fffffe          BL       __aeabi_f2d
00007c  ec410b1d          VMOV     d13,r0,r1
000080  ed8d8b08          VSTR     d8,[sp,#0x20]
000084  ed8d9b06          VSTR     d9,[sp,#0x18]
000088  ed8dab04          VSTR     d10,[sp,#0x10]
00008c  ed8dbb02          VSTR     d11,[sp,#8]
000090  ed8dcb00          VSTR     d12,[sp,#0]
000094  ec532b1d          VMOV     r2,r3,d13
000098  4804              LDR      r0,|L1.172|
00009a  f7fffffe          BL       u1_printf
;;;131    	PITCH_Encoder_Mid:%5.2f\t\
;;;132    	PITCH_Encoder_Up:%5.2f\t\
;;;133    	PITCH_Encoder_Dowm:%5.2f\t\
;;;134    	YAW_Encoder_Mid:%5.2f\t\
;;;135    	PITCH_6050_Offset:%5.2f\t\
;;;136    	YAW_6050_Offset:%5.2f\t\
;;;137    	\r\n\r\n",\
;;;138    			Parameter_Operater.data.PITCH_Encoder_Mid,Parameter_Operater.data.PITCH_Encoder_Up, \
;;;139    			Parameter_Operater.data.PITCH_Encoder_Dowm,Parameter_Operater.data.YAW_Encoder_Mid,\
;;;140    			Parameter_Operater.data.PITCH_6050_Offset,Parameter_Operater.data.YAW_6050_Offset
;;;141    			);
;;;142    }
00009e  b00b              ADD      sp,sp,#0x2c
0000a0  ecbd8b0c          VPOP     {d8-d13}
0000a4  bd00              POP      {pc}
;;;143    
                          ENDP

0000a6  0000              DCW      0x0000
                  |L1.168|
                          DCD      Parameter_Operater
                  |L1.172|
                          DCD      ||.conststring||+0xa4

                          AREA ||i.CheckParameter_User||, CODE, READONLY, ALIGN=2

                  CheckParameter_User PROC
;;;60      */
;;;61     void CheckParameter_User(void)
000000  b500              PUSH     {lr}
;;;62     {
000002  ed2d8b0e          VPUSH    {d8-d14}
000006  b08f              SUB      sp,sp,#0x3c
;;;63     //键鼠
;;;64     	u1_printf("\
000008  482e              LDR      r0,|L2.196|
00000a  ed900a08          VLDR     s0,[r0,#0x20]
00000e  ee101a10          VMOV     r1,s0
000012  4608              MOV      r0,r1
000014  f7fffffe          BL       __aeabi_f2d
000018  ec410b18          VMOV     d8,r0,r1
00001c  4829              LDR      r0,|L2.196|
00001e  ed900a07          VLDR     s0,[r0,#0x1c]
000022  ee101a10          VMOV     r1,s0
000026  4608              MOV      r0,r1
000028  f7fffffe          BL       __aeabi_f2d
00002c  ec410b19          VMOV     d9,r0,r1
000030  4824              LDR      r0,|L2.196|
000032  ed900a06          VLDR     s0,[r0,#0x18]
000036  ee101a10          VMOV     r1,s0
00003a  4608              MOV      r0,r1
00003c  f7fffffe          BL       __aeabi_f2d
000040  ec410b1a          VMOV     d10,r0,r1
000044  481f              LDR      r0,|L2.196|
000046  ed900a05          VLDR     s0,[r0,#0x14]
00004a  ee101a10          VMOV     r1,s0
00004e  4608              MOV      r0,r1
000050  f7fffffe          BL       __aeabi_f2d
000054  ec410b1b          VMOV     d11,r0,r1
000058  481a              LDR      r0,|L2.196|
00005a  ed900a04          VLDR     s0,[r0,#0x10]
00005e  ee101a10          VMOV     r1,s0
000062  4608              MOV      r0,r1
000064  f7fffffe          BL       __aeabi_f2d
000068  ec410b1c          VMOV     d12,r0,r1
00006c  4815              LDR      r0,|L2.196|
00006e  ed900a03          VLDR     s0,[r0,#0xc]
000072  ee101a10          VMOV     r1,s0
000076  4608              MOV      r0,r1
000078  f7fffffe          BL       __aeabi_f2d
00007c  ec410b1d          VMOV     d13,r0,r1
000080  4810              LDR      r0,|L2.196|
000082  ed900a02          VLDR     s0,[r0,#8]
000086  ee101a10          VMOV     r1,s0
00008a  4608              MOV      r0,r1
00008c  f7fffffe          BL       __aeabi_f2d
000090  ec410b1e          VMOV     d14,r0,r1
000094  ed8d8b0c          VSTR     d8,[sp,#0x30]
000098  ed8d9b0a          VSTR     d9,[sp,#0x28]
00009c  ed8dab08          VSTR     d10,[sp,#0x20]
0000a0  ed8dbb06          VSTR     d11,[sp,#0x18]
0000a4  ed8dcb04          VSTR     d12,[sp,#0x10]
0000a8  ed8ddb02          VSTR     d13,[sp,#8]
0000ac  ed8deb00          VSTR     d14,[sp,#0]
0000b0  4804              LDR      r0,|L2.196|
0000b2  8882              LDRH     r2,[r0,#4]  ; Parameter_User
0000b4  8841              LDRH     r1,[r0,#2]  ; Parameter_User
0000b6  4804              LDR      r0,|L2.200|
0000b8  f7fffffe          BL       u1_printf
;;;65     	KM:\t \
;;;66     	SPEED1:%d\t\
;;;67     	SPEED2:%d\t\
;;;68     	PITCHWEIGHT:%5.2f\t\
;;;69     	YAWWEIGHT1:%5.2f\
;;;70     	YAWWEIGHT2:%5.2f\r\n\
;;;71     	DR:\t \
;;;72     	DR_SPEED:%5.2f\t\
;;;73     	PitchScale:%5.2f\t\
;;;74     	YawScale:%5.2f\r\n\
;;;75     	CarFollow:%5.2f\
;;;76     	\r\n\r\n", \
;;;77     
;;;78     			Parameter_User.data.SPEED1,Parameter_User.data.SPEED2, \
;;;79     			Parameter_User.data.PITCHWEIGHT,Parameter_User.data.YAWWEIGHT[0],Parameter_User.data.YAWWEIGHT[1], \
;;;80     			Parameter_User.data.DR_SPEED,Parameter_User.data.PitchScale, \
;;;81     			Parameter_User.data.YawScale,Parameter_User.data.CarframeWeight);
;;;82     }
0000bc  b00f              ADD      sp,sp,#0x3c
0000be  ecbd8b0e          VPOP     {d8-d14}
0000c2  bd00              POP      {pc}
;;;83     
                          ENDP

                  |L2.196|
                          DCD      Parameter_User
                  |L2.200|
                          DCD      ||.conststring||

                          AREA ||i.GetParaFlag||, CODE, READONLY, ALIGN=2

                  GetParaFlag PROC
;;;147    };
;;;148    u8 GetParaFlag(void)
000000  4801              LDR      r0,|L3.8|
;;;149    {
;;;150    	return ParaFlag;
000002  7800              LDRB     r0,[r0,#0]  ; ParaFlag
;;;151    };
000004  4770              BX       lr
;;;152    
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      ParaFlag

                          AREA ||i.GetParameter_Operater||, CODE, READONLY, ALIGN=2

                  GetParameter_Operater PROC
;;;104     */
;;;105    void GetParameter_Operater(void)
000000  b510              PUSH     {r4,lr}
;;;106    {
;;;107    	STMFLASH_Read(ADDR_FLASH_SECTOR_11,Parameter_Operater.FlashData,U32_BUFSIZE);
000002  2210              MOVS     r2,#0x10
000004  4908              LDR      r1,|L4.40|
000006  4809              LDR      r0,|L4.44|
000008  f7fffffe          BL       STMFLASH_Read
;;;108    	if(Parameter_Operater.data.Begin != 0x55 || Parameter_Operater.data.End != 0x66)
00000c  4806              LDR      r0,|L4.40|
00000e  7800              LDRB     r0,[r0,#0]  ; Parameter_Operater
000010  2855              CMP      r0,#0x55
000012  d103              BNE      |L4.28|
000014  4804              LDR      r0,|L4.40|
000016  7f00              LDRB     r0,[r0,#0x1c]  ; Parameter_Operater
000018  2866              CMP      r0,#0x66
00001a  d003              BEQ      |L4.36|
                  |L4.28|
;;;109    	{
;;;110    		InitParameter_Operater();
00001c  f7fffffe          BL       InitParameter_Operater
;;;111    		SetParameter_Operater();
000020  f7fffffe          BL       SetParameter_Operater
                  |L4.36|
;;;112    	}
;;;113    }
000024  bd10              POP      {r4,pc}
;;;114    
                          ENDP

000026  0000              DCW      0x0000
                  |L4.40|
                          DCD      Parameter_Operater
                  |L4.44|
                          DCD      0x080e0000

                          AREA ||i.GetParameter_User||, CODE, READONLY, ALIGN=2

                  GetParameter_User PROC
;;;38      */
;;;39     void GetParameter_User(void)
000000  b510              PUSH     {r4,lr}
;;;40     {
;;;41     	STMFLASH_Read(ADDR_FLASH_SECTOR_10,Parameter_User.FlashData,U32_BUFSIZE);
000002  2210              MOVS     r2,#0x10
000004  4908              LDR      r1,|L5.40|
000006  4809              LDR      r0,|L5.44|
000008  f7fffffe          BL       STMFLASH_Read
;;;42     	if(Parameter_User.data.Begin != 0x55 || Parameter_User.data.End != 0x66)
00000c  4806              LDR      r0,|L5.40|
00000e  7800              LDRB     r0,[r0,#0]  ; Parameter_User
000010  2855              CMP      r0,#0x55
000012  d104              BNE      |L5.30|
000014  4804              LDR      r0,|L5.40|
000016  f8900024          LDRB     r0,[r0,#0x24]  ; Parameter_User
00001a  2866              CMP      r0,#0x66
00001c  d003              BEQ      |L5.38|
                  |L5.30|
;;;43     	{
;;;44     		InitParameter_User();
00001e  f7fffffe          BL       InitParameter_User
;;;45     		SetParameter_User();
000022  f7fffffe          BL       SetParameter_User
                  |L5.38|
;;;46     	}
;;;47     }
000026  bd10              POP      {r4,pc}
;;;48     
                          ENDP

                  |L5.40|
                          DCD      Parameter_User
                  |L5.44|
                          DCD      0x080c0000

                          AREA ||i.InitParameter_Operater||, CODE, READONLY, ALIGN=2

                  InitParameter_Operater PROC
;;;87      */
;;;88     void InitParameter_Operater(void)
000000  2055              MOVS     r0,#0x55
;;;89     {
;;;90     	Parameter_Operater.data.Begin              = 0x55;
000002  490f              LDR      r1,|L6.64|
000004  7008              STRB     r0,[r1,#0]
;;;91     	Parameter_Operater.data.End                = 0x66;
000006  2066              MOVS     r0,#0x66
000008  7708              STRB     r0,[r1,#0x1c]
;;;92       
;;;93     	Parameter_Operater.data.PITCH_Encoder_Mid  = 3965.0;//一档速度(0~660)
00000a  ed9f0a0e          VLDR     s0,|L6.68|
00000e  4608              MOV      r0,r1
000010  ed800a01          VSTR     s0,[r0,#4]
;;;94     	Parameter_Operater.data.PITCH_Encoder_Up   = 3600.0;//二档速度(0~660)
000014  ed9f0a0c          VLDR     s0,|L6.72|
000018  ed800a02          VSTR     s0,[r0,#8]
;;;95     	Parameter_Operater.data.PITCH_Encoder_Dowm = 4580.0;//PITCH电机调节速度（越大越快）
00001c  ed9f0a0b          VLDR     s0,|L6.76|
000020  ed800a03          VSTR     s0,[r0,#0xc]
;;;96     	Parameter_Operater.data.YAW_Encoder_Mid    = 4800.0;//YAW电机调节速度（越大越快）
000024  ed9f0a0a          VLDR     s0,|L6.80|
000028  ed800a04          VSTR     s0,[r0,#0x10]
;;;97     	Parameter_Operater.data.PITCH_6050_Offset  = 0;//6050角速度offset
00002c  ed9f0a09          VLDR     s0,|L6.84|
000030  ed800a05          VSTR     s0,[r0,#0x14]
;;;98     	Parameter_Operater.data.YAW_6050_Offset    = 0;//6050角速度offset
000034  ed9f0a07          VLDR     s0,|L6.84|
000038  ed800a06          VSTR     s0,[r0,#0x18]
;;;99       
;;;100    }
00003c  4770              BX       lr
;;;101    
                          ENDP

00003e  0000              DCW      0x0000
                  |L6.64|
                          DCD      Parameter_Operater
                  |L6.68|
000044  4577d000          DCFS     0x4577d000 ; 3965
                  |L6.72|
000048  45610000          DCFS     0x45610000 ; 3600
                  |L6.76|
00004c  458f2000          DCFS     0x458f2000 ; 4580
                  |L6.80|
000050  45960000          DCFS     0x45960000 ; 4800
                  |L6.84|
000054  00000000          DCFS     0x00000000 ; 0

                          AREA ||i.InitParameter_User||, CODE, READONLY, ALIGN=2

                  InitParameter_User PROC
;;;17      */
;;;18     void InitParameter_User(void)
000000  2055              MOVS     r0,#0x55
;;;19     {
;;;20     	Parameter_User.data.Begin          = 0x55;
000002  4914              LDR      r1,|L7.84|
000004  7008              STRB     r0,[r1,#0]
;;;21     	Parameter_User.data.End            = 0x66;
000006  2066              MOVS     r0,#0x66
000008  f8810024          STRB     r0,[r1,#0x24]
;;;22     	//键鼠
;;;23     	Parameter_User.data.SPEED1         = 400;//一档速度(0~660)
00000c  f44f70c8          MOV      r0,#0x190
000010  8048              STRH     r0,[r1,#2]
;;;24     	Parameter_User.data.SPEED2         = 660;//二档速度(0~660)
000012  f44f7025          MOV      r0,#0x294
000016  8088              STRH     r0,[r1,#4]
;;;25     	Parameter_User.data.PITCHWEIGHT    = 0.2;//PITCH电机调节速度（越大越快）
000018  ed9f0a0f          VLDR     s0,|L7.88|
00001c  4608              MOV      r0,r1
00001e  ed800a02          VSTR     s0,[r0,#8]
;;;26     	Parameter_User.data.YAWWEIGHT[0]   = 1.0;;//YAW电机调节速度（越大越快）
000022  eeb70a00          VMOV.F32 s0,#1.00000000
000026  ed800a03          VSTR     s0,[r0,#0xc]
;;;27     	Parameter_User.data.YAWWEIGHT[1]   = 2.0;//YAW电机调节速度（越大越快）
00002a  eeb00a00          VMOV.F32 s0,#2.00000000
00002e  ed800a04          VSTR     s0,[r0,#0x10]
;;;28     	//遥控
;;;29     	Parameter_User.data.DR_SPEED       = 1.5;//速度（越大越快）
000032  eeb70a08          VMOV.F32 s0,#1.50000000
000036  ed800a05          VSTR     s0,[r0,#0x14]
;;;30     	Parameter_User.data.PitchScale     = 60;//PITCH电机调节速度（越小越快）
00003a  ed9f0a08          VLDR     s0,|L7.92|
00003e  ed800a06          VSTR     s0,[r0,#0x18]
;;;31     	Parameter_User.data.YawScale       = 12;//YAW电机调节速度（越小越快）
000042  eeb20a08          VMOV.F32 s0,#12.00000000
000046  ed800a07          VSTR     s0,[r0,#0x1c]
;;;32     
;;;33     	Parameter_User.data.CarframeWeight = 5.5 ;//底盘跟随速度
00004a  eeb10a06          VMOV.F32 s0,#5.50000000
00004e  ed800a08          VSTR     s0,[r0,#0x20]
;;;34     }
000052  4770              BX       lr
;;;35     
                          ENDP

                  |L7.84|
                          DCD      Parameter_User
                  |L7.88|
000058  3e4ccccd          DCFS     0x3e4ccccd ; 0.20000000298023224
                  |L7.92|
00005c  42700000          DCFS     0x42700000 ; 60

                          AREA ||i.ParaSetting||, CODE, READONLY, ALIGN=2

                  ParaSetting PROC
;;;259     */
;;;260    void ParaSetting(float _pFlag)
000000  b500              PUSH     {lr}
;;;261    {
000002  ed2d8b02          VPUSH    {d8}
000006  b085              SUB      sp,sp,#0x14
000008  eeb08a40          VMOV.F32 s16,s0
;;;262    	
;;;263    	switch((u8)_pFlag)
00000c  eebc0ac8          VCVT.U32.F32 s0,s16
000010  ee100a10          VMOV     r0,s0
000014  b2c0              UXTB     r0,r0
000016  2809              CMP      r0,#9
000018  d24c              BCS      |L8.180|
00001a  e8dff000          TBB      [pc,r0]
00001e  4b05              DCB      0x4b,0x05
000020  101b262e          DCB      0x10,0x1b,0x26,0x2e
000024  334b3800          DCB      0x33,0x4b,0x38,0x00
;;;264    	{
;;;265    		case 1 :SetParaFlag(1);
000028  2001              MOVS     r0,#1
00002a  f7fffffe          BL       SetParaFlag
;;;266    				GetParameter_User();
00002e  f7fffffe          BL       GetParameter_User
;;;267    				CheckParameter_User();
000032  f7fffffe          BL       CheckParameter_User
;;;268    				SetParaFlag(0);
000036  2000              MOVS     r0,#0
000038  f7fffffe          BL       SetParaFlag
;;;269    				break;
00003c  e03b              B        |L8.182|
;;;270    		case 2 :SetParaFlag(1);
00003e  2001              MOVS     r0,#1
000040  f7fffffe          BL       SetParaFlag
;;;271    				InitParameter_User();
000044  f7fffffe          BL       InitParameter_User
;;;272    				CheckParameter_User();
000048  f7fffffe          BL       CheckParameter_User
;;;273    				SetParaFlag(0);
00004c  2000              MOVS     r0,#0
00004e  f7fffffe          BL       SetParaFlag
;;;274    				break;
000052  e030              B        |L8.182|
;;;275    		case 3 :SetParaFlag(1);
000054  2001              MOVS     r0,#1
000056  f7fffffe          BL       SetParaFlag
;;;276    				SetParameter_User();
00005a  f7fffffe          BL       SetParameter_User
;;;277    				CheckParameter_User();
00005e  f7fffffe          BL       CheckParameter_User
;;;278    				SetParaFlag(0);
000062  2000              MOVS     r0,#0
000064  f7fffffe          BL       SetParaFlag
;;;279    				break;
000068  e025              B        |L8.182|
;;;280    
;;;281    		case 4 :SetParaFlag(1);
00006a  2001              MOVS     r0,#1
00006c  f7fffffe          BL       SetParaFlag
;;;282    				GetParameter_Operater();
000070  f7fffffe          BL       GetParameter_Operater
;;;283    				CheckParameter_Operater();
000074  f7fffffe          BL       CheckParameter_Operater
;;;284    				break;
000078  e01d              B        |L8.182|
;;;285    		case 5 :InitParameter_Operater();
00007a  f7fffffe          BL       InitParameter_Operater
;;;286    				CheckParameter_Operater();
00007e  f7fffffe          BL       CheckParameter_Operater
;;;287    				break;
000082  e018              B        |L8.182|
;;;288    		case 6 :SetParameter_Operater();
000084  f7fffffe          BL       SetParameter_Operater
;;;289    				CheckParameter_Operater();
000088  f7fffffe          BL       CheckParameter_Operater
;;;290    				break;
00008c  e013              B        |L8.182|
;;;291    		case 8 :
;;;292    		{
;;;293    			extern u8 PIDBegin_CAN;
;;;294    			CanTxMsg msg_send = { 0x1ff, 0x1ff, CAN_Id_Standard, CAN_RTR_Data, 0x08,{0, 0, 0, 0, 0, 0, 0, 0}};
00008e  2214              MOVS     r2,#0x14
000090  490b              LDR      r1,|L8.192|
000092  4668              MOV      r0,sp
000094  f7fffffe          BL       __aeabi_memcpy4
;;;295    			PIDBegin_CAN = 0;
000098  2000              MOVS     r0,#0
00009a  490a              LDR      r1,|L8.196|
00009c  7008              STRB     r0,[r1,#0]
;;;296    			delay_ms_nos(100);
00009e  2064              MOVS     r0,#0x64
0000a0  f7fffffe          BL       delay_ms_nos
;;;297    			msg_send.Data[6] = 0x04;
0000a4  2104              MOVS     r1,#4
0000a6  f88d1011          STRB     r1,[sp,#0x11]
;;;298    			CAN_Transmit(CAN2,&msg_send);
0000aa  4669              MOV      r1,sp
0000ac  4806              LDR      r0,|L8.200|
0000ae  f7fffffe          BL       CAN_Transmit
;;;299    		}
;;;300    		break;
0000b2  e000              B        |L8.182|
                  |L8.180|
;;;301    		default:break;
0000b4  bf00              NOP      
                  |L8.182|
0000b6  bf00              NOP                            ;269
;;;302    	}
;;;303    	
;;;304    }
0000b8  b005              ADD      sp,sp,#0x14
0000ba  ecbd8b02          VPOP     {d8}
0000be  bd00              POP      {pc}
;;;305    
                          ENDP

                  |L8.192|
                          DCD      ||.constdata||
                  |L8.196|
                          DCD      PIDBegin_CAN
                  |L8.200|
                          DCD      0x40006800

                          AREA ||i.SetParaFlag||, CODE, READONLY, ALIGN=2

                  SetParaFlag PROC
;;;143    
;;;144    void SetParaFlag(u8 _pFlag)
000000  4901              LDR      r1,|L9.8|
;;;145    {
;;;146    	ParaFlag = _pFlag;
000002  7008              STRB     r0,[r1,#0]
;;;147    };
000004  4770              BX       lr
;;;148    u8 GetParaFlag(void)
                          ENDP

000006  0000              DCW      0x0000
                  |L9.8|
                          DCD      ParaFlag

                          AREA ||i.SetPara_DR||, CODE, READONLY, ALIGN=2

                  SetPara_DR PROC
;;;159     */
;;;160    void SetPara_DR(float _DR_SPEED,float _PitchScale,float _YawScale,float CARFRAMEWEIGHT)
000000  b510              PUSH     {r4,lr}
;;;161    {
000002  ed2d8b04          VPUSH    {d8-d9}
000006  eeb08a40          VMOV.F32 s16,s0
00000a  eef08a60          VMOV.F32 s17,s1
00000e  eeb09a41          VMOV.F32 s18,s2
000012  eef09a61          VMOV.F32 s19,s3
;;;162    	Parameter_User.data.DR_SPEED       = _DR_SPEED;//速度（越大越快）
000016  4806              LDR      r0,|L10.48|
000018  ed808a05          VSTR     s16,[r0,#0x14]
;;;163    	Parameter_User.data.PitchScale     = _PitchScale;//PITCH电机调节速度（越小越快）
00001c  edc08a06          VSTR     s17,[r0,#0x18]
;;;164    	Parameter_User.data.YawScale       = _YawScale;//YAW电机调节速度（越小越快）
000020  ed809a07          VSTR     s18,[r0,#0x1c]
;;;165    //	Parameter_User.data.CarframeWeight = CARFRAMEWEIGHT ;//底盘跟随速度
;;;166    //	CarFramePID.SetPID((float)Parameter_User.data.CarframeWeight,0.00,0.00);//设置跟随速度
;;;167    	CheckParameter_User();
000024  f7fffffe          BL       CheckParameter_User
;;;168    }
000028  ecbd8b04          VPOP     {d8-d9}
00002c  bd10              POP      {r4,pc}
;;;169    
                          ENDP

00002e  0000              DCW      0x0000
                  |L10.48|
                          DCD      Parameter_User

                          AREA ||i.SetPara_KM||, CODE, READONLY, ALIGN=2

                  SetPara_KM PROC
;;;177     */
;;;178    void SetPara_KM(float SPEED1,float SPEED2,float PITCHWEIGHT,float YAWWEIGHT1,float YAWWEIGHT2,float CARFRAMEWEIGHT)
000000  b510              PUSH     {r4,lr}
;;;179    {
000002  ed2d8b06          VPUSH    {d8-d10}
000006  eeb08a40          VMOV.F32 s16,s0
00000a  eef08a60          VMOV.F32 s17,s1
00000e  eeb09a41          VMOV.F32 s18,s2
000012  eef09a61          VMOV.F32 s19,s3
000016  eeb0aa42          VMOV.F32 s20,s4
00001a  eef0aa62          VMOV.F32 s21,s5
;;;180    	Parameter_User.data.SPEED1         = SPEED1;//一档速度(0~660)
00001e  eebc0ac8          VCVT.U32.F32 s0,s16
000022  ee100a10          VMOV     r0,s0
000026  4909              LDR      r1,|L11.76|
000028  8048              STRH     r0,[r1,#2]
;;;181    	Parameter_User.data.SPEED2         = SPEED2;//二档速度(0~660)
00002a  eebc0ae8          VCVT.U32.F32 s0,s17
00002e  ee100a10          VMOV     r0,s0
000032  8088              STRH     r0,[r1,#4]
;;;182    	Parameter_User.data.PITCHWEIGHT    = PITCHWEIGHT;//PITCH电机调节速度（越大越快）
000034  4608              MOV      r0,r1
000036  ed809a02          VSTR     s18,[r0,#8]
;;;183    	Parameter_User.data.YAWWEIGHT[0]      = YAWWEIGHT1;//YAW电机调节速度（越大越快）
00003a  edc09a03          VSTR     s19,[r0,#0xc]
;;;184    	Parameter_User.data.YAWWEIGHT[1]      = YAWWEIGHT2;//YAW电机调节速度（越大越快）
00003e  ed80aa04          VSTR     s20,[r0,#0x10]
;;;185    //	Parameter_User.data.CarframeWeight = CARFRAMEWEIGHT;//底盘跟随速度
;;;186    //	CarFramePID.SetPID((float)Parameter_User.data.CarframeWeight,0.00,0.00);//设置跟随速度
;;;187    	CheckParameter_User();
000042  f7fffffe          BL       CheckParameter_User
;;;188    }
000046  ecbd8b06          VPOP     {d8-d10}
00004a  bd10              POP      {r4,pc}
;;;189    
                          ENDP

                  |L11.76|
                          DCD      Parameter_User

                          AREA ||i.SetPara_Operater||, CODE, READONLY, ALIGN=2

                  SetPara_Operater PROC
;;;196     */
;;;197    void SetPara_Operater(float mode)
000000  b510              PUSH     {r4,lr}
;;;198    {
000002  ed2d8b04          VPUSH    {d8-d9}
000006  b092              SUB      sp,sp,#0x48
000008  eef08a40          VMOV.F32 s17,s0
;;;199    	
;;;200    	short gx,gy,gz;
;;;201    
;;;202    	switch((u8)mode)
00000c  eebc0ae8          VCVT.U32.F32 s0,s17
000010  ee100a10          VMOV     r0,s0
000014  b2c0              UXTB     r0,r0
000016  2805              CMP      r0,#5
000018  d27e              BCS      |L12.280|
00001a  e8dff000          TBB      [pc,r0]
00001e  0312              DCB      0x03,0x12
000020  21303f00          DCB      0x21,0x30,0x3f,0x00
;;;203    	{
;;;204    		case 0: Parameter_Operater.data.PITCH_Encoder_Mid = GetMotorEncoder().PitchEncoder;//GetMotorEncoder().PitchEncoder;
000024  f7fffffe          BL       GetMotorEncoder
000028  900e              STR      r0,[sp,#0x38]
00002a  f9bd0038          LDRSH    r0,[sp,#0x38]
00002e  ee000a10          VMOV     s0,r0
000032  eeb80ac0          VCVT.F32.S32 s0,s0
000036  4845              LDR      r0,|L12.332|
000038  ed800a01          VSTR     s0,[r0,#4]
;;;205    				CheckParameter_Operater();
00003c  f7fffffe          BL       CheckParameter_Operater
;;;206    				break;
000040  e07f              B        |L12.322|
;;;207    		case 1: Parameter_Operater.data.PITCH_Encoder_Up = GetMotorEncoder().PitchEncoder;
000042  f7fffffe          BL       GetMotorEncoder
000046  900e              STR      r0,[sp,#0x38]
000048  f9bd0038          LDRSH    r0,[sp,#0x38]
00004c  ee000a10          VMOV     s0,r0
000050  eeb80ac0          VCVT.F32.S32 s0,s0
000054  483d              LDR      r0,|L12.332|
000056  ed800a02          VSTR     s0,[r0,#8]
;;;208    				CheckParameter_Operater();
00005a  f7fffffe          BL       CheckParameter_Operater
;;;209    				break;
00005e  e070              B        |L12.322|
;;;210    		case 2: Parameter_Operater.data.PITCH_Encoder_Dowm = GetMotorEncoder().PitchEncoder;
000060  f7fffffe          BL       GetMotorEncoder
000064  900e              STR      r0,[sp,#0x38]
000066  f9bd0038          LDRSH    r0,[sp,#0x38]
00006a  ee000a10          VMOV     s0,r0
00006e  eeb80ac0          VCVT.F32.S32 s0,s0
000072  4836              LDR      r0,|L12.332|
000074  ed800a03          VSTR     s0,[r0,#0xc]
;;;211    				CheckParameter_Operater();
000078  f7fffffe          BL       CheckParameter_Operater
;;;212    				break;
00007c  e061              B        |L12.322|
;;;213    		case 3: Parameter_Operater.data.YAW_Encoder_Mid = GetMotorEncoder().YawEncoder;
00007e  f7fffffe          BL       GetMotorEncoder
000082  900e              STR      r0,[sp,#0x38]
000084  f9bd003a          LDRSH    r0,[sp,#0x3a]
000088  ee000a10          VMOV     s0,r0
00008c  eeb80ac0          VCVT.F32.S32 s0,s0
000090  482e              LDR      r0,|L12.332|
000092  ed800a04          VSTR     s0,[r0,#0x10]
;;;214    				CheckParameter_Operater();
000096  f7fffffe          BL       CheckParameter_Operater
;;;215    				break;
00009a  e052              B        |L12.322|
;;;216    		case 4:	DISABLE_INT();
00009c  2001              MOVS     r0,#1
00009e  f3808810          MSR      PRIMASK,r0
0000a2  bf00              NOP      
;;;217    					{
;;;218    						unsigned int i;
;;;219    						float sum1,sum2;
;;;220    						kalman_struct AngleKalman_PITCH,AngleKalman_YAW;
;;;221    						kalman_init(&AngleKalman_PITCH,0, 5,0.1,30000);
0000a4  eddf1a2a          VLDR     s3,|L12.336|
0000a8  ed9f1a2a          VLDR     s2,|L12.340|
0000ac  eef10a04          VMOV.F32 s1,#5.00000000
0000b0  ed9f0a29          VLDR     s0,|L12.344|
0000b4  a808              ADD      r0,sp,#0x20
0000b6  f7fffffe          BL       kalman_init
;;;222    						kalman_init(&AngleKalman_YAW,0, 5,0.1,30000);
0000ba  eddf1a25          VLDR     s3,|L12.336|
0000be  ed9f1a25          VLDR     s2,|L12.340|
0000c2  eef10a04          VMOV.F32 s1,#5.00000000
0000c6  ed9f0a24          VLDR     s0,|L12.344|
0000ca  a801              ADD      r0,sp,#4
0000cc  f7fffffe          BL       kalman_init
;;;223    						{
;;;224    							
;;;225    							for(i = 0;i < 20000;i++)
0000d0  2400              MOVS     r4,#0
0000d2  e01b              B        |L12.268|
                  |L12.212|
;;;226    							{
;;;227    								MPU_Get_Gyroscope(&gx,&gy,&gz);
0000d4  aa0f              ADD      r2,sp,#0x3c
0000d6  a910              ADD      r1,sp,#0x40
0000d8  a811              ADD      r0,sp,#0x44
0000da  f7fffffe          BL       MPU_Get_Gyroscope
;;;228    //								sum1 += (float)gx/1024.0f;
;;;229    //								sum2 += (float)gz/1024.0f;
;;;230    								sum1 = kalman_filter(&AngleKalman_YAW,(float)gx);
0000de  f9bd0044          LDRSH    r0,[sp,#0x44]
0000e2  ee000a10          VMOV     s0,r0
0000e6  eeb80ac0          VCVT.F32.S32 s0,s0
0000ea  a801              ADD      r0,sp,#4
0000ec  f7fffffe          BL       kalman_filter
0000f0  eeb09a40          VMOV.F32 s18,s0
;;;231    								sum2 = kalman_filter(&AngleKalman_PITCH,(float)gz);
0000f4  f9bd003c          LDRSH    r0,[sp,#0x3c]
0000f8  ee000a10          VMOV     s0,r0
0000fc  eeb80ac0          VCVT.F32.S32 s0,s0
000100  a808              ADD      r0,sp,#0x20
000102  f7fffffe          BL       kalman_filter
000106  eeb08a40          VMOV.F32 s16,s0
00010a  1c64              ADDS     r4,r4,#1              ;225
                  |L12.268|
00010c  f6446020          MOV      r0,#0x4e20            ;225
000110  4284              CMP      r4,r0                 ;225
000112  d3df              BCC      |L12.212|
;;;232    							}
;;;233    							
;;;234    							
;;;235    							Parameter_Operater.data.PITCH_6050_Offset = sum1;
000114  480d              LDR      r0,|L12.332|
000116  e000              B        |L12.282|
                  |L12.280|
000118  e012              B        |L12.320|
                  |L12.282|
00011a  ed809a05          VSTR     s18,[r0,#0x14]
;;;236    							Parameter_Operater.data.YAW_6050_Offset = sum2;
00011e  ed808a06          VSTR     s16,[r0,#0x18]
;;;237    
;;;238    							bsp_LedToggle(1);
000122  2001              MOVS     r0,#1
000124  f7fffffe          BL       bsp_LedToggle
;;;239    							delay_ms_nos(1);
000128  2001              MOVS     r0,#1
00012a  f7fffffe          BL       delay_ms_nos
;;;240    						}
;;;241    					}
;;;242    				SetParameter_Operater();
00012e  f7fffffe          BL       SetParameter_Operater
;;;243    				CheckParameter_Operater();
000132  f7fffffe          BL       CheckParameter_Operater
;;;244    				ENABLE_INT();
000136  2000              MOVS     r0,#0
000138  f3808810          MSR      PRIMASK,r0
00013c  bf00              NOP      
;;;245    				break;
00013e  e000              B        |L12.322|
                  |L12.320|
;;;246    		default:break;
000140  bf00              NOP      
                  |L12.322|
000142  bf00              NOP                            ;206
;;;247    	}
;;;248    }
000144  b012              ADD      sp,sp,#0x48
000146  ecbd8b04          VPOP     {d8-d9}
00014a  bd10              POP      {r4,pc}
;;;249    
                          ENDP

                  |L12.332|
                          DCD      Parameter_Operater
                  |L12.336|
000150  46ea6000          DCFS     0x46ea6000 ; 30000
                  |L12.340|
000154  3dcccccd          DCFS     0x3dcccccd ; 0.10000000149011612
                  |L12.344|
000158  00000000          DCFS     0x00000000 ; 0

                          AREA ||i.SetParameter_Operater||, CODE, READONLY, ALIGN=2

                  SetParameter_Operater PROC
;;;117     */
;;;118    void SetParameter_Operater(void)
000000  b510              PUSH     {r4,lr}
;;;119    {
;;;120    	Parameter_Operater.data.Begin       = 0x55;
000002  2055              MOVS     r0,#0x55
000004  4904              LDR      r1,|L13.24|
000006  7008              STRB     r0,[r1,#0]
;;;121    	Parameter_Operater.data.End         = 0x66;
000008  2066              MOVS     r0,#0x66
00000a  7708              STRB     r0,[r1,#0x1c]
;;;122    	STMFLASH_Write(ADDR_FLASH_SECTOR_11,Parameter_Operater.FlashData,U32_BUFSIZE);
00000c  2210              MOVS     r2,#0x10
00000e  4803              LDR      r0,|L13.28|
000010  f7fffffe          BL       STMFLASH_Write
;;;123    }
000014  bd10              POP      {r4,pc}
;;;124    /**
                          ENDP

000016  0000              DCW      0x0000
                  |L13.24|
                          DCD      Parameter_Operater
                  |L13.28|
                          DCD      0x080e0000

                          AREA ||i.SetParameter_User||, CODE, READONLY, ALIGN=2

                  SetParameter_User PROC
;;;51      */
;;;52     void SetParameter_User(void)
000000  b510              PUSH     {r4,lr}
;;;53     {
;;;54     	Parameter_User.data.Begin       = 0x55;
000002  2055              MOVS     r0,#0x55
000004  4904              LDR      r1,|L14.24|
000006  7008              STRB     r0,[r1,#0]
;;;55     	Parameter_User.data.End         = 0x66;
000008  2066              MOVS     r0,#0x66
00000a  f8810024          STRB     r0,[r1,#0x24]
;;;56     	STMFLASH_Write(ADDR_FLASH_SECTOR_10,Parameter_User.FlashData,U32_BUFSIZE);
00000e  2210              MOVS     r2,#0x10
000010  4802              LDR      r0,|L14.28|
000012  f7fffffe          BL       STMFLASH_Write
;;;57     }
000016  bd10              POP      {r4,pc}
;;;58     /**
                          ENDP

                  |L14.24|
                          DCD      Parameter_User
                  |L14.28|
                          DCD      0x080c0000

                          AREA ||i.bsp_ParaInit||, CODE, READONLY, ALIGN=2

                  bsp_ParaInit PROC
;;;308     */
;;;309    void bsp_ParaInit(void)
000000  b510              PUSH     {r4,lr}
;;;310    {
;;;311    	GetParameter_User();
000002  f7fffffe          BL       GetParameter_User
;;;312    	GetParameter_Operater();
000006  f7fffffe          BL       GetParameter_Operater
;;;313    	CarFramePID.SetPID(3.5,0.0,0.0);//设置跟随速度
00000a  ed9f1a17          VLDR     s2,|L15.104|
00000e  eddf0a16          VLDR     s1,|L15.104|
000012  eeb00a0c          VMOV.F32 s0,#3.50000000
000016  4815              LDR      r0,|L15.108|
000018  f7fffffe          BL       _ZN7PIDBase6SetPIDEfff ; PIDBase::SetPID(float, float, float)
;;;314    //	SetPitchPid(8.5,0.0,-0.00495)
;;;315    	PitchPID.SetTargetMaxMin(Parameter_Operater.data.PITCH_Encoder_Up,Parameter_Operater.data.PITCH_Encoder_Dowm);//先设置目标值的最大和最小值，再设置目标值
00001c  4814              LDR      r0,|L15.112|
00001e  ed901a03          VLDR     s2,[r0,#0xc]
000022  eef00a41          VMOV.F32 s1,s2
000026  ed901a02          VLDR     s2,[r0,#8]
00002a  eeb00a41          VMOV.F32 s0,s2
00002e  4811              LDR      r0,|L15.116|
000030  f7fffffe          BL       _ZN7PIDBase15SetTargetMaxMinEff ; PIDBase::SetTargetMaxMin(float, float)
;;;316    	PitchPID.SetTarget(Parameter_Operater.data.PITCH_Encoder_Mid);
000034  480e              LDR      r0,|L15.112|
000036  edd00a01          VLDR     s1,[r0,#4]
00003a  eeb00a60          VMOV.F32 s0,s1
00003e  480d              LDR      r0,|L15.116|
000040  f7fffffe          BL       _ZN7PIDBase9SetTargetEf ; PIDBase::SetTarget(float)
;;;317    	PitchPID.SetOmegaOffset(Parameter_Operater.data.PITCH_6050_Offset);
000044  480a              LDR      r0,|L15.112|
000046  edd00a05          VLDR     s1,[r0,#0x14]
00004a  eeb00a60          VMOV.F32 s0,s1
00004e  4809              LDR      r0,|L15.116|
000050  f7fffffe          BL       _ZN8FUZZYPID14SetOmegaOffsetEf ; FUZZYPID::SetOmegaOffset(float)
;;;318    	PitchPID.SetOmegaOffset(Parameter_Operater.data.YAW_6050_Offset);
000054  4806              LDR      r0,|L15.112|
000056  edd00a06          VLDR     s1,[r0,#0x18]
00005a  eeb00a60          VMOV.F32 s0,s1
00005e  4805              LDR      r0,|L15.116|
000060  f7fffffe          BL       _ZN8FUZZYPID14SetOmegaOffsetEf ; FUZZYPID::SetOmegaOffset(float)
;;;319    //	Parameter_Operater.data.YAW_Encoder_Mid +=1300;
;;;320    }
000064  bd10              POP      {r4,pc}
                          ENDP

000066  0000              DCW      0x0000
                  |L15.104|
000068  00000000          DCFS     0x00000000 ; 0
                  |L15.108|
                          DCD      CarFramePID
                  |L15.112|
                          DCD      Parameter_Operater
                  |L15.116|
                          DCD      PitchPID

                          AREA ||.ARM.exidx||, LINKORDER=||i.InitParameter_User||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i.InitParameter_User||
                          DCD      0x00000001

                          AREA ||area_number.17||, LINKORDER=||i.SetParameter_User||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.17||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.SetParameter_User||
                          DCD      0x00000001

                          AREA ||area_number.18||, LINKORDER=||i.GetParameter_User||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.18||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.GetParameter_User||
                          DCD      0x00000001

                          AREA ||area_number.19||, LINKORDER=||i.CheckParameter_User||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.19||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.CheckParameter_User||
                          DCD      0x00000001

                          AREA ||area_number.20||, LINKORDER=||i.InitParameter_Operater||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.20||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.InitParameter_Operater||
                          DCD      0x00000001

                          AREA ||area_number.21||, LINKORDER=||i.SetParameter_Operater||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.21||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.SetParameter_Operater||
                          DCD      0x00000001

                          AREA ||area_number.22||, LINKORDER=||i.GetParameter_Operater||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.22||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.GetParameter_Operater||
                          DCD      0x00000001

                          AREA ||area_number.23||, LINKORDER=||i.CheckParameter_Operater||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.23||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.CheckParameter_Operater||
                          DCD      0x00000001

                          AREA ||area_number.24||, LINKORDER=||i.SetParaFlag||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.24||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.SetParaFlag||
                          DCD      0x00000001

                          AREA ||area_number.25||, LINKORDER=||i.GetParaFlag||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.25||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.GetParaFlag||
                          DCD      0x00000001

                          AREA ||area_number.26||, LINKORDER=||i.SetPara_DR||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.26||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.SetPara_DR||
                          DCD      0x00000001

                          AREA ||area_number.27||, LINKORDER=||i.SetPara_KM||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.27||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.SetPara_KM||
                          DCD      0x00000001

                          AREA ||area_number.28||, LINKORDER=||i.SetPara_Operater||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.28||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.SetPara_Operater||
                          DCD      0x00000001

                          AREA ||area_number.29||, LINKORDER=||i.ParaSetting||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.29||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.ParaSetting||
                          DCD      0x00000001

                          AREA ||area_number.30||, LINKORDER=||i.bsp_ParaInit||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.30||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.bsp_ParaInit||
                          DCD      0x00000001

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Parameter_User
                          %        64
                  Parameter_Operater
                          %        64

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                          DCD      0x000001ff
                          DCD      0x000001ff
000008  00000800          DCB      0x00,0x00,0x08,0x00
00000c  00000000          DCB      0x00,0x00,0x00,0x00
000010  00000000          DCB      0x00,0x00,0x00,0x00

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  094b4d3a          DCB      "\tKM:\t \tSPEED1:%d\t\tSPEED2:%d\t\tPITCHWEIGHT:%5.2f\t"
000004  09200953
000008  50454544
00000c  313a2564
000010  09095350
000014  45454432
000018  3a256409
00001c  09504954
000020  43485745
000024  49474854
000028  3a25352e
00002c  326609  
00002f  09594157          DCB      "\tYAWWEIGHT1:%5.2f\tYAWWEIGHT2:%5.2f\r\n\tDR:\t \tDR_SP"
000033  57454947
000037  4854313a
00003b  25352e32
00003f  66095941
000043  57574549
000047  47485432
00004b  3a25352e
00004f  32660d0a
000053  0944523a
000057  09200944
00005b  525f5350
00005f  4545443a          DCB      "EED:%5.2f\t\tPitchScale:%5.2f\t\tYawScale:%5.2f\r\n\tCa"
000063  25352e32
000067  66090950
00006b  69746368
00006f  5363616c
000073  653a2535
000077  2e326609
00007b  09596177
00007f  5363616c
000083  653a2535
000087  2e32660d
00008b  0a094361
00008f  72466f6c          DCB      "rFollow:%5.2f\t\r\n\r\n",0
000093  6c6f773a
000097  25352e32
00009b  66090d0a
00009f  0d0a00  
0000a2  00                DCB      0
0000a3  00                DCB      0
0000a4  09504954          DCB      "\tPITCH_Encoder_Mid:%5.2f\t\tPITCH_Encoder_Up:%5.2f\t\t"
0000a8  43485f45
0000ac  6e636f64
0000b0  65725f4d
0000b4  69643a25
0000b8  352e3266
0000bc  09095049
0000c0  5443485f
0000c4  456e636f
0000c8  6465725f
0000cc  55703a25
0000d0  352e3266
0000d4  0909    
0000d6  50495443          DCB      "PITCH_Encoder_Dowm:%5.2f\t\tYAW_Encoder_Mid:%5.2f\t\tPI"
0000da  485f456e
0000de  636f6465
0000e2  725f446f
0000e6  776d3a25
0000ea  352e3266
0000ee  09095941
0000f2  575f456e
0000f6  636f6465
0000fa  725f4d69
0000fe  643a2535
000102  2e326609
000106  095049  
000109  5443485f          DCB      "TCH_6050_Offset:%5.2f\t\tYAW_6050_Offset:%5.2f\t\t\r\n\r"
00010d  36303530
000111  5f4f6666
000115  7365743a
000119  25352e32
00011d  66090959
000121  41575f36
000125  3035305f
000129  4f666673
00012d  65743a25
000131  352e3266
000135  09090d0a
000139  0d      
00013a  0a00              DCB      "\n",0

                          AREA ||.data||, DATA, ALIGN=0

                  ParaFlag
000000  00                DCB      0x00

                          AREA ||i._ZN8FUZZYPID14SetOmegaOffsetEf||, COMGROUP=_ZN8FUZZYPID14SetOmegaOffsetEf, CODE, READONLY, ALIGN=1

                  _ZN8FUZZYPID14SetOmegaOffsetEf PROC ; FUZZYPID::SetOmegaOffset(float)
;;;73     	};
;;;74     	void SetOmegaOffset(float data){
000000  ed800a1a          VSTR     s0,[r0,#0x68]
;;;75     		Omega_Offset = data;
;;;76     	};
000004  4770              BX       lr
;;;77     
                          ENDP


                          AREA ||area_number.119||, COMGROUP=_ZN8FUZZYPID14SetOmegaOffsetEf, LINKORDER=||i._ZN8FUZZYPID14SetOmegaOffsetEf||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.119||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8FUZZYPID14SetOmegaOffsetEf||
                          DCD      0x00000001

;*** Start embedded assembler ***

#line 1 "..\\..\\MySrc\\SetParameter.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_SetParameter_cpp_ParaFlag___Z7__REV16j|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_SetParameter_cpp_ParaFlag___Z7__REV16j| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_SetParameter_cpp_ParaFlag___Z7__REVSHi|
#line 144
|__asm___16_SetParameter_cpp_ParaFlag___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___16_SetParameter_cpp_ParaFlag___Z5__RRXj|
#line 300
|__asm___16_SetParameter_cpp_ParaFlag___Z5__RRXj| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
