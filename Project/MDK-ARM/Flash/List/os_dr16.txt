; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\flash\obj\os_dr16.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\os_dr16.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\MySrc -I..\..\Libraries -I..\..\MySrc\ostask -I..\..\MySrc\MPU6050 -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 -DSTM32F40_41xxx --omf_browse=.\flash\obj\os_dr16.crf ..\..\MySrc\ostask\os_dr16.cpp]
                          THUMB

                          AREA ||i.Get_AxicX||, CODE, READONLY, ALIGN=2

                  Get_AxicX PROC
;;;454    }
;;;455    short Get_AxicX(void)
000000  4801              LDR      r0,|L1.8|
;;;456    {
;;;457    	return AxicX;
000002  f9b00000          LDRSH    r0,[r0,#0]  ; AxicX
;;;458    }
000006  4770              BX       lr
;;;459    short Get_AxicY(void)
                          ENDP

                  |L1.8|
                          DCD      AxicX

                          AREA ||i.Get_AxicY||, CODE, READONLY, ALIGN=2

                  Get_AxicY PROC
;;;458    }
;;;459    short Get_AxicY(void)
000000  4801              LDR      r0,|L2.8|
;;;460    {
;;;461    	return AxicY;
000002  f9b00000          LDRSH    r0,[r0,#0]  ; AxicY
;;;462    }
000006  4770              BX       lr
;;;463    short Get_AxicZ(void)
                          ENDP

                  |L2.8|
                          DCD      AxicY

                          AREA ||i.Get_AxicZ||, CODE, READONLY, ALIGN=2

                  Get_AxicZ PROC
;;;462    }
;;;463    short Get_AxicZ(void)
000000  4801              LDR      r0,|L3.8|
;;;464    {
;;;465    	return AxicZ;
000002  f9b00000          LDRSH    r0,[r0,#0]  ; AxicZ
;;;466    }
000006  4770              BX       lr
;;;467    
                          ENDP

                  |L3.8|
                          DCD      AxicZ

                          AREA ||i.Run_Start||, CODE, READONLY, ALIGN=2

                  Run_Start PROC
;;;492    }
;;;493    u8 Run_Start(void)
000000  4801              LDR      r0,|L4.8|
;;;494    {
;;;495    	return run_flag;
000002  7800              LDRB     r0,[r0,#0]  ; run_flag
;;;496    }
000004  4770              BX       lr
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      run_flag

                          AREA ||i._Z7DR16_KMP8RC_ValuetP13KM_KEY_STRUCT||, CODE, READONLY, ALIGN=1

                  _Z7DR16_KMP8RC_ValuetP13KM_KEY_STRUCT PROC ; DR16_KM(RC_Value*, unsigned short, KM_KEY_STRUCT*)
;;;474     */
;;;475    void DR16_KM(RC_Value *ptrmsg,uint16_t KEY_PRESSED_OFFSET,KM_KEY * _pKEY)
000000  b510              PUSH     {r4,lr}
;;;476    {
;;;477    	if(ptrmsg->key == KEY_PRESSED_OFFSET)
000002  89c3              LDRH     r3,[r0,#0xe]
000004  b29b              UXTH     r3,r3
000006  428b              CMP      r3,r1
000008  d10b              BNE      |L5.34|
;;;478    			{
;;;479    				_pKEY->KMcounter++;
00000a  7813              LDRB     r3,[r2,#0]
00000c  1c5b              ADDS     r3,r3,#1
00000e  7013              STRB     r3,[r2,#0]
;;;480    				_pKEY->KMcounter++;
000010  7813              LDRB     r3,[r2,#0]
000012  1c5b              ADDS     r3,r3,#1
000014  7013              STRB     r3,[r2,#0]
;;;481    				if(_pKEY->KMcounter>=10)
000016  7813              LDRB     r3,[r2,#0]
000018  2b0a              CMP      r3,#0xa
00001a  db0a              BLT      |L5.50|
;;;482    					_pKEY->KMcounter = 10;
00001c  230a              MOVS     r3,#0xa
00001e  7013              STRB     r3,[r2,#0]
000020  e007              B        |L5.50|
                  |L5.34|
;;;483    			}
;;;484    			else
;;;485    			{
;;;486    				_pKEY->KMcounter--;
000022  7813              LDRB     r3,[r2,#0]
000024  1e5b              SUBS     r3,r3,#1
000026  7013              STRB     r3,[r2,#0]
;;;487    				if(_pKEY->KMcounter<=0)
000028  7813              LDRB     r3,[r2,#0]
00002a  2b00              CMP      r3,#0
00002c  dc01              BGT      |L5.50|
;;;488    					_pKEY->KMcounter = 0;
00002e  2300              MOVS     r3,#0
000030  7013              STRB     r3,[r2,#0]
                  |L5.50|
;;;489    			}
;;;490    			if(_pKEY->KMcounter == 0 && _pKEY->KMFlag == 1)
000032  7813              LDRB     r3,[r2,#0]
000034  b923              CBNZ     r3,|L5.64|
000036  7853              LDRB     r3,[r2,#1]
000038  2b01              CMP      r3,#1
00003a  d101              BNE      |L5.64|
;;;491    				_pKEY->KMFlag = 0;
00003c  2300              MOVS     r3,#0
00003e  7053              STRB     r3,[r2,#1]
                  |L5.64|
;;;492    }
000040  bd10              POP      {r4,pc}
;;;493    u8 Run_Start(void)
                          ENDP


                          AREA ||i.os_dr16||, CODE, READONLY, ALIGN=2

                  os_dr16 PROC
;;;35     
;;;36     void os_dr16(RC_Value *ptrmsg)
000000  b570              PUSH     {r4-r6,lr}
;;;37     {
000002  ed2d8b0c          VPUSH    {d8-d13}
000006  4604              MOV      r4,r0
;;;38     	float TempPitch,TempYaw;
;;;39     
;;;40     	static int16_t TempAxicX=0,TempAxicY=0;
;;;41     	static uint16_t s1_flag=0,s2_flag=0;
;;;42     	static uint8_t count=0,constantly = 0;
;;;43     	static uint16_t mouse_l_flag=0,mouse_r_flag = 0;
;;;44     	static KM_KEY KM[6];
;;;45     
;;;46     //	TurnplatePID.SetTarget(-((short)ptrmsg->ch1 - 1024)*scale);
;;;47     //	Turnplate_motor_PWM = ((short)ptrmsg->ch1 - 1024)*scale;
;;;48     	if(!PIDBegin_CAN)
000008  48f4              LDR      r0,|L6.988|
00000a  7800              LDRB     r0,[r0,#0]  ; PIDBegin_CAN
00000c  b920              CBNZ     r0,|L6.24|
;;;49     	{
;;;50     		ptrmsg->s2 = RC_SW_MID;
00000e  2103              MOVS     r1,#3
000010  7960              LDRB     r0,[r4,#5]
000012  f3611005          BFI      r0,r1,#4,#2
000016  7160              STRB     r0,[r4,#5]
                  |L6.24|
;;;51     	}
;;;52     	if(ptrmsg->s2 != RC_SW_DOWN)
000018  7960              LDRB     r0,[r4,#5]
00001a  f3c01001          UBFX     r0,r0,#4,#2
00001e  2802              CMP      r0,#2
000020  d07d              BEQ      |L6.286|
;;;53     	{
;;;54     ////////////////////////////////////////////////////////////////////////////
;;;55     /////////////////////////////Pitch电机//////////////////////////////////////
;;;56     
;;;57     		if(Get_cv_flag() == 0)
000022  f7fffffe          BL       Get_cv_flag
000026  2800              CMP      r0,#0
000028  d16e              BNE      |L6.264|
;;;58     		{
;;;59     
;;;60     ////////////////////////////////////////////////////////////////////////////
;;;61     //////////////////////////////Yaw电机///////////////////////////////////////
;;;62     
;;;63     //			TempPitch = PitchPID.Target;
;;;64     //			if(myabs(ptrmsg->ch1 - 1024) > 10)
;;;65     //				TempPitch += (float)(1024 - (short)ptrmsg->ch1)/Parameter_User.data.PitchScale;
;;;66     //			PitchPID.SetTarget(TempPitch);
;;;67     //
;;;68     //			TempYaw = YawPID.Target;
;;;69     //			if(myabs(ptrmsg->ch0 - 1024) > 10)
;;;70     //			{
;;;71     //				AxicZ = (ptrmsg->ch0 - 1024)*No1;
;;;72     //				TempYaw += (float)(1024 - (short)ptrmsg->ch0)/Parameter_User.data.YawScale;
;;;73     //			}
;;;74     //			else
;;;75     //				AxicZ = 0;
;;;76     //			if(FollowMode == 0 )
;;;77     //					YawPID.SetTarget(TempYaw);
;;;78     
;;;79     
;;;80     
;;;81     			if(myabs(ptrmsg->ch0 - 1024)>5)
00002a  8820              LDRH     r0,[r4,#0]
00002c  f24071ff          MOV      r1,#0x7ff
000030  4008              ANDS     r0,r0,r1
000032  f5a06080          SUB      r0,r0,#0x400
000036  2800              CMP      r0,#0
000038  dd04              BLE      |L6.68|
00003a  8820              LDRH     r0,[r4,#0]
00003c  4008              ANDS     r0,r0,r1
00003e  f5a06080          SUB      r0,r0,#0x400
000042  e005              B        |L6.80|
                  |L6.68|
000044  8820              LDRH     r0,[r4,#0]
000046  f24071ff          MOV      r1,#0x7ff
00004a  4008              ANDS     r0,r0,r1
00004c  f5c06080          RSB      r0,r0,#0x400
                  |L6.80|
000050  2805              CMP      r0,#5
000052  dd59              BLE      |L6.264|
;;;82     			{
;;;83     //				AxicZ = ptrmsg->ch0;
;;;84     				TempYaw = YawPID.Target;
000054  48e2              LDR      r0,|L6.992|
000056  ed900a01          VLDR     s0,[r0,#4]
00005a  eeb08a40          VMOV.F32 s16,s0
;;;85     				TempYaw += (float)(1024 - (short)ptrmsg->ch0)/Parameter_User.data.YawScale;
00005e  8820              LDRH     r0,[r4,#0]
000060  f24071ff          MOV      r1,#0x7ff
000064  4008              ANDS     r0,r0,r1
000066  b200              SXTH     r0,r0
000068  f5c06080          RSB      r0,r0,#0x400
00006c  ee000a10          VMOV     s0,r0
000070  eef80ac0          VCVT.F32.S32 s1,s0
000074  48db              LDR      r0,|L6.996|
000076  ed901a07          VLDR     s2,[r0,#0x1c]
00007a  ee800a81          VDIV.F32 s0,s1,s2
00007e  ee300a08          VADD.F32 s0,s0,s16
000082  eeb08a40          VMOV.F32 s16,s0
;;;86     				if(CarFramePID.Current/22.7556f >=85)
000086  48d8              LDR      r0,|L6.1000|
000088  edd00a02          VLDR     s1,[r0,#8]
00008c  ed9f1ad7          VLDR     s2,|L6.1004|
000090  ee800a81          VDIV.F32 s0,s1,s2
000094  eddf0ad6          VLDR     s1,|L6.1008|
000098  eeb40ae0          VCMPE.F32 s0,s1
00009c  eef1fa10          VMRS     APSR_nzcv,FPSCR
0000a0  db0c              BLT      |L6.188|
;;;87     				{
;;;88     					if(YawPID.Target < TempYaw)
0000a2  48cf              LDR      r0,|L6.992|
0000a4  ed900a01          VLDR     s0,[r0,#4]
0000a8  eeb40ac8          VCMPE.F32 s0,s16
0000ac  eef1fa10          VMRS     APSR_nzcv,FPSCR
0000b0  d21e              BCS      |L6.240|
;;;89     						TempYaw = YawPID.Target;
0000b2  ed900a01          VLDR     s0,[r0,#4]
0000b6  eeb08a40          VMOV.F32 s16,s0
0000ba  e019              B        |L6.240|
                  |L6.188|
;;;90     				}
;;;91     				else if(CarFramePID.Current/22.7556f <=-85)
0000bc  48ca              LDR      r0,|L6.1000|
0000be  ed900a02          VLDR     s0,[r0,#8]
0000c2  ed9f1aca          VLDR     s2,|L6.1004|
0000c6  eec00a01          VDIV.F32 s1,s0,s2
0000ca  ed9f0aca          VLDR     s0,|L6.1012|
0000ce  eef40ac0          VCMPE.F32 s1,s0
0000d2  eef1fa10          VMRS     APSR_nzcv,FPSCR
0000d6  d80b              BHI      |L6.240|
;;;92     				{
;;;93     					if(YawPID.Target > TempYaw)
0000d8  48c1              LDR      r0,|L6.992|
0000da  ed900a01          VLDR     s0,[r0,#4]
0000de  eeb40ac8          VCMPE.F32 s0,s16
0000e2  eef1fa10          VMRS     APSR_nzcv,FPSCR
0000e6  dd03              BLE      |L6.240|
;;;94     						TempYaw = YawPID.Target;
0000e8  ed900a01          VLDR     s0,[r0,#4]
0000ec  eeb08a40          VMOV.F32 s16,s0
                  |L6.240|
;;;95     				}
;;;96     				
;;;97     //				u1_printf("%d\t%d\r\n",((int)((TempYaw - CarFramePID.Current)/22.7556f))%360,(int)(CarFramePID.Current/22.7556f));
;;;98     				if(FollowMode == 0 )
0000f0  48bb              LDR      r0,|L6.992|
0000f2  ed900a00          VLDR     s0,[r0,#0]
0000f6  eeb50ac0          VCMPE.F32 s0,#0.0
0000fa  eef1fa10          VMRS     APSR_nzcv,FPSCR
0000fe  d103              BNE      |L6.264|
;;;99     					YawPID.SetTarget(TempYaw);
000100  eeb00a48          VMOV.F32 s0,s16
000104  f7fffffe          BL       _ZN7PIDBase9SetTargetEf ; PIDBase::SetTarget(float)
                  |L6.264|
;;;100    					
;;;101    				
;;;102    			}
;;;103    //			if(counter[1] == 00)
;;;104    //			{
;;;105    //				TempPitch = PitchPID.Target;
;;;106    //				TempPitch += (float)(1024 - (short)ptrmsg->ch1)/Parameter_User.data.PitchScale;
;;;107    //				PitchPID.SetTarget(TempPitch);
;;;108    //			}
;;;109    		}
;;;110    		
;;;111    		if(myabs(ptrmsg->ch1 - 1024)>5)
000108  f8b40001          LDRH     r0,[r4,#1]
00010c  f3c000ca          UBFX     r0,r0,#3,#11
000110  f5a06080          SUB      r0,r0,#0x400
000114  2800              CMP      r0,#0
000116  dd08              BLE      |L6.298|
000118  f8b40001          LDRH     r0,[r4,#1]
00011c  e000              B        |L6.288|
                  |L6.286|
00011e  e0b4              B        |L6.650|
                  |L6.288|
000120  f3c000ca          UBFX     r0,r0,#3,#11
000124  f5a06080          SUB      r0,r0,#0x400
000128  e005              B        |L6.310|
                  |L6.298|
00012a  f8b40001          LDRH     r0,[r4,#1]
00012e  f3c000ca          UBFX     r0,r0,#3,#11
000132  f5c06080          RSB      r0,r0,#0x400
                  |L6.310|
000136  2805              CMP      r0,#5
000138  dd1d              BLE      |L6.374|
;;;112    		{
;;;113    //			if(myabs(CarFramePID.Current)<90*22.7556f)
;;;114    			{
;;;115    				TempPitch = PitchPID.Target;
00013a  48af              LDR      r0,|L6.1016|
00013c  ed900a01          VLDR     s0,[r0,#4]
000140  eef08a40          VMOV.F32 s17,s0
;;;116    				TempPitch += (float)(1024 - (short)ptrmsg->ch1)/Parameter_User.data.PitchScale;//660/1750 
000144  f8b40001          LDRH     r0,[r4,#1]
000148  f3c000ca          UBFX     r0,r0,#3,#11
00014c  b200              SXTH     r0,r0
00014e  f5c06080          RSB      r0,r0,#0x400
000152  ee000a10          VMOV     s0,r0
000156  eef80ac0          VCVT.F32.S32 s1,s0
00015a  48a2              LDR      r0,|L6.996|
00015c  ed901a06          VLDR     s2,[r0,#0x18]
000160  ee800a81          VDIV.F32 s0,s1,s2
000164  ee300a28          VADD.F32 s0,s0,s17
000168  eef08a40          VMOV.F32 s17,s0
;;;117    				PitchPID.SetTarget(TempPitch);
00016c  eeb00a68          VMOV.F32 s0,s17
000170  48a1              LDR      r0,|L6.1016|
000172  f7fffffe          BL       _ZN7PIDBase9SetTargetEf ; PIDBase::SetTarget(float)
                  |L6.374|
;;;118    				
;;;119    			}
;;;120    		}
;;;121    		
;;;122    		if(myabs(ptrmsg->ch0 - 1024)>5)
000176  8820              LDRH     r0,[r4,#0]
000178  f24071ff          MOV      r1,#0x7ff
00017c  4008              ANDS     r0,r0,r1
00017e  f5a06080          SUB      r0,r0,#0x400
000182  2800              CMP      r0,#0
000184  dd04              BLE      |L6.400|
000186  8820              LDRH     r0,[r4,#0]
000188  4008              ANDS     r0,r0,r1
00018a  f5a06080          SUB      r0,r0,#0x400
00018e  e005              B        |L6.412|
                  |L6.400|
000190  8820              LDRH     r0,[r4,#0]
000192  f24071ff          MOV      r1,#0x7ff
000196  4008              ANDS     r0,r0,r1
000198  f5c06080          RSB      r0,r0,#0x400
                  |L6.412|
00019c  2805              CMP      r0,#5
00019e  dd0c              BLE      |L6.442|
;;;123    		{
;;;124    			AxicZ = (int)((1024 - (short)ptrmsg->ch0)*No1);
0001a0  8820              LDRH     r0,[r4,#0]
0001a2  f24071ff          MOV      r1,#0x7ff
0001a6  4008              ANDS     r0,r0,r1
0001a8  b200              SXTH     r0,r0
0001aa  f5c06080          RSB      r0,r0,#0x400
0001ae  ebc000c0          RSB      r0,r0,r0,LSL #3
0001b2  b200              SXTH     r0,r0
0001b4  4991              LDR      r1,|L6.1020|
0001b6  8008              STRH     r0,[r1,#0]
0001b8  e002              B        |L6.448|
                  |L6.442|
;;;125    		}
;;;126    		else
;;;127    			AxicZ = 0;
0001ba  2000              MOVS     r0,#0
0001bc  498f              LDR      r1,|L6.1020|
0001be  8008              STRH     r0,[r1,#0]
                  |L6.448|
;;;128    
;;;129    ////////////////////////////////////////////////////////////////////////////
;;;130    //////////////////////////底盘//////////////////////////////////////////////
;;;131    
;;;132    		if(myabs(ptrmsg->ch2 - 1024)>5)
0001c0  f8d40001          LDR      r0,[r4,#1]
0001c4  f3c0308a          UBFX     r0,r0,#14,#11
0001c8  f5a06080          SUB      r0,r0,#0x400
0001cc  2800              CMP      r0,#0
0001ce  dd06              BLE      |L6.478|
0001d0  f8d40001          LDR      r0,[r4,#1]
0001d4  f3c0308a          UBFX     r0,r0,#14,#11
0001d8  f5a06080          SUB      r0,r0,#0x400
0001dc  e005              B        |L6.490|
                  |L6.478|
0001de  f8d40001          LDR      r0,[r4,#1]
0001e2  f3c0308a          UBFX     r0,r0,#14,#11
0001e6  f5c06080          RSB      r0,r0,#0x400
                  |L6.490|
0001ea  2805              CMP      r0,#5
0001ec  dd18              BLE      |L6.544|
;;;133    			AxicX = 1024 - (ptrmsg->ch2 - 1024) * Parameter_User.data.DR_SPEED;
0001ee  f8d40001          LDR      r0,[r4,#1]
0001f2  f3c0308a          UBFX     r0,r0,#14,#11
0001f6  f5a06080          SUB      r0,r0,#0x400
0001fa  ee000a10          VMOV     s0,r0
0001fe  eef80ac0          VCVT.F32.S32 s1,s0
000202  4878              LDR      r0,|L6.996|
000204  ed901a05          VLDR     s2,[r0,#0x14]
000208  ed9f0a7d          VLDR     s0,|L6.1024|
00020c  ee000ac1          VMLS.F32 s0,s1,s2
000210  eebd0ac0          VCVT.S32.F32 s0,s0
000214  ee100a10          VMOV     r0,s0
000218  b200              SXTH     r0,r0
00021a  497a              LDR      r1,|L6.1028|
00021c  8008              STRH     r0,[r1,#0]
00021e  e003              B        |L6.552|
                  |L6.544|
;;;134    		else
;;;135    			AxicX = 1024;
000220  f44f6080          MOV      r0,#0x400
000224  4977              LDR      r1,|L6.1028|
000226  8008              STRH     r0,[r1,#0]
                  |L6.552|
;;;136    
;;;137    		if(myabs(ptrmsg->ch3 - 1024)>5)
000228  88a0              LDRH     r0,[r4,#4]
00022a  f3c0004a          UBFX     r0,r0,#1,#11
00022e  f5a06080          SUB      r0,r0,#0x400
000232  2800              CMP      r0,#0
000234  dd05              BLE      |L6.578|
000236  88a0              LDRH     r0,[r4,#4]
000238  f3c0004a          UBFX     r0,r0,#1,#11
00023c  f5a06080          SUB      r0,r0,#0x400
000240  e004              B        |L6.588|
                  |L6.578|
000242  88a0              LDRH     r0,[r4,#4]
000244  f3c0004a          UBFX     r0,r0,#1,#11
000248  f5c06080          RSB      r0,r0,#0x400
                  |L6.588|
00024c  2805              CMP      r0,#5
00024e  dd17              BLE      |L6.640|
;;;138    			AxicY = 1024 - (ptrmsg->ch3 - 1024) * Parameter_User.data.DR_SPEED;
000250  88a0              LDRH     r0,[r4,#4]
000252  f3c0004a          UBFX     r0,r0,#1,#11
000256  f5a06080          SUB      r0,r0,#0x400
00025a  ee000a10          VMOV     s0,r0
00025e  eef80ac0          VCVT.F32.S32 s1,s0
000262  4860              LDR      r0,|L6.996|
000264  ed901a05          VLDR     s2,[r0,#0x14]
000268  ed9f0a65          VLDR     s0,|L6.1024|
00026c  ee000ac1          VMLS.F32 s0,s1,s2
000270  eebd0ac0          VCVT.S32.F32 s0,s0
000274  ee100a10          VMOV     r0,s0
000278  b200              SXTH     r0,r0
00027a  4963              LDR      r1,|L6.1032|
00027c  8008              STRH     r0,[r1,#0]
00027e  e34b              B        |L6.2328|
                  |L6.640|
;;;139    		else
;;;140    			AxicY = 1024;
000280  f44f6080          MOV      r0,#0x400
000284  4960              LDR      r1,|L6.1032|
000286  8008              STRH     r0,[r1,#0]
000288  e346              B        |L6.2328|
                  |L6.650|
;;;141    
;;;142    //		if(myabs(ptrmsg->ch2 - 1024) > 10)
;;;143    //			AxicX = 1024 + (ptrmsg->ch2 - 1024) * Parameter_User.data.DR_SPEED;
;;;144    //		else
;;;145    //			AxicX = 1024;
;;;146    
;;;147    //		if(myabs(ptrmsg->ch3 - 1024) > 10)
;;;148    //			AxicY = 1024 + (ptrmsg->ch3 - 1024) * Parameter_User.data.DR_SPEED;
;;;149    //		else
;;;150    //			AxicY = 1024;
;;;151    	}
;;;152    	else
;;;153    	{
;;;154    
;;;155    //			Parameter_User.data.SPEED1 = 660;
;;;156    			float YawWeightTemp = Parameter_User.data.YAWWEIGHT[0];
00028a  4856              LDR      r0,|L6.996|
00028c  ed900a03          VLDR     s0,[r0,#0xc]
000290  eeb09a40          VMOV.F32 s18,s0
;;;157    
;;;158    			DR16_KM(ptrmsg,KEY_PRESSED_OFFSET_Q,&KM[0]);
000294  4a5d              LDR      r2,|L6.1036|
000296  2140              MOVS     r1,#0x40
000298  4620              MOV      r0,r4
00029a  f7fffffe          BL       _Z7DR16_KMP8RC_ValuetP13KM_KEY_STRUCT ; DR16_KM(RC_Value*, unsigned short, KM_KEY_STRUCT*)
;;;159    			DR16_KM(ptrmsg,KEY_PRESSED_OFFSET_C,&KM[1]);
00029e  4a5b              LDR      r2,|L6.1036|
0002a0  1c92              ADDS     r2,r2,#2
0002a2  f44f5100          MOV      r1,#0x2000
0002a6  4620              MOV      r0,r4
0002a8  f7fffffe          BL       _Z7DR16_KMP8RC_ValuetP13KM_KEY_STRUCT ; DR16_KM(RC_Value*, unsigned short, KM_KEY_STRUCT*)
;;;160    			DR16_KM(ptrmsg,KEY_PRESSED_OFFSET_V,&KM[2]);
0002ac  4a57              LDR      r2,|L6.1036|
0002ae  1d12              ADDS     r2,r2,#4
0002b0  f44f4180          MOV      r1,#0x4000
0002b4  4620              MOV      r0,r4
0002b6  f7fffffe          BL       _Z7DR16_KMP8RC_ValuetP13KM_KEY_STRUCT ; DR16_KM(RC_Value*, unsigned short, KM_KEY_STRUCT*)
;;;161    
;;;162    //			if(KM[0].KMFlag == 0)
;;;163    //			{
;;;164    //				Set_cv_flag(0);
;;;165    ////				StrategicMode = 0;
;;;166    //			}
;;;167    			if(KM[2].KMFlag == 0 && KM[1].KMFlag == 0 && KM[0].KMFlag == 0)
0002ba  4854              LDR      r0,|L6.1036|
0002bc  7940              LDRB     r0,[r0,#5]
0002be  b9c0              CBNZ     r0,|L6.754|
0002c0  4852              LDR      r0,|L6.1036|
0002c2  78c0              LDRB     r0,[r0,#3]
0002c4  b9a8              CBNZ     r0,|L6.754|
0002c6  4851              LDR      r0,|L6.1036|
0002c8  7840              LDRB     r0,[r0,#1]  ; KM
0002ca  b990              CBNZ     r0,|L6.754|
;;;168    			{
;;;169    				
;;;170    				
;;;171    //				if(StrategicMode == 4)
;;;172    //				{
;;;173    ////					YawPID.Target = YawPID.Current;
;;;174    //					Set_cv_flag(0);
;;;175    //				}
;;;176    //				Set_cv_flag(0);
;;;177    				if(KM[2].KMFlag == 0 && KM[1].KMFlag == 0 && !Get_cv_flag())
0002cc  484f              LDR      r0,|L6.1036|
0002ce  7940              LDRB     r0,[r0,#5]
0002d0  b978              CBNZ     r0,|L6.754|
0002d2  484e              LDR      r0,|L6.1036|
0002d4  78c0              LDRB     r0,[r0,#3]
0002d6  b960              CBNZ     r0,|L6.754|
0002d8  f7fffffe          BL       Get_cv_flag
0002dc  b948              CBNZ     r0,|L6.754|
;;;178    				{
;;;179    					CarFramePID.SetTarget(0);
0002de  ed9f0a4c          VLDR     s0,|L6.1040|
0002e2  4841              LDR      r0,|L6.1000|
0002e4  f7fffffe          BL       _ZN7PIDBase9SetTargetEf ; PIDBase::SetTarget(float)
;;;180    					StrategicMode = 0;
0002e8  ed9f0a49          VLDR     s0,|L6.1040|
0002ec  4842              LDR      r0,|L6.1016|
0002ee  ed800a00          VSTR     s0,[r0,#0]
                  |L6.754|
;;;181    				}
;;;182    			}
;;;183    
;;;184    			switch(ptrmsg->key)
0002f2  89e0              LDRH     r0,[r4,#0xe]
0002f4  b280              UXTH     r0,r0
0002f6  2812              CMP      r0,#0x12
0002f8  d06d              BEQ      |L6.982|
0002fa  dc0b              BGT      |L6.788|
0002fc  d26c              BCS      |L6.984|
0002fe  e8dff000          TBB      [pc,r0]
000302  6b5e              DCB      0x6b,0x5e
000304  916b9db5          DCB      0x91,0x6b,0x9d,0xb5
000308  d36ba9c4          DCB      0xd3,0x6b,0xa9,0xc4
00030c  e26b6b6b          DCB      0xe2,0x6b,0x6b,0x6b
000310  6b6bf2f3          DCB      0x6b,0x6b,0xf2,0xf3
                  |L6.788|
000314  2819              CMP      r0,#0x19
000316  d060              BEQ      |L6.986|
000318  dc08              BGT      |L6.812|
00031a  2814              CMP      r0,#0x14
00031c  d07e              BEQ      |L6.1052|
00031e  2815              CMP      r0,#0x15
000320  d07d              BEQ      |L6.1054|
000322  2816              CMP      r0,#0x16
000324  d07c              BEQ      |L6.1056|
000326  2818              CMP      r0,#0x18
                  |L6.808|
000328  d156              BNE      |L6.984|
00032a  e10d              B        |L6.1352|
                  |L6.812|
00032c  281a              CMP      r0,#0x1a
00032e  d078              BEQ      |L6.1058|
000330  2840              CMP      r0,#0x40
000332  d006              BEQ      |L6.834|
000334  f5b05f00          CMP      r0,#0x2000
000338  d029              BEQ      |L6.910|
00033a  f5b04f80          CMP      r0,#0x4000
00033e  d1f3              BNE      |L6.808|
000340  e031              B        |L6.934|
                  |L6.834|
;;;185    			{
;;;186    				/**
;;;187    				 * USEFOLLOWLINE
;;;188    				 */
;;;189    				{
;;;190    					// case KEY_PRESSED_OFFSET_R :bumark=1;break;
;;;191    					// case KEY_PRESSED_OFFSET_F :bumark=0;break;
;;;192    				}
;;;193    				/**
;;;194    				 * USECV
;;;195    				 */
;;;196    				{
;;;197    
;;;198    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_W: AxicY = 1024 + Parameter_User.data.SPEED1; AxicX = 1024 ;Set_cv_flag(1);break;
;;;199    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_S: AxicY = 1024 - Parameter_User.data.SPEED1; AxicX = 1024 ;Set_cv_flag(1);break;
;;;200    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_A: AxicX = 1024 - Parameter_User.data.SPEED1; AxicY = 1024 ;Set_cv_flag(1);break;
;;;201    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_D: AxicX = 1024 + Parameter_User.data.SPEED1; AxicY = 1024 ;Set_cv_flag(1);break;
;;;202    
;;;203    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_W + KEY_PRESSED_OFFSET_A: AxicY = 1024 + Parameter_User.data.SPEED1; AxicX = 1024 - Parameter_User.data.SPEED1; Set_cv_flag(1); break;
;;;204    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_W + KEY_PRESSED_OFFSET_D: AxicY = 1024 + Parameter_User.data.SPEED1; AxicX = 1024 + Parameter_User.data.SPEED1; Set_cv_flag(1); break;
;;;205    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_S + KEY_PRESSED_OFFSET_A: AxicY = 1024 - Parameter_User.data.SPEED1; AxicX = 1024 - Parameter_User.data.SPEED1; Set_cv_flag(1); break;
;;;206    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_S + KEY_PRESSED_OFFSET_D: AxicY = 1024 - Parameter_User.data.SPEED1; AxicX = 1024 + Parameter_User.data.SPEED1; Set_cv_flag(1); break;
;;;207    
;;;208    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_W: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; AxicY = 1024 + Parameter_User.data.SPEED2; AxicX = 1024; Set_cv_flag(1); break;
;;;209    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_S: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; AxicY = 1024 - Parameter_User.data.SPEED2; AxicX = 1024; Set_cv_flag(1); break;
;;;210    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_A: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; AxicX = 1024 - Parameter_User.data.SPEED2; AxicY = 1024; Set_cv_flag(1); break;
;;;211    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_D: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; AxicX = 1024 + Parameter_User.data.SPEED2; AxicY = 1024; Set_cv_flag(1); break;
;;;212    
;;;213    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_W + KEY_PRESSED_OFFSET_A: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; AxicY = 1024 + Parameter_User.data.SPEED2; AxicX = 1024 - Parameter_User.data.SPEED2; Set_cv_flag(1); break;
;;;214    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_W + KEY_PRESSED_OFFSET_D: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; AxicY = 1024 + Parameter_User.data.SPEED2; AxicX = 1024 + Parameter_User.data.SPEED2; Set_cv_flag(1); break;
;;;215    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_S + KEY_PRESSED_OFFSET_A: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; AxicY = 1024 - Parameter_User.data.SPEED2; AxicX = 1024 - Parameter_User.data.SPEED2; Set_cv_flag(1); break;
;;;216    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_S + KEY_PRESSED_OFFSET_D: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; AxicY = 1024 - Parameter_User.data.SPEED2; AxicX = 1024 + Parameter_User.data.SPEED2; Set_cv_flag(1); break;
;;;217    
;;;218    //					case KEY_PRESSED_OFFSET_Q : AxicX = 1024,AxicY = 1024;Set_cv_flag(1);break;
;;;219    //					case KEY_PRESSED_OFFSET_Q + KEY_PRESSED_OFFSET_SHIFT:YawWeightTemp = Parameter_User.data.YAWWEIGHT[1];AxicX = 1024,AxicY = 1024;Set_cv_flag(1);break;
;;;220    
;;;221    				}
;;;222    				/**
;;;223    				 * NOUSECV
;;;224    				 */
;;;225    				{
;;;226    					case KEY_PRESSED_OFFSET_Q :if(KM[0].KMFlag == 0)//cv
000342  4832              LDR      r0,|L6.1036|
000344  7840              LDRB     r0,[r0,#1]  ; KM
000346  bb08              CBNZ     r0,|L6.908|
;;;227    												{
;;;228    													if(StrategicMode != 4)
000348  482b              LDR      r0,|L6.1016|
00034a  ed900a00          VLDR     s0,[r0,#0]
00034e  eef10a00          VMOV.F32 s1,#4.00000000
000352  eeb40a60          VCMP.F32 s0,s1
000356  eef1fa10          VMRS     APSR_nzcv,FPSCR
00035a  d003              BEQ      |L6.868|
;;;229    														StrategicMode = 4;
00035c  eeb10a00          VMOV.F32 s0,#4.00000000
000360  ed800a00          VSTR     s0,[r0,#0]
                  |L6.868|
;;;230    													Set_cv_flag(!Get_cv_flag());
000364  f7fffffe          BL       Get_cv_flag
000368  b908              CBNZ     r0,|L6.878|
00036a  2001              MOVS     r0,#1
00036c  e000              B        |L6.880|
                  |L6.878|
00036e  2000              MOVS     r0,#0
                  |L6.880|
000370  4605              MOV      r5,r0
000372  f7fffffe          BL       Set_cv_flag
;;;231    													if(Get_cv_flag() == 0)
000376  f7fffffe          BL       Get_cv_flag
00037a  b920              CBNZ     r0,|L6.902|
;;;232    													{
;;;233    														StrategicMode = 0;
00037c  ed9f0a24          VLDR     s0,|L6.1040|
000380  481d              LDR      r0,|L6.1016|
000382  ed800a00          VSTR     s0,[r0,#0]
                  |L6.902|
;;;234    													}
;;;235    //													else
;;;236    //														StrategicMode = 4;
;;;237    //													Set_cv_flag(1);
;;;238    //													StrategicMode = 4;
;;;239    													KM[0].KMFlag = 1;
000386  2001              MOVS     r0,#1
000388  4920              LDR      r1,|L6.1036|
00038a  7048              STRB     r0,[r1,#1]
                  |L6.908|
;;;240    												}
;;;241    												break;
00038c  e14b              B        |L6.1574|
                  |L6.910|
;;;242    					case KEY_PRESSED_OFFSET_C :if(KM[1].KMFlag == 0)//底盘不动
00038e  481f              LDR      r0,|L6.1036|
000390  78c0              LDRB     r0,[r0,#3]
000392  b938              CBNZ     r0,|L6.932|
;;;243    												{
;;;244    													StrategicMode = 2;
000394  eeb00a00          VMOV.F32 s0,#2.00000000
000398  4817              LDR      r0,|L6.1016|
00039a  ed800a00          VSTR     s0,[r0,#0]
;;;245    													KM[1].KMFlag = 1;
00039e  2101              MOVS     r1,#1
0003a0  481a              LDR      r0,|L6.1036|
0003a2  70c1              STRB     r1,[r0,#3]
                  |L6.932|
;;;246    												}
;;;247    												break;
0003a4  e13f              B        |L6.1574|
                  |L6.934|
;;;248    					case KEY_PRESSED_OFFSET_V :if(KM[2].KMFlag == 0)//底盘抖动
0003a6  4819              LDR      r0,|L6.1036|
0003a8  7940              LDRB     r0,[r0,#5]
0003aa  b938              CBNZ     r0,|L6.956|
;;;249    												{
;;;250    													StrategicMode = 3;
0003ac  eeb00a08          VMOV.F32 s0,#3.00000000
0003b0  4811              LDR      r0,|L6.1016|
0003b2  ed800a00          VSTR     s0,[r0,#0]
;;;251    													KM[2].KMFlag = 1;
0003b6  2101              MOVS     r1,#1
0003b8  4814              LDR      r0,|L6.1036|
0003ba  7141              STRB     r1,[r0,#5]
                  |L6.956|
;;;252    												}
;;;253    												break;
0003bc  e133              B        |L6.1574|
;;;254    					// case KEY_PRESSED_OFFSET_Q :Set_cv_flag(1);break;
;;;255    					// case KEY_PRESSED_OFFSET_E :Set_cv_flag(0);break;
;;;256    					case KEY_PRESSED_OFFSET_W: TempAxicY = 1024 + Parameter_User.data.SPEED1; TempAxicX = 1024;break;
0003be  4809              LDR      r0,|L6.996|
0003c0  8840              LDRH     r0,[r0,#2]  ; Parameter_User
0003c2  f5006080          ADD      r0,r0,#0x400
0003c6  b200              SXTH     r0,r0
0003c8  4912              LDR      r1,|L6.1044|
0003ca  8008              STRH     r0,[r1,#0]
0003cc  f44f6080          MOV      r0,#0x400
0003d0  4911              LDR      r1,|L6.1048|
0003d2  8008              STRH     r0,[r1,#0]
0003d4  e127              B        |L6.1574|
                  |L6.982|
0003d6  e097              B        |L6.1288|
                  |L6.984|
0003d8  e11e              B        |L6.1560|
                  |L6.986|
0003da  e0d8              B        |L6.1422|
                  |L6.988|
                          DCD      PIDBegin_CAN
                  |L6.992|
                          DCD      YawPID
                  |L6.996|
                          DCD      Parameter_User
                  |L6.1000|
                          DCD      CarFramePID
                  |L6.1004|
0003ec  41b60b78          DCFS     0x41b60b78 ; 22.755599975585938
                  |L6.1008|
0003f0  42aa0000          DCFS     0x42aa0000 ; 85
                  |L6.1012|
0003f4  c2aa0000          DCFS     0xc2aa0000 ; -85
                  |L6.1016|
                          DCD      PitchPID
                  |L6.1020|
                          DCD      AxicZ
                  |L6.1024|
000400  44800000          DCFS     0x44800000 ; 1024
                  |L6.1028|
                          DCD      AxicX
                  |L6.1032|
                          DCD      AxicY
                  |L6.1036|
                          DCD      ||KM||
                  |L6.1040|
000410  00000000          DCFS     0x00000000 ; 0
                  |L6.1044|
                          DCD      TempAxicY
                  |L6.1048|
                          DCD      TempAxicX
                  |L6.1052|
00041c  e084              B        |L6.1320|
                  |L6.1054|
00041e  e0a3              B        |L6.1384|
                  |L6.1056|
000420  e0c8              B        |L6.1460|
                  |L6.1058|
000422  e0da              B        |L6.1498|
;;;257    					case KEY_PRESSED_OFFSET_S: TempAxicY = 1024 - Parameter_User.data.SPEED1; TempAxicX = 1024;break;
000424  48fe              LDR      r0,|L6.2080|
000426  8840              LDRH     r0,[r0,#2]  ; Parameter_User
000428  f5c06080          RSB      r0,r0,#0x400
00042c  b200              SXTH     r0,r0
00042e  49fd              LDR      r1,|L6.2084|
000430  8008              STRH     r0,[r1,#0]
000432  f44f6080          MOV      r0,#0x400
000436  49fc              LDR      r1,|L6.2088|
000438  8008              STRH     r0,[r1,#0]
00043a  e0f4              B        |L6.1574|
;;;258    					case KEY_PRESSED_OFFSET_A: TempAxicX = 1024 - Parameter_User.data.SPEED1; TempAxicY = 1024;break;
00043c  48f8              LDR      r0,|L6.2080|
00043e  8840              LDRH     r0,[r0,#2]  ; Parameter_User
000440  f5c06080          RSB      r0,r0,#0x400
000444  b200              SXTH     r0,r0
000446  49f8              LDR      r1,|L6.2088|
000448  8008              STRH     r0,[r1,#0]
00044a  f44f6080          MOV      r0,#0x400
00044e  49f5              LDR      r1,|L6.2084|
000450  8008              STRH     r0,[r1,#0]
000452  e0e8              B        |L6.1574|
;;;259    					case KEY_PRESSED_OFFSET_D: TempAxicX = 1024 + Parameter_User.data.SPEED1; TempAxicY = 1024;break;
000454  48f2              LDR      r0,|L6.2080|
000456  8840              LDRH     r0,[r0,#2]  ; Parameter_User
000458  f5006080          ADD      r0,r0,#0x400
00045c  b200              SXTH     r0,r0
00045e  49f2              LDR      r1,|L6.2088|
000460  8008              STRH     r0,[r1,#0]
000462  f44f6080          MOV      r0,#0x400
000466  49ef              LDR      r1,|L6.2084|
000468  8008              STRH     r0,[r1,#0]
00046a  e0dc              B        |L6.1574|
;;;260    
;;;261    					case KEY_PRESSED_OFFSET_W + KEY_PRESSED_OFFSET_A: TempAxicY = 1024 + Parameter_User.data.SPEED1; TempAxicX = 1024 - Parameter_User.data.SPEED1; break;
00046c  48ec              LDR      r0,|L6.2080|
00046e  8840              LDRH     r0,[r0,#2]  ; Parameter_User
000470  f5006080          ADD      r0,r0,#0x400
000474  b200              SXTH     r0,r0
000476  49eb              LDR      r1,|L6.2084|
000478  8008              STRH     r0,[r1,#0]
00047a  48e9              LDR      r0,|L6.2080|
00047c  8840              LDRH     r0,[r0,#2]  ; Parameter_User
00047e  f5c06080          RSB      r0,r0,#0x400
000482  b200              SXTH     r0,r0
000484  49e8              LDR      r1,|L6.2088|
000486  8008              STRH     r0,[r1,#0]
000488  e0cd              B        |L6.1574|
;;;262    					case KEY_PRESSED_OFFSET_W + KEY_PRESSED_OFFSET_D: TempAxicY = 1024 + Parameter_User.data.SPEED1; TempAxicX = 1024 + Parameter_User.data.SPEED1; break;
00048a  48e5              LDR      r0,|L6.2080|
00048c  8840              LDRH     r0,[r0,#2]  ; Parameter_User
00048e  f5006080          ADD      r0,r0,#0x400
000492  b200              SXTH     r0,r0
000494  49e3              LDR      r1,|L6.2084|
000496  8008              STRH     r0,[r1,#0]
000498  48e1              LDR      r0,|L6.2080|
00049a  8840              LDRH     r0,[r0,#2]  ; Parameter_User
00049c  f5006080          ADD      r0,r0,#0x400
0004a0  b200              SXTH     r0,r0
0004a2  49e1              LDR      r1,|L6.2088|
0004a4  8008              STRH     r0,[r1,#0]
0004a6  e0be              B        |L6.1574|
;;;263    					case KEY_PRESSED_OFFSET_S + KEY_PRESSED_OFFSET_A: TempAxicY = 1024 - Parameter_User.data.SPEED1; TempAxicX = 1024 - Parameter_User.data.SPEED1; break;
0004a8  48dd              LDR      r0,|L6.2080|
0004aa  8840              LDRH     r0,[r0,#2]  ; Parameter_User
0004ac  f5c06080          RSB      r0,r0,#0x400
0004b0  b200              SXTH     r0,r0
0004b2  49dc              LDR      r1,|L6.2084|
0004b4  8008              STRH     r0,[r1,#0]
0004b6  48da              LDR      r0,|L6.2080|
0004b8  8840              LDRH     r0,[r0,#2]  ; Parameter_User
0004ba  f5c06080          RSB      r0,r0,#0x400
0004be  b200              SXTH     r0,r0
0004c0  49d9              LDR      r1,|L6.2088|
0004c2  8008              STRH     r0,[r1,#0]
0004c4  e0af              B        |L6.1574|
;;;264    					case KEY_PRESSED_OFFSET_S + KEY_PRESSED_OFFSET_D: TempAxicY = 1024 - Parameter_User.data.SPEED1; TempAxicX = 1024 + Parameter_User.data.SPEED1; break;
0004c6  48d6              LDR      r0,|L6.2080|
0004c8  8840              LDRH     r0,[r0,#2]  ; Parameter_User
0004ca  f5c06080          RSB      r0,r0,#0x400
0004ce  b200              SXTH     r0,r0
0004d0  49d4              LDR      r1,|L6.2084|
0004d2  8008              STRH     r0,[r1,#0]
0004d4  48d2              LDR      r0,|L6.2080|
0004d6  8840              LDRH     r0,[r0,#2]  ; Parameter_User
0004d8  f5006080          ADD      r0,r0,#0x400
0004dc  b200              SXTH     r0,r0
0004de  49d2              LDR      r1,|L6.2088|
0004e0  8008              STRH     r0,[r1,#0]
0004e2  e0a0              B        |L6.1574|
0004e4  e000              B        |L6.1256|
0004e6  e08b              B        |L6.1536|
                  |L6.1256|
;;;265    
;;;266    					case KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_W: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; TempAxicY = 1024 + Parameter_User.data.SPEED2; TempAxicX = 1024; break;
0004e8  48cd              LDR      r0,|L6.2080|
0004ea  ed900a04          VLDR     s0,[r0,#0x10]
0004ee  eeb09a40          VMOV.F32 s18,s0
0004f2  8880              LDRH     r0,[r0,#4]  ; Parameter_User
0004f4  f5006080          ADD      r0,r0,#0x400
0004f8  b200              SXTH     r0,r0
0004fa  49ca              LDR      r1,|L6.2084|
0004fc  8008              STRH     r0,[r1,#0]
0004fe  f44f6080          MOV      r0,#0x400
000502  49c9              LDR      r1,|L6.2088|
000504  8008              STRH     r0,[r1,#0]
000506  e08e              B        |L6.1574|
                  |L6.1288|
;;;267    					case KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_S: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; TempAxicY = 1024 - Parameter_User.data.SPEED2; TempAxicX = 1024; break;
000508  48c5              LDR      r0,|L6.2080|
00050a  ed900a04          VLDR     s0,[r0,#0x10]
00050e  eeb09a40          VMOV.F32 s18,s0
000512  8880              LDRH     r0,[r0,#4]  ; Parameter_User
000514  f5c06080          RSB      r0,r0,#0x400
000518  b200              SXTH     r0,r0
00051a  49c2              LDR      r1,|L6.2084|
00051c  8008              STRH     r0,[r1,#0]
00051e  f44f6080          MOV      r0,#0x400
000522  49c1              LDR      r1,|L6.2088|
000524  8008              STRH     r0,[r1,#0]
000526  e07e              B        |L6.1574|
                  |L6.1320|
;;;268    					case KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_A: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; TempAxicX = 1024 - Parameter_User.data.SPEED2; TempAxicY = 1024; break;
000528  48bd              LDR      r0,|L6.2080|
00052a  ed900a04          VLDR     s0,[r0,#0x10]
00052e  eeb09a40          VMOV.F32 s18,s0
000532  8880              LDRH     r0,[r0,#4]  ; Parameter_User
000534  f5c06080          RSB      r0,r0,#0x400
000538  b200              SXTH     r0,r0
00053a  49bb              LDR      r1,|L6.2088|
00053c  8008              STRH     r0,[r1,#0]
00053e  f44f6080          MOV      r0,#0x400
000542  49b8              LDR      r1,|L6.2084|
000544  8008              STRH     r0,[r1,#0]
000546  e06e              B        |L6.1574|
                  |L6.1352|
;;;269    					case KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_D: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; TempAxicX = 1024 + Parameter_User.data.SPEED2; TempAxicY = 1024; break;
000548  48b5              LDR      r0,|L6.2080|
00054a  ed900a04          VLDR     s0,[r0,#0x10]
00054e  eeb09a40          VMOV.F32 s18,s0
000552  8880              LDRH     r0,[r0,#4]  ; Parameter_User
000554  f5006080          ADD      r0,r0,#0x400
000558  b200              SXTH     r0,r0
00055a  49b3              LDR      r1,|L6.2088|
00055c  8008              STRH     r0,[r1,#0]
00055e  f44f6080          MOV      r0,#0x400
000562  49b0              LDR      r1,|L6.2084|
000564  8008              STRH     r0,[r1,#0]
000566  e05e              B        |L6.1574|
                  |L6.1384|
;;;270    
;;;271    					case KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_W + KEY_PRESSED_OFFSET_A: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; TempAxicY = 1024 + Parameter_User.data.SPEED2; TempAxicX = 1024 - Parameter_User.data.SPEED2; break;
000568  48ad              LDR      r0,|L6.2080|
00056a  ed900a04          VLDR     s0,[r0,#0x10]
00056e  eeb09a40          VMOV.F32 s18,s0
000572  8880              LDRH     r0,[r0,#4]  ; Parameter_User
000574  f5006080          ADD      r0,r0,#0x400
000578  b200              SXTH     r0,r0
00057a  49aa              LDR      r1,|L6.2084|
00057c  8008              STRH     r0,[r1,#0]
00057e  48a8              LDR      r0,|L6.2080|
000580  8880              LDRH     r0,[r0,#4]  ; Parameter_User
000582  f5c06080          RSB      r0,r0,#0x400
000586  b200              SXTH     r0,r0
000588  49a7              LDR      r1,|L6.2088|
00058a  8008              STRH     r0,[r1,#0]
00058c  e04b              B        |L6.1574|
                  |L6.1422|
;;;272    					case KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_W + KEY_PRESSED_OFFSET_D: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; TempAxicY = 1024 + Parameter_User.data.SPEED2; TempAxicX = 1024 + Parameter_User.data.SPEED2; break;
00058e  48a4              LDR      r0,|L6.2080|
000590  ed900a04          VLDR     s0,[r0,#0x10]
000594  eeb09a40          VMOV.F32 s18,s0
000598  8880              LDRH     r0,[r0,#4]  ; Parameter_User
00059a  f5006080          ADD      r0,r0,#0x400
00059e  b200              SXTH     r0,r0
0005a0  49a0              LDR      r1,|L6.2084|
0005a2  8008              STRH     r0,[r1,#0]
0005a4  489e              LDR      r0,|L6.2080|
0005a6  8880              LDRH     r0,[r0,#4]  ; Parameter_User
0005a8  f5006080          ADD      r0,r0,#0x400
0005ac  b200              SXTH     r0,r0
0005ae  499e              LDR      r1,|L6.2088|
0005b0  8008              STRH     r0,[r1,#0]
0005b2  e038              B        |L6.1574|
                  |L6.1460|
;;;273    					case KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_S + KEY_PRESSED_OFFSET_A: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; TempAxicY = 1024 - Parameter_User.data.SPEED2; TempAxicX = 1024 - Parameter_User.data.SPEED2; break;
0005b4  489a              LDR      r0,|L6.2080|
0005b6  ed900a04          VLDR     s0,[r0,#0x10]
0005ba  eeb09a40          VMOV.F32 s18,s0
0005be  8880              LDRH     r0,[r0,#4]  ; Parameter_User
0005c0  f5c06080          RSB      r0,r0,#0x400
0005c4  b200              SXTH     r0,r0
0005c6  4997              LDR      r1,|L6.2084|
0005c8  8008              STRH     r0,[r1,#0]
0005ca  4895              LDR      r0,|L6.2080|
0005cc  8880              LDRH     r0,[r0,#4]  ; Parameter_User
0005ce  f5c06080          RSB      r0,r0,#0x400
0005d2  b200              SXTH     r0,r0
0005d4  4994              LDR      r1,|L6.2088|
0005d6  8008              STRH     r0,[r1,#0]
0005d8  e025              B        |L6.1574|
                  |L6.1498|
;;;274    					case KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_S + KEY_PRESSED_OFFSET_D: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; TempAxicY = 1024 - Parameter_User.data.SPEED2; TempAxicX = 1024 + Parameter_User.data.SPEED2; break;
0005da  4891              LDR      r0,|L6.2080|
0005dc  ed900a04          VLDR     s0,[r0,#0x10]
0005e0  eeb09a40          VMOV.F32 s18,s0
0005e4  8880              LDRH     r0,[r0,#4]  ; Parameter_User
0005e6  f5c06080          RSB      r0,r0,#0x400
0005ea  b200              SXTH     r0,r0
0005ec  498d              LDR      r1,|L6.2084|
0005ee  8008              STRH     r0,[r1,#0]
0005f0  488b              LDR      r0,|L6.2080|
0005f2  8880              LDRH     r0,[r0,#4]  ; Parameter_User
0005f4  f5006080          ADD      r0,r0,#0x400
0005f8  b200              SXTH     r0,r0
0005fa  498b              LDR      r1,|L6.2088|
0005fc  8008              STRH     r0,[r1,#0]
0005fe  e012              B        |L6.1574|
                  |L6.1536|
;;;275    
;;;276    					case KEY_PRESSED_OFFSET_SHIFT:YawWeightTemp = Parameter_User.data.YAWWEIGHT[1];TempAxicX = 1024,TempAxicY = 1024;break;
000600  4887              LDR      r0,|L6.2080|
000602  ed900a04          VLDR     s0,[r0,#0x10]
000606  eeb09a40          VMOV.F32 s18,s0
00060a  f44f6080          MOV      r0,#0x400
00060e  4986              LDR      r1,|L6.2088|
000610  8008              STRH     r0,[r1,#0]
000612  4984              LDR      r1,|L6.2084|
000614  8008              STRH     r0,[r1,#0]
000616  e006              B        |L6.1574|
                  |L6.1560|
;;;277    					// case KEY_PRESSED_OFFSET_W: TempAxicY = 1024 + Parameter_User.data.SPEED1; TempAxicX = 1024; Set_cv_flag(0);break;
;;;278    					// case KEY_PRESSED_OFFSET_S: TempAxicY = 1024 - Parameter_User.data.SPEED1; TempAxicX = 1024; Set_cv_flag(0);break;
;;;279    					// case KEY_PRESSED_OFFSET_A: TempAxicX = 1024 - Parameter_User.data.SPEED1; TempAxicY = 1024; Set_cv_flag(0);break;
;;;280    					// case KEY_PRESSED_OFFSET_D: TempAxicX = 1024 + Parameter_User.data.SPEED1; TempAxicY = 1024; Set_cv_flag(0);break;
;;;281    
;;;282    					// case KEY_PRESSED_OFFSET_W + KEY_PRESSED_OFFSET_A: TempAxicY = 1024 + Parameter_User.data.SPEED1; TempAxicX = 1024 - Parameter_User.data.SPEED1; Set_cv_flag(0); break;
;;;283    					// case KEY_PRESSED_OFFSET_W + KEY_PRESSED_OFFSET_D: TempAxicY = 1024 + Parameter_User.data.SPEED1; TempAxicX = 1024 + Parameter_User.data.SPEED1; Set_cv_flag(0); break;
;;;284    					// case KEY_PRESSED_OFFSET_S + KEY_PRESSED_OFFSET_A: TempAxicY = 1024 - Parameter_User.data.SPEED1; TempAxicX = 1024 - Parameter_User.data.SPEED1; Set_cv_flag(0); break;
;;;285    					// case KEY_PRESSED_OFFSET_S + KEY_PRESSED_OFFSET_D: TempAxicY = 1024 - Parameter_User.data.SPEED1; TempAxicX = 1024 + Parameter_User.data.SPEED1; Set_cv_flag(0); break;
;;;286    
;;;287    					// case KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_W: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; TempAxicY = 1024 + Parameter_User.data.SPEED2; TempAxicX = 1024; Set_cv_flag(0); break;
;;;288    					// case KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_S: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; TempAxicY = 1024 - Parameter_User.data.SPEED2; TempAxicX = 1024; Set_cv_flag(0); break;
;;;289    					// case KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_A: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; TempAxicX = 1024 - Parameter_User.data.SPEED2; TempAxicY = 1024; Set_cv_flag(0); break;
;;;290    					// case KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_D: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; TempAxicX = 1024 + Parameter_User.data.SPEED2; TempAxicY = 1024; Set_cv_flag(0); break;
;;;291    
;;;292    					// case KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_W + KEY_PRESSED_OFFSET_A: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; TempAxicY = 1024 + Parameter_User.data.SPEED2; TempAxicX = 1024 - Parameter_User.data.SPEED2; Set_cv_flag(0); break;
;;;293    					// case KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_W + KEY_PRESSED_OFFSET_D: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; TempAxicY = 1024 + Parameter_User.data.SPEED2; TempAxicX = 1024 + Parameter_User.data.SPEED2; Set_cv_flag(0); break;
;;;294    					// case KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_S + KEY_PRESSED_OFFSET_A: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; TempAxicY = 1024 - Parameter_User.data.SPEED2; TempAxicX = 1024 - Parameter_User.data.SPEED2; Set_cv_flag(0); break;
;;;295    					// case KEY_PRESSED_OFFSET_SHIFT + KEY_PRESSED_OFFSET_S + KEY_PRESSED_OFFSET_D: YawWeightTemp = Parameter_User.data.YAWWEIGHT[1]; TempAxicY = 1024 - Parameter_User.data.SPEED2; TempAxicX = 1024 + Parameter_User.data.SPEED2; Set_cv_flag(0); break;
;;;296    
;;;297    					// case KEY_PRESSED_OFFSET_SHIFT:YawWeightTemp = Parameter_User.data.YAWWEIGHT[1];TempAxicX = 1024,TempAxicY = 1024;Set_cv_flag(0);break;
;;;298    				}
;;;299    				default: TempAxicX = 1024,TempAxicY = 1024;break;//bumark=0;
000618  f44f6080          MOV      r0,#0x400
00061c  4982              LDR      r1,|L6.2088|
00061e  8008              STRH     r0,[r1,#0]
000620  4980              LDR      r1,|L6.2084|
000622  8008              STRH     r0,[r1,#0]
000624  bf00              NOP      
                  |L6.1574|
000626  bf00              NOP                            ;241
;;;300    
;;;301    			}
;;;302    //==========================================================
;;;303    //处理按键产生的阶跃信号
;;;304    			AxicX += (TempAxicX - AxicX)/1.2;
000628  497f              LDR      r1,|L6.2088|
00062a  f9b11000          LDRSH    r1,[r1,#0]  ; TempAxicX
00062e  4a7f              LDR      r2,|L6.2092|
000630  f9b22000          LDRSH    r2,[r2,#0]  ; AxicX
000634  1a88              SUBS     r0,r1,r2
000636  f7fffffe          BL       __aeabi_i2d
00063a  ec410b1d          VMOV     d13,r0,r1
00063e  ed9f0b7c          VLDR     d0,|L6.2096|
000642  ec532b10          VMOV     r2,r3,d0
000646  f7fffffe          BL       __aeabi_ddiv
00064a  ec410b1b          VMOV     d11,r0,r1
00064e  4877              LDR      r0,|L6.2092|
000650  f9b00000          LDRSH    r0,[r0,#0]  ; AxicX
000654  f7fffffe          BL       __aeabi_i2d
000658  ec410b1c          VMOV     d12,r0,r1
00065c  ec532b1b          VMOV     r2,r3,d11
000660  f7fffffe          BL       __aeabi_dadd
000664  ec410b1a          VMOV     d10,r0,r1
000668  f7fffffe          BL       __aeabi_d2iz
00066c  b200              SXTH     r0,r0
00066e  496f              LDR      r1,|L6.2092|
000670  8008              STRH     r0,[r1,#0]
;;;305    			if(myabs(AxicX - 1024)<5)
000672  4608              MOV      r0,r1
000674  f9b00000          LDRSH    r0,[r0,#0]  ; AxicX
000678  f5a06080          SUB      r0,r0,#0x400
00067c  2800              CMP      r0,#0
00067e  dd05              BLE      |L6.1676|
000680  4608              MOV      r0,r1
000682  f9b00000          LDRSH    r0,[r0,#0]  ; AxicX
000686  f5a06080          SUB      r0,r0,#0x400
00068a  e004              B        |L6.1686|
                  |L6.1676|
00068c  4867              LDR      r0,|L6.2092|
00068e  f9b00000          LDRSH    r0,[r0,#0]  ; AxicX
000692  f5c06080          RSB      r0,r0,#0x400
                  |L6.1686|
000696  2805              CMP      r0,#5
000698  da04              BGE      |L6.1700|
;;;306    				AxicX = 1024;
00069a  f44f6080          MOV      r0,#0x400
00069e  4963              LDR      r1,|L6.2092|
0006a0  8008              STRH     r0,[r1,#0]
0006a2  e019              B        |L6.1752|
                  |L6.1700|
;;;307    			else if(AxicX - 1024>650) //1684
0006a4  4861              LDR      r0,|L6.2092|
0006a6  f9b00000          LDRSH    r0,[r0,#0]  ; AxicX
0006aa  f5a06080          SUB      r0,r0,#0x400
0006ae  f240218a          MOV      r1,#0x28a
0006b2  4288              CMP      r0,r1
0006b4  dd04              BLE      |L6.1728|
;;;308    				AxicX = 1684;
0006b6  f2406094          MOV      r0,#0x694
0006ba  495c              LDR      r1,|L6.2092|
0006bc  8008              STRH     r0,[r1,#0]
0006be  e00b              B        |L6.1752|
                  |L6.1728|
;;;309    			else if(AxicX - 1024<-650) //364
0006c0  485a              LDR      r0,|L6.2092|
0006c2  f9b00000          LDRSH    r0,[r0,#0]  ; AxicX
0006c6  f5a06080          SUB      r0,r0,#0x400
0006ca  495b              LDR      r1,|L6.2104|
0006cc  4288              CMP      r0,r1
0006ce  da03              BGE      |L6.1752|
;;;310    				AxicX = 364;
0006d0  f44f70b6          MOV      r0,#0x16c
0006d4  4955              LDR      r1,|L6.2092|
0006d6  8008              STRH     r0,[r1,#0]
                  |L6.1752|
;;;311    
;;;312    			AxicY += (TempAxicY - AxicY)/1.2;
0006d8  4952              LDR      r1,|L6.2084|
0006da  f9b11000          LDRSH    r1,[r1,#0]  ; TempAxicY
0006de  4a57              LDR      r2,|L6.2108|
0006e0  f9b22000          LDRSH    r2,[r2,#0]  ; AxicY
0006e4  1a88              SUBS     r0,r1,r2
0006e6  f7fffffe          BL       __aeabi_i2d
0006ea  ec410b1d          VMOV     d13,r0,r1
0006ee  ed9f0b50          VLDR     d0,|L6.2096|
0006f2  ec532b10          VMOV     r2,r3,d0
0006f6  f7fffffe          BL       __aeabi_ddiv
0006fa  ec410b1b          VMOV     d11,r0,r1
0006fe  484f              LDR      r0,|L6.2108|
000700  f9b00000          LDRSH    r0,[r0,#0]  ; AxicY
000704  f7fffffe          BL       __aeabi_i2d
000708  ec410b1c          VMOV     d12,r0,r1
00070c  ec532b1b          VMOV     r2,r3,d11
000710  f7fffffe          BL       __aeabi_dadd
000714  ec410b1a          VMOV     d10,r0,r1
000718  f7fffffe          BL       __aeabi_d2iz
00071c  b200              SXTH     r0,r0
00071e  4947              LDR      r1,|L6.2108|
000720  8008              STRH     r0,[r1,#0]
;;;313    			if(myabs(AxicY - 1024)<5)
000722  4608              MOV      r0,r1
000724  f9b00000          LDRSH    r0,[r0,#0]  ; AxicY
000728  f5a06080          SUB      r0,r0,#0x400
00072c  2800              CMP      r0,#0
00072e  dd05              BLE      |L6.1852|
000730  4608              MOV      r0,r1
000732  f9b00000          LDRSH    r0,[r0,#0]  ; AxicY
000736  f5a06080          SUB      r0,r0,#0x400
00073a  e004              B        |L6.1862|
                  |L6.1852|
00073c  483f              LDR      r0,|L6.2108|
00073e  f9b00000          LDRSH    r0,[r0,#0]  ; AxicY
000742  f5c06080          RSB      r0,r0,#0x400
                  |L6.1862|
000746  2805              CMP      r0,#5
000748  da04              BGE      |L6.1876|
;;;314    				AxicY = 1024;
00074a  f44f6080          MOV      r0,#0x400
00074e  493b              LDR      r1,|L6.2108|
000750  8008              STRH     r0,[r1,#0]
000752  e019              B        |L6.1928|
                  |L6.1876|
;;;315    			else if(AxicY - 1024>650) //1684
000754  4839              LDR      r0,|L6.2108|
000756  f9b00000          LDRSH    r0,[r0,#0]  ; AxicY
00075a  f5a06080          SUB      r0,r0,#0x400
00075e  f240218a          MOV      r1,#0x28a
000762  4288              CMP      r0,r1
000764  dd04              BLE      |L6.1904|
;;;316    				AxicY = 1684;
000766  f2406094          MOV      r0,#0x694
00076a  4934              LDR      r1,|L6.2108|
00076c  8008              STRH     r0,[r1,#0]
00076e  e00b              B        |L6.1928|
                  |L6.1904|
;;;317    			else if(AxicY - 1024<-650) //364
000770  4832              LDR      r0,|L6.2108|
000772  f9b00000          LDRSH    r0,[r0,#0]  ; AxicY
000776  f5a06080          SUB      r0,r0,#0x400
00077a  492f              LDR      r1,|L6.2104|
00077c  4288              CMP      r0,r1
00077e  da03              BGE      |L6.1928|
;;;318    				AxicY = 364;
000780  f44f70b6          MOV      r0,#0x16c
000784  492d              LDR      r1,|L6.2108|
000786  8008              STRH     r0,[r1,#0]
                  |L6.1928|
;;;319    //			u1_printf("%d\t%d\r\n",AxicX,AxicY);
;;;320    //==========================================================
;;;321    
;;;322    			TempPitch = PitchPID.Target;
000788  482d              LDR      r0,|L6.2112|
00078a  ed900a01          VLDR     s0,[r0,#4]
00078e  eef08a40          VMOV.F32 s17,s0
;;;323    			TempPitch += ptrmsg->y * Parameter_User.data.PITCHWEIGHT;
000792  8920              LDRH     r0,[r4,#8]
000794  0400              LSLS     r0,r0,#16
000796  1402              ASRS     r2,r0,#16
000798  17c1              ASRS     r1,r0,#31
00079a  4610              MOV      r0,r2
00079c  f7fffffe          BL       __aeabi_l2f
0007a0  ee000a10          VMOV     s0,r0
0007a4  481e              LDR      r0,|L6.2080|
0007a6  ed901a02          VLDR     s2,[r0,#8]
0007aa  eef00a68          VMOV.F32 s1,s17
0007ae  ee400a01          VMLA.F32 s1,s0,s2
0007b2  eef08a60          VMOV.F32 s17,s1
;;;324    			PitchPID.SetTarget(TempPitch);
0007b6  eeb00a68          VMOV.F32 s0,s17
0007ba  4821              LDR      r0,|L6.2112|
0007bc  f7fffffe          BL       _ZN7PIDBase9SetTargetEf ; PIDBase::SetTarget(float)
;;;325    
;;;326    //			if(myabs(CarFramePID.Current)<90*22.7556f)
;;;327    			{
;;;328    				if(!Get_cv_flag())
0007c0  f7fffffe          BL       Get_cv_flag
0007c4  bb50              CBNZ     r0,|L6.2076|
;;;329    				{
;;;330    					TempYaw = YawPID.Target;
0007c6  481f              LDR      r0,|L6.2116|
0007c8  ed900a01          VLDR     s0,[r0,#4]
0007cc  eeb08a40          VMOV.F32 s16,s0
;;;331    					
;;;332    						
;;;333    					TempYaw -= ptrmsg->x * YawWeightTemp;
0007d0  88e0              LDRH     r0,[r4,#6]
0007d2  0401              LSLS     r1,r0,#16
0007d4  140a              ASRS     r2,r1,#16
0007d6  17c9              ASRS     r1,r1,#31
0007d8  4610              MOV      r0,r2
0007da  f7fffffe          BL       __aeabi_l2f
0007de  ee000a10          VMOV     s0,r0
0007e2  eef00a48          VMOV.F32 s1,s16
0007e6  ee400a49          VMLS.F32 s1,s0,s18
0007ea  eeb08a60          VMOV.F32 s16,s1
;;;334    					if(CarFramePID.Current/22.7556f >=85)
0007ee  4816              LDR      r0,|L6.2120|
0007f0  edd00a02          VLDR     s1,[r0,#8]
0007f4  ed9f1a15          VLDR     s2,|L6.2124|
0007f8  ee800a81          VDIV.F32 s0,s1,s2
0007fc  eddf0a14          VLDR     s1,|L6.2128|
000800  eeb40ae0          VCMPE.F32 s0,s1
000804  eef1fa10          VMRS     APSR_nzcv,FPSCR
000808  db29              BLT      |L6.2142|
;;;335    					{
;;;336    						if(YawPID.Target < TempYaw)
00080a  480e              LDR      r0,|L6.2116|
00080c  ed900a01          VLDR     s0,[r0,#4]
000810  eeb40ac8          VCMPE.F32 s0,s16
000814  eef1fa10          VMRS     APSR_nzcv,FPSCR
000818  d23b              BCS      |L6.2194|
;;;337    							TempYaw = YawPID.Target;
00081a  e01b              B        |L6.2132|
                  |L6.2076|
00081c  e03f              B        |L6.2206|
00081e  0000              DCW      0x0000
                  |L6.2080|
                          DCD      Parameter_User
                  |L6.2084|
                          DCD      TempAxicY
                  |L6.2088|
                          DCD      TempAxicX
                  |L6.2092|
                          DCD      AxicX
                  |L6.2096|
000830  33333333          DCFD     0x3ff3333333333333 ; 1.2
000834  3ff33333
                  |L6.2104|
                          DCD      0xfffffd76
                  |L6.2108|
                          DCD      AxicY
                  |L6.2112|
                          DCD      PitchPID
                  |L6.2116|
                          DCD      YawPID
                  |L6.2120|
                          DCD      CarFramePID
                  |L6.2124|
00084c  41b60b78          DCFS     0x41b60b78 ; 22.755599975585938
                  |L6.2128|
000850  42aa0000          DCFS     0x42aa0000 ; 85
                  |L6.2132|
000854  ed900a01          VLDR     s0,[r0,#4]
000858  eeb08a40          VMOV.F32 s16,s0
00085c  e019              B        |L6.2194|
                  |L6.2142|
;;;338    					}
;;;339    					else if(CarFramePID.Current/22.7556f <=-85)
00085e  4873              LDR      r0,|L6.2604|
000860  edd00a02          VLDR     s1,[r0,#8]
000864  ed1f1a07          VLDR     s2,|L6.2124|
000868  ee800a81          VDIV.F32 s0,s1,s2
00086c  eddf0a70          VLDR     s1,|L6.2608|
000870  eeb40ae0          VCMPE.F32 s0,s1
000874  eef1fa10          VMRS     APSR_nzcv,FPSCR
000878  d80b              BHI      |L6.2194|
;;;340    					{
;;;341    						if(YawPID.Target > TempYaw)
00087a  486e              LDR      r0,|L6.2612|
00087c  ed900a01          VLDR     s0,[r0,#4]
000880  eeb40ac8          VCMPE.F32 s0,s16
000884  eef1fa10          VMRS     APSR_nzcv,FPSCR
000888  dd03              BLE      |L6.2194|
;;;342    							TempYaw = YawPID.Target;
00088a  ed900a01          VLDR     s0,[r0,#4]
00088e  eeb08a40          VMOV.F32 s16,s0
                  |L6.2194|
;;;343    					}
;;;344    //					u1_printf("%d\t%d\r\n",((int)((TempYaw - CarFramePID.Current)/22.7556f))%360,(int)(CarFramePID.Current/22.7556f));
;;;345    					
;;;346    //					if(myabs(CarFramePID.Current)<90*22.7556f)
;;;347    					YawPID.SetTarget(TempYaw);
000892  eeb00a48          VMOV.F32 s0,s16
000896  4867              LDR      r0,|L6.2612|
000898  f7fffffe          BL       _ZN7PIDBase9SetTargetEf ; PIDBase::SetTarget(float)
00089c  e007              B        |L6.2222|
                  |L6.2206|
;;;348    				}
;;;349    				else
;;;350    					AxicZ = ptrmsg->x * 100;
00089e  88e0              LDRH     r0,[r4,#6]
0008a0  0400              LSLS     r0,r0,#16
0008a2  1400              ASRS     r0,r0,#16
0008a4  2164              MOVS     r1,#0x64
0008a6  4348              MULS     r0,r1,r0
0008a8  b200              SXTH     r0,r0
0008aa  4963              LDR      r1,|L6.2616|
0008ac  8008              STRH     r0,[r1,#0]
                  |L6.2222|
;;;351    			}
;;;352    	
;;;353    
;;;354    			if(ptrmsg->press_r == 1 && mouse_r_flag == 0)
0008ae  7b60              LDRB     r0,[r4,#0xd]
0008b0  2801              CMP      r0,#1
0008b2  d10c              BNE      |L6.2254|
0008b4  4861              LDR      r0,|L6.2620|
0008b6  8800              LDRH     r0,[r0,#0]  ; mouse_r_flag
0008b8  b948              CBNZ     r0,|L6.2254|
;;;355    			{
;;;356    				mouse_r_flag = 1;
0008ba  2001              MOVS     r0,#1
0008bc  495f              LDR      r1,|L6.2620|
0008be  8008              STRH     r0,[r1,#0]
;;;357    				os_evt_set (BIT_0, HandleDR16_SxValue);
0008c0  485f              LDR      r0,|L6.2624|
0008c2  6801              LDR      r1,[r0,#0]  ; HandleDR16_SxValue
0008c4  2001              MOVS     r0,#1
0008c6  f8dfc17c          LDR      r12,|L6.2628|
0008ca  df00              SVC      #0x0
0008cc  e004              B        |L6.2264|
                  |L6.2254|
;;;358    			}
;;;359    			else if(ptrmsg->press_r == 0)
0008ce  7b60              LDRB     r0,[r4,#0xd]
0008d0  b910              CBNZ     r0,|L6.2264|
;;;360    				mouse_r_flag = 0;
0008d2  2000              MOVS     r0,#0
0008d4  4959              LDR      r1,|L6.2620|
0008d6  8008              STRH     r0,[r1,#0]
                  |L6.2264|
;;;361    
;;;362    			// if(ptrmsg->press_l == 1 && mouse_r_flag)
;;;363    			// {
;;;364    			// 	mouse_r_flag = 0;
;;;365    			// 	os_evt_set (BIT_1, HandleDR16_SxValue);
;;;366    			// }
;;;367    			// else if(ptrmsg->press_l == 0)
;;;368    			// 	mouse_r_flag = 1;
;;;369    
;;;370    			if(ptrmsg->press_l == 1 && mouse_l_flag == 0 )
0008d8  7b20              LDRB     r0,[r4,#0xc]
0008da  2801              CMP      r0,#1
0008dc  d10c              BNE      |L6.2296|
0008de  485a              LDR      r0,|L6.2632|
0008e0  8800              LDRH     r0,[r0,#0]  ; mouse_l_flag
0008e2  b948              CBNZ     r0,|L6.2296|
;;;371    			{
;;;372    	//			count++;
;;;373    	//			if(count == 2)
;;;374    				{
;;;375    					os_evt_set (BIT_4, HandleDR16_SxValue);
0008e4  4856              LDR      r0,|L6.2624|
0008e6  6801              LDR      r1,[r0,#0]  ; HandleDR16_SxValue
0008e8  2010              MOVS     r0,#0x10
0008ea  f8dfc158          LDR      r12,|L6.2628|
0008ee  df00              SVC      #0x0
;;;376    				}
;;;377    				mouse_l_flag = 1;
0008f0  2001              MOVS     r0,#1
0008f2  4955              LDR      r1,|L6.2632|
0008f4  8008              STRH     r0,[r1,#0]
0008f6  e00e              B        |L6.2326|
                  |L6.2296|
;;;378    			}
;;;379    			else if( ptrmsg->press_l == 0 && mouse_l_flag == 1)
0008f8  7b20              LDRB     r0,[r4,#0xc]
0008fa  b960              CBNZ     r0,|L6.2326|
0008fc  4852              LDR      r0,|L6.2632|
0008fe  8800              LDRH     r0,[r0,#0]  ; mouse_l_flag
000900  2801              CMP      r0,#1
000902  d108              BNE      |L6.2326|
;;;380    			{
;;;381    	//			count = 0;
;;;382    				os_evt_set (BIT_5, HandleDR16_SxValue);
000904  484e              LDR      r0,|L6.2624|
000906  6801              LDR      r1,[r0,#0]  ; HandleDR16_SxValue
000908  2020              MOVS     r0,#0x20
00090a  f8dfc138          LDR      r12,|L6.2628|
00090e  df00              SVC      #0x0
;;;383    				mouse_l_flag = 0;
000910  2000              MOVS     r0,#0
000912  494d              LDR      r1,|L6.2632|
000914  8008              STRH     r0,[r1,#0]
                  |L6.2326|
;;;384    			}
;;;385    
;;;386    	}
000916  bf00              NOP      
                  |L6.2328|
;;;387    
;;;388    
;;;389    
;;;390    ////////////////////////////////////////////////////////////////////////////
;;;391    //////////////////////////键位控制//////////////////////////////////////////
;;;392    
;;;393    //s1
;;;394    	if(ptrmsg->s1 == 1 && s1_flag)
000918  7960              LDRB     r0,[r4,#5]
00091a  f3c01081          UBFX     r0,r0,#6,#2
00091e  2801              CMP      r0,#1
000920  d10c              BNE      |L6.2364|
000922  484a              LDR      r0,|L6.2636|
000924  8800              LDRH     r0,[r0,#0]  ; s1_flag
000926  b148              CBZ      r0,|L6.2364|
;;;395    	{
;;;396    		s1_flag = 0;
000928  2000              MOVS     r0,#0
00092a  4948              LDR      r1,|L6.2636|
00092c  8008              STRH     r0,[r1,#0]
;;;397    		os_evt_set (BIT_0, HandleDR16_SxValue);
00092e  4844              LDR      r0,|L6.2624|
000930  6801              LDR      r1,[r0,#0]  ; HandleDR16_SxValue
000932  2001              MOVS     r0,#1
000934  f8dfc10c          LDR      r12,|L6.2628|
000938  df00              SVC      #0x0
00093a  e019              B        |L6.2416|
                  |L6.2364|
;;;398    	}
;;;399    	else if(ptrmsg->s1 == 2 && s1_flag)
00093c  7960              LDRB     r0,[r4,#5]
00093e  f3c01081          UBFX     r0,r0,#6,#2
000942  2802              CMP      r0,#2
000944  d10c              BNE      |L6.2400|
000946  4841              LDR      r0,|L6.2636|
000948  8800              LDRH     r0,[r0,#0]  ; s1_flag
00094a  b148              CBZ      r0,|L6.2400|
;;;400    	{
;;;401    		s1_flag = 0;
00094c  2000              MOVS     r0,#0
00094e  493f              LDR      r1,|L6.2636|
000950  8008              STRH     r0,[r1,#0]
;;;402    		os_evt_set (BIT_1, HandleDR16_SxValue);
000952  483b              LDR      r0,|L6.2624|
000954  6801              LDR      r1,[r0,#0]  ; HandleDR16_SxValue
000956  2002              MOVS     r0,#2
000958  f8dfc0e8          LDR      r12,|L6.2628|
00095c  df00              SVC      #0x0
00095e  e007              B        |L6.2416|
                  |L6.2400|
;;;403    	}
;;;404    
;;;405    	else if(ptrmsg->s1 == 3 )
000960  7960              LDRB     r0,[r4,#5]
000962  f3c01081          UBFX     r0,r0,#6,#2
000966  2803              CMP      r0,#3
000968  d102              BNE      |L6.2416|
;;;406    		s1_flag = 1;
00096a  2001              MOVS     r0,#1
00096c  4937              LDR      r1,|L6.2636|
00096e  8008              STRH     r0,[r1,#0]
                  |L6.2416|
;;;407    
;;;408    //s2
;;;409    	if(ptrmsg->s2 == 1 && s2_flag)
000970  7960              LDRB     r0,[r4,#5]
000972  f3c01001          UBFX     r0,r0,#4,#2
000976  2801              CMP      r0,#1
000978  d106              BNE      |L6.2440|
00097a  4835              LDR      r0,|L6.2640|
00097c  8800              LDRH     r0,[r0,#0]  ; s2_flag
00097e  b118              CBZ      r0,|L6.2440|
;;;410    	{
;;;411    		s2_flag = 0;
000980  2000              MOVS     r0,#0
000982  4933              LDR      r1,|L6.2640|
000984  8008              STRH     r0,[r1,#0]
000986  e019              B        |L6.2492|
                  |L6.2440|
;;;412    //		os_evt_set (BIT_7, HandleDR16_SxValue);
;;;413    		
;;;414    	}
;;;415    	else if(ptrmsg->s2 == 2 && s2_flag)
000988  7960              LDRB     r0,[r4,#5]
00098a  f3c01001          UBFX     r0,r0,#4,#2
00098e  2802              CMP      r0,#2
000990  d10c              BNE      |L6.2476|
000992  482f              LDR      r0,|L6.2640|
000994  8800              LDRH     r0,[r0,#0]  ; s2_flag
000996  b148              CBZ      r0,|L6.2476|
;;;416    	{
;;;417    		s2_flag = 0;
000998  2000              MOVS     r0,#0
00099a  492d              LDR      r1,|L6.2640|
00099c  8008              STRH     r0,[r1,#0]
;;;418    		os_evt_set (BIT_3, HandleDR16_SxValue);
00099e  4828              LDR      r0,|L6.2624|
0009a0  6801              LDR      r1,[r0,#0]  ; HandleDR16_SxValue
0009a2  2008              MOVS     r0,#8
0009a4  f8dfc09c          LDR      r12,|L6.2628|
0009a8  df00              SVC      #0x0
0009aa  e007              B        |L6.2492|
                  |L6.2476|
;;;419    
;;;420    	}
;;;421    
;;;422    	else if(ptrmsg->s2 == 3 )
0009ac  7960              LDRB     r0,[r4,#5]
0009ae  f3c01001          UBFX     r0,r0,#4,#2
0009b2  2803              CMP      r0,#3
0009b4  d102              BNE      |L6.2492|
;;;423    		s2_flag = 1;
0009b6  2001              MOVS     r0,#1
0009b8  4925              LDR      r1,|L6.2640|
0009ba  8008              STRH     r0,[r1,#0]
                  |L6.2492|
;;;424    
;;;425    //s键的其他处理
;;;426    	if(ptrmsg->s1 == 2 )
0009bc  7960              LDRB     r0,[r4,#5]
0009be  f3c01081          UBFX     r0,r0,#6,#2
0009c2  2802              CMP      r0,#2
0009c4  d112              BNE      |L6.2540|
;;;427    	{
;;;428    		count++;
0009c6  4823              LDR      r0,|L6.2644|
0009c8  7800              LDRB     r0,[r0,#0]  ; count
0009ca  1c40              ADDS     r0,r0,#1
0009cc  4921              LDR      r1,|L6.2644|
0009ce  7008              STRB     r0,[r1,#0]
;;;429    		if(count == 50)
0009d0  4608              MOV      r0,r1
0009d2  7800              LDRB     r0,[r0,#0]  ; count
0009d4  2832              CMP      r0,#0x32
0009d6  d119              BNE      |L6.2572|
;;;430    		{
;;;431    			constantly = 1;
0009d8  2001              MOVS     r0,#1
0009da  491f              LDR      r1,|L6.2648|
0009dc  7008              STRB     r0,[r1,#0]
;;;432    			os_evt_set (BIT_4, HandleDR16_SxValue);
0009de  4818              LDR      r0,|L6.2624|
0009e0  6801              LDR      r1,[r0,#0]  ; HandleDR16_SxValue
0009e2  2010              MOVS     r0,#0x10
0009e4  f8dfc05c          LDR      r12,|L6.2628|
0009e8  df00              SVC      #0x0
0009ea  e00f              B        |L6.2572|
                  |L6.2540|
;;;433    		}
;;;434    	}
;;;435    	else if(constantly)
0009ec  481a              LDR      r0,|L6.2648|
0009ee  7800              LDRB     r0,[r0,#0]  ; constantly
0009f0  b148              CBZ      r0,|L6.2566|
;;;436    	{
;;;437    		constantly = 0;
0009f2  2000              MOVS     r0,#0
0009f4  4918              LDR      r1,|L6.2648|
0009f6  7008              STRB     r0,[r1,#0]
;;;438    
;;;439    		os_evt_set (BIT_5, HandleDR16_SxValue);
0009f8  4811              LDR      r0,|L6.2624|
0009fa  6801              LDR      r1,[r0,#0]  ; HandleDR16_SxValue
0009fc  2020              MOVS     r0,#0x20
0009fe  f8dfc044          LDR      r12,|L6.2628|
000a02  df00              SVC      #0x0
000a04  e002              B        |L6.2572|
                  |L6.2566|
;;;440    	}
;;;441    	else
;;;442    		count = 0;
000a06  2000              MOVS     r0,#0
000a08  4912              LDR      r1,|L6.2644|
000a0a  7008              STRB     r0,[r1,#0]
                  |L6.2572|
;;;443    //	u1_printf("ch0:%d\r\n",ptrmsg->ch0);
;;;444    //	u1_printf("ch0:%d\tch1:%d\tch2:%d\tch3:%d\t\r\n",ptrmsg->ch0,ptrmsg->ch1,ptrmsg->ch2,ptrmsg->ch3);
;;;445    //	printf("key:%d\tx:%d\ty:%d\tz:%d\tpress_l:%d\tpress_r:%d\t\r\n",ptrmsg->key,ptrmsg->x ,ptrmsg->y,ptrmsg->z,ptrmsg->press_l,ptrmsg->press_r);
;;;446      if(ptrmsg->s2 == 2 )
000a0c  7960              LDRB     r0,[r4,#5]
000a0e  f3c01001          UBFX     r0,r0,#4,#2
000a12  2802              CMP      r0,#2
000a14  d103              BNE      |L6.2590|
;;;447    	{
;;;448    		run_flag = 1;
000a16  2001              MOVS     r0,#1
000a18  4910              LDR      r1,|L6.2652|
000a1a  7008              STRB     r0,[r1,#0]
000a1c  e002              B        |L6.2596|
                  |L6.2590|
;;;449    	}
;;;450    	else
;;;451    	{
;;;452    		run_flag = 0;
000a1e  2000              MOVS     r0,#0
000a20  490e              LDR      r1,|L6.2652|
000a22  7008              STRB     r0,[r1,#0]
                  |L6.2596|
;;;453    	}
;;;454    }
000a24  ecbd8b0c          VPOP     {d8-d13}
000a28  bd70              POP      {r4-r6,pc}
;;;455    short Get_AxicX(void)
                          ENDP

000a2a  0000              DCW      0x0000
                  |L6.2604|
                          DCD      CarFramePID
                  |L6.2608|
000a30  c2aa0000          DCFS     0xc2aa0000 ; -85
                  |L6.2612|
                          DCD      YawPID
                  |L6.2616|
                          DCD      AxicZ
                  |L6.2620|
                          DCD      mouse_r_flag
                  |L6.2624|
                          DCD      HandleDR16_SxValue
                  |L6.2628|
                          DCD      rt_evt_set
                  |L6.2632|
                          DCD      mouse_l_flag
                  |L6.2636|
                          DCD      s1_flag
                  |L6.2640|
                          DCD      s2_flag
                  |L6.2644|
                          DCD      count
                  |L6.2648|
                          DCD      constantly
                  |L6.2652|
                          DCD      run_flag

                          AREA ||.ARM.exidx||, LINKORDER=||i._Z7DR16_KMP8RC_ValuetP13KM_KEY_STRUCT||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._Z7DR16_KMP8RC_ValuetP13KM_KEY_STRUCT||
                          DCD      0x00000001

                          AREA ||area_number.8||, LINKORDER=||i.os_dr16||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.os_dr16||
                          DCD      0x00000001

                          AREA ||area_number.9||, LINKORDER=||i.Get_AxicX||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.Get_AxicX||
                          DCD      0x00000001

                          AREA ||area_number.10||, LINKORDER=||i.Get_AxicY||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.Get_AxicY||
                          DCD      0x00000001

                          AREA ||area_number.11||, LINKORDER=||i.Get_AxicZ||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.Get_AxicZ||
                          DCD      0x00000001

                          AREA ||area_number.12||, LINKORDER=||i.Run_Start||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.Run_Start||
                          DCD      0x00000001

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  ||KM||
                          %        12

                          AREA ||.data||, DATA, ALIGN=1

                  AxicX
000000  0400              DCW      0x0400
                  AxicY
000002  0400              DCW      0x0400
                  AxicZ
000004  0400              DCW      0x0400
                  run_flag
000006  0000              DCB      0x00,0x00
                  TempAxicX
000008  0000              DCW      0x0000
                  TempAxicY
00000a  0000              DCW      0x0000
                  s1_flag
00000c  0000              DCW      0x0000
                  s2_flag
00000e  0000              DCW      0x0000
                  count
000010  00                DCB      0x00
                  constantly
000011  00                DCB      0x00
                  mouse_l_flag
000012  0000              DCW      0x0000
                  mouse_r_flag
000014  0000              DCW      0x0000

;*** Start embedded assembler ***

#line 1 "..\\..\\MySrc\\ostask\\os_dr16.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_os_dr16_cpp_AxicX___Z7__REV16j|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_os_dr16_cpp_AxicX___Z7__REV16j| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_os_dr16_cpp_AxicX___Z7__REVSHi|
#line 144
|__asm___11_os_dr16_cpp_AxicX___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_os_dr16_cpp_AxicX___Z5__RRXj|
#line 300
|__asm___11_os_dr16_cpp_AxicX___Z5__RRXj| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
