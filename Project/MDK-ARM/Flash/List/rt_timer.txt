; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\rt_timer.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\rt_timer.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\MySrc -I..\..\Libraries -I..\..\MySrc\ostask -I..\..\MySrc\MPU6050 -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 -DSTM32F40_41xxx --omf_browse=.\flash\obj\rt_timer.crf ..\..\RTX\src\rt_Timer.c]
                          THUMB

                          AREA ||i.rt_tmr_create||, CODE, READONLY, ALIGN=2

                  rt_tmr_create PROC
;;;50     
;;;51     OS_ID rt_tmr_create (U16 tcnt, U16 info)  {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4607              MOV      r7,r0
000006  4689              MOV      r9,r1
;;;52       /* Create an user timer and put it into the chained timer list using      */
;;;53       /* a timeout count value of "tcnt". User parameter "info" is used as a    */
;;;54       /* parameter for the user provided callback function "os_tmr_call ()".    */
;;;55       P_TMR p_tmr, p;
;;;56       U32 delta,itcnt = tcnt;
000008  46b8              MOV      r8,r7
;;;57     
;;;58       if (tcnt == 0 || m_tmr == NULL)  {
00000a  b117              CBZ      r7,|L1.18|
00000c  4813              LDR      r0,|L1.92|
00000e  6800              LDR      r0,[r0,#0]  ; m_tmr
000010  b910              CBNZ     r0,|L1.24|
                  |L1.18|
;;;59         return (NULL);
000012  2000              MOVS     r0,#0
                  |L1.20|
;;;60       }
;;;61       p_tmr = rt_alloc_box ((U32 *)m_tmr);
;;;62       if (!p_tmr)  {
;;;63         return (NULL);
;;;64       }
;;;65       p_tmr->info = info;
;;;66       p = (P_TMR)&os_tmr;
;;;67       delta = p->tcnt;
;;;68       while (delta < itcnt && p->next != NULL) {
;;;69         p = p->next;
;;;70         delta += p->tcnt;
;;;71       }
;;;72       /* Right place found, insert timer into the list */
;;;73       p_tmr->next = p->next;
;;;74       p_tmr->tcnt = (U16)(delta - itcnt);
;;;75       p->next = p_tmr;
;;;76       p->tcnt -= p_tmr->tcnt;
;;;77       return (p_tmr);
;;;78     }
000014  e8bd87f0          POP      {r4-r10,pc}
                  |L1.24|
000018  4810              LDR      r0,|L1.92|
00001a  6800              LDR      r0,[r0,#0]            ;61  ; m_tmr
00001c  f7fffffe          BL       rt_alloc_box
000020  4605              MOV      r5,r0                 ;61
000022  b90d              CBNZ     r5,|L1.40|
000024  2000              MOVS     r0,#0                 ;63
000026  e7f5              B        |L1.20|
                  |L1.40|
000028  f8a59006          STRH     r9,[r5,#6]            ;65
00002c  4c0c              LDR      r4,|L1.96|
00002e  88a6              LDRH     r6,[r4,#4]            ;67
000030  e002              B        |L1.56|
                  |L1.50|
000032  6824              LDR      r4,[r4,#0]            ;69
000034  88a0              LDRH     r0,[r4,#4]            ;70
000036  4406              ADD      r6,r6,r0              ;70
                  |L1.56|
000038  4546              CMP      r6,r8                 ;68
00003a  d202              BCS      |L1.66|
00003c  6820              LDR      r0,[r4,#0]            ;68
00003e  2800              CMP      r0,#0                 ;68
000040  d1f7              BNE      |L1.50|
                  |L1.66|
000042  6820              LDR      r0,[r4,#0]            ;73
000044  6028              STR      r0,[r5,#0]            ;73
000046  eba60008          SUB      r0,r6,r8              ;74
00004a  80a8              STRH     r0,[r5,#4]            ;74
00004c  6025              STR      r5,[r4,#0]            ;75
00004e  88a0              LDRH     r0,[r4,#4]            ;76
000050  88a9              LDRH     r1,[r5,#4]            ;76
000052  1a40              SUBS     r0,r0,r1              ;76
000054  80a0              STRH     r0,[r4,#4]            ;76
000056  4628              MOV      r0,r5                 ;77
000058  e7dc              B        |L1.20|
;;;79     
                          ENDP

00005a  0000              DCW      0x0000
                  |L1.92|
                          DCD      m_tmr
                  |L1.96|
                          DCD      os_tmr

                          AREA ||i.rt_tmr_kill||, CODE, READONLY, ALIGN=2

                  rt_tmr_kill PROC
;;;81     
;;;82     OS_ID rt_tmr_kill (OS_ID timer)  {
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
;;;83       /* Remove user timer from the chained timer list. */
;;;84       P_TMR p, p_tmr;
;;;85     
;;;86       p_tmr = (P_TMR)timer;
000004  4635              MOV      r5,r6
;;;87       p = (P_TMR)&os_tmr;
000006  4c0b              LDR      r4,|L2.52|
;;;88       /* Search timer list for requested timer */
;;;89       while (p->next != p_tmr)  {
000008  e004              B        |L2.20|
                  |L2.10|
;;;90         if (p->next == NULL) {
00000a  6820              LDR      r0,[r4,#0]
00000c  b908              CBNZ     r0,|L2.18|
;;;91           /* Failed, "timer" is not in the timer list */
;;;92           return (p_tmr);
00000e  4628              MOV      r0,r5
                  |L2.16|
;;;93         }
;;;94         p = p->next;
;;;95       }
;;;96       /* Timer was found, remove it from the list */
;;;97       p->next = p_tmr->next;
;;;98       p->tcnt += p_tmr->tcnt;
;;;99       rt_free_box ((U32 *)m_tmr, p_tmr);
;;;100      /* Timer killed */
;;;101      return (NULL);
;;;102    }
000010  bd70              POP      {r4-r6,pc}
                  |L2.18|
000012  6824              LDR      r4,[r4,#0]            ;94
                  |L2.20|
000014  6820              LDR      r0,[r4,#0]            ;89
000016  42a8              CMP      r0,r5                 ;89
000018  d1f7              BNE      |L2.10|
00001a  6828              LDR      r0,[r5,#0]            ;97
00001c  6020              STR      r0,[r4,#0]            ;97
00001e  88a0              LDRH     r0,[r4,#4]            ;98
000020  88a9              LDRH     r1,[r5,#4]            ;98
000022  4408              ADD      r0,r0,r1              ;98
000024  80a0              STRH     r0,[r4,#4]            ;98
000026  4629              MOV      r1,r5                 ;99
000028  4803              LDR      r0,|L2.56|
00002a  6800              LDR      r0,[r0,#0]            ;99  ; m_tmr
00002c  f7fffffe          BL       rt_free_box
000030  2000              MOVS     r0,#0                 ;101
000032  e7ed              B        |L2.16|
;;;103    
                          ENDP

                  |L2.52|
                          DCD      os_tmr
                  |L2.56|
                          DCD      m_tmr

                          AREA ||i.rt_tmr_tick||, CODE, READONLY, ALIGN=2

                  rt_tmr_tick PROC
;;;30     
;;;31     void rt_tmr_tick (void) {
000000  b510              PUSH     {r4,lr}
;;;32       /* Decrement delta count of timer list head. Timers having the value of   */
;;;33       /* zero are removed from the list and the callback function is called.    */
;;;34       P_TMR p;
;;;35     
;;;36       if (os_tmr.next == NULL) {
000002  4810              LDR      r0,|L3.68|
000004  6800              LDR      r0,[r0,#0]  ; os_tmr
000006  b900              CBNZ     r0,|L3.10|
                  |L3.8|
;;;37         return;
;;;38       }
;;;39       os_tmr.tcnt--;
;;;40       while (os_tmr.tcnt == 0 && (p = os_tmr.next) != NULL) {
;;;41         /* Call a user provided function to handle an elapsed timer */
;;;42         os_tmr_call (p->info);
;;;43         os_tmr.tcnt = p->tcnt;
;;;44         os_tmr.next = p->next;
;;;45         rt_free_box ((U32 *)m_tmr, p);
;;;46       }
;;;47     }
000008  bd10              POP      {r4,pc}
                  |L3.10|
00000a  480e              LDR      r0,|L3.68|
00000c  8880              LDRH     r0,[r0,#4]            ;39  ; os_tmr
00000e  1e40              SUBS     r0,r0,#1              ;39
000010  490c              LDR      r1,|L3.68|
000012  8088              STRH     r0,[r1,#4]            ;39
000014  e00c              B        |L3.48|
                  |L3.22|
000016  88e0              LDRH     r0,[r4,#6]            ;42
000018  f7fffffe          BL       os_tmr_call
00001c  88a0              LDRH     r0,[r4,#4]            ;43
00001e  4909              LDR      r1,|L3.68|
000020  8088              STRH     r0,[r1,#4]            ;43
000022  6820              LDR      r0,[r4,#0]            ;44
000024  6008              STR      r0,[r1,#0]            ;44  ; os_tmr
000026  4621              MOV      r1,r4                 ;45
000028  4807              LDR      r0,|L3.72|
00002a  6800              LDR      r0,[r0,#0]            ;45  ; m_tmr
00002c  f7fffffe          BL       rt_free_box
                  |L3.48|
000030  4804              LDR      r0,|L3.68|
000032  8880              LDRH     r0,[r0,#4]            ;40  ; os_tmr
000034  b918              CBNZ     r0,|L3.62|
000036  4803              LDR      r0,|L3.68|
000038  6804              LDR      r4,[r0,#0]            ;40  ; os_tmr
00003a  2c00              CMP      r4,#0                 ;40
00003c  d1eb              BNE      |L3.22|
                  |L3.62|
00003e  bf00              NOP      
000040  e7e2              B        |L3.8|
;;;48     
                          ENDP

000042  0000              DCW      0x0000
                  |L3.68|
                          DCD      os_tmr
                  |L3.72|
                          DCD      m_tmr

                          AREA ||.data||, DATA, ALIGN=2

                  os_tmr
                          %        8
