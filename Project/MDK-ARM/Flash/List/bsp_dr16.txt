; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_dr16.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_dr16.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\MySrc -I..\..\Libraries -I..\..\MySrc\ostask -I..\..\MySrc\MPU6050 -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 -DSTM32F40_41xxx --omf_browse=.\flash\obj\bsp_dr16.crf ..\..\User\bsp_stm32f4xx\src\bsp_dr16.c]
                          THUMB

                          AREA ||i.DMA1_Stream5_IRQHandler||, CODE, READONLY, ALIGN=2

                  DMA1_Stream5_IRQHandler PROC
;;;124    
;;;125    void DMA_IRQHandler_DR16(void)
000000  b510              PUSH     {r4,lr}
;;;126    {
;;;127    //	static RC_Value ptrmsg;
;;;128    	if(DMA_GetITStatus(DMA_Stream_DR16, DMA_StreamIT_TCIFx_DR16))
000002  4909              LDR      r1,|L1.40|
000004  4809              LDR      r0,|L1.44|
000006  f7fffffe          BL       DMA_GetITStatus
00000a  b158              CBZ      r0,|L1.36|
;;;129    	{
;;;130    //		printf("key:%d\tmouse.x:%d\tmouse.y:%d\tmouse.z:%d\tpress_l:%d\tpress_r:%d\t\r\n",((temp*)sbus_rx_buffer)->key,((temp*)sbus_rx_buffer)->x ,((temp*)sbus_rx_buffer)->y,((temp*)sbus_rx_buffer)->z,((temp*)sbus_rx_buffer)->press_l,((temp*)sbus_rx_buffer)->press_r);
;;;131    //		printf("ch0:%d\tch1:%d\tch2:%d\tch3:%d\t\r\n",((temp*)sbus_rx_buffer)->ch0,((temp*)sbus_rx_buffer)->ch1,((temp*)sbus_rx_buffer)->ch2,((temp*)sbus_rx_buffer)->ch3);
;;;132    
;;;133    		if (isr_mbx_check (&dr16_mailbox) != 0)
00000c  4808              LDR      r0,|L1.48|
00000e  f7fffffe          BL       rt_mbx_check
000012  b118              CBZ      r0,|L1.28|
;;;134    		{
;;;135    //				ptrmsg.rc.ch0= (sbus_rx_buffer[0]| (sbus_rx_buffer[1] << 8)) & 0x07ff; //!< Channel 0
;;;136    //				ptrmsg.rc.ch1 = ((sbus_rx_buffer[1] >> 3) | (sbus_rx_buffer[2] << 5)) & 0x07ff; //!< Channel 1
;;;137    //				ptrmsg.rc.ch2 = ((sbus_rx_buffer[2] >> 6) | (sbus_rx_buffer[3] << 2) |(sbus_rx_buffer[4] << 10)) & 0x07ff;//!< Channel 2
;;;138    //				ptrmsg.rc.ch3 = ((sbus_rx_buffer[4] >> 1) | (sbus_rx_buffer[5] << 7)) & 0x07ff; //!< Channel 3
;;;139    //				ptrmsg.rc.s1 =  ((sbus_rx_buffer[5] >> 4)& 0x000C) >> 2; //!< Switch left
;;;140    //				ptrmsg.rc.s2 =  ((sbus_rx_buffer[5] >> 4)& 0x0003); //!< Switch right
;;;141    
;;;142    //				ptrmsg.mouse.x = sbus_rx_buffer[6] | (sbus_rx_buffer[7] << 8); //!< Mouse X axis
;;;143    //				ptrmsg.mouse.y = sbus_rx_buffer[8] | (sbus_rx_buffer[9] << 8); //!< Mouse Y axis
;;;144    //				ptrmsg.mouse.z = sbus_rx_buffer[10] | (sbus_rx_buffer[11] << 8); //!< Mouse Z axis
;;;145    //				ptrmsg.mouse.press_l = sbus_rx_buffer[12]; //!< Mouse Left Is Press ?
;;;146    //				ptrmsg.mouse.press_r = sbus_rx_buffer[13]; //!< Mouse Right Is Press ?
;;;147    //				ptrmsg.key.v = sbus_rx_buffer[14] | (sbus_rx_buffer[15] << 8); //!< KeyBoard value
;;;148    				// printf("ch0:%d\tch1:%d\tch2:%d\tch3:%d\t\r\n",ptrmsg.rc.ch0,ptrmsg.rc.ch1,ptrmsg.rc.ch2,ptrmsg.rc.ch3);
;;;149    //				printf("key:%d\tmouse.x:%d\tmouse.y:%d\tmouse.z:%d\tpress_l:%d\tpress_r:%d\t\r\n",ptrmsg.key.v,ptrmsg.mouse.x ,ptrmsg.mouse.y,ptrmsg.mouse.z,ptrmsg.mouse.press_l,ptrmsg.mouse.press_r);
;;;150    				isr_mbx_send (&dr16_mailbox,(void *)sbus_rx_buffer);
000014  4907              LDR      r1,|L1.52|
000016  4806              LDR      r0,|L1.48|
000018  f7fffffe          BL       isr_mbx_send
                  |L1.28|
;;;151    		}
;;;152    		DMA_ClearITPendingBit(DMA_Stream_DR16, DMA_StreamIT_TCIFx_DR16);
00001c  4902              LDR      r1,|L1.40|
00001e  4803              LDR      r0,|L1.44|
000020  f7fffffe          BL       DMA_ClearITPendingBit
                  |L1.36|
;;;153    	}
;;;154    }
000024  bd10              POP      {r4,pc}
;;;155    #ifdef __cplusplus
                          ENDP

000026  0000              DCW      0x0000
                  |L1.40|
                          DCD      0x20008800
                  |L1.44|
                          DCD      0x40026088
                  |L1.48|
                          DCD      dr16_mailbox
                  |L1.52|
                          DCD      sbus_rx_buffer

                          AREA ||i.DR16_mailbox_init||, CODE, READONLY, ALIGN=2

                  DR16_mailbox_init PROC
;;;98     
;;;99     void DR16_mailbox_init(void)
000000  f2410110          MOV      r1,#0x1010
;;;100    {
;;;101    	os_mbx_init (&dr16_mailbox, sizeof(dr16_mailbox));//DR16邮箱初始化
000004  4802              LDR      r0,|L2.16|
000006  f8dfc00c          LDR      r12,|L2.20|
00000a  df00              SVC      #0x0
;;;102    }
00000c  4770              BX       lr
;;;103    
                          ENDP

00000e  0000              DCW      0x0000
                  |L2.16|
                          DCD      dr16_mailbox
                  |L2.20|
                          DCD      rt_mbx_init

                          AREA ||i.DR16_receive||, CODE, READONLY, ALIGN=2

                  DR16_receive PROC
;;;103    
;;;104    uint8_t DR16_receive(RC_Value **ptrmsg, uint16_t timeout)
000000  b570              PUSH     {r4-r6,lr}
;;;105    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;106    	return os_mbx_wait(dr16_mailbox, (void **)ptrmsg,200);
000006  22c8              MOVS     r2,#0xc8
000008  4621              MOV      r1,r4
00000a  4803              LDR      r0,|L3.24|
00000c  f8dfc00c          LDR      r12,|L3.28|
000010  df00              SVC      #0x0
000012  b2c0              UXTB     r0,r0
;;;107    }
000014  bd70              POP      {r4-r6,pc}
;;;108    /******************************************************************************
                          ENDP

000016  0000              DCW      0x0000
                  |L3.24|
                          DCD      dr16_mailbox
                  |L3.28|
                          DCD      rt_mbx_wait

                          AREA ||i.bsp_RC_Init||, CODE, READONLY, ALIGN=2

                  bsp_RC_Init PROC
;;;30     */
;;;31     void bsp_RC_Init(void)
000000  b500              PUSH     {lr}
;;;32     {
000002  b08f              SUB      sp,sp,#0x3c
;;;33     //	u8 ptrmsg;
;;;34     	/* -------------- Enable Module Clock Source ----------------------------*/
;;;35     	RCC_AHB1PeriphClockCmd(RCC_DR16, ENABLE);
000004  2101              MOVS     r1,#1
000006  483e              LDR      r0,|L4.256|
000008  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;36     	RCC_APB1PeriphClockCmd(RCC_Periph_DR16, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  0448              LSLS     r0,r1,#17
000010  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;37     	GPIO_PinAFConfig(GPIO_PORT_DR16,GPIO_PinSource_DR16, GPIO_AF_DR16);
000014  2207              MOVS     r2,#7
000016  2103              MOVS     r1,#3
000018  483a              LDR      r0,|L4.260|
00001a  f7fffffe          BL       GPIO_PinAFConfig
;;;38     
;;;39     	/* dr16_dr16_mailbox 初始化*/
;;;40     //	ptrmsg = 1; //!< Channel 0
;;;41     
;;;42     //	os_mbx_send (dr16_mailbox, &ptrmsg,200);
;;;43     	/* -------------- Configure GPIO ---------------------------------------*/
;;;44     	{
;;;45     		GPIO_InitTypeDef GPIO_InitStructure;
;;;46     		USART_InitTypeDef USART_InitStructure;
;;;47     		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_DR16 ;
00001e  2008              MOVS     r0,#8
000020  900d              STR      r0,[sp,#0x34]
;;;48     		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
000022  2002              MOVS     r0,#2
000024  f88d0038          STRB     r0,[sp,#0x38]
;;;49     		GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000028  2000              MOVS     r0,#0
00002a  f88d003a          STRB     r0,[sp,#0x3a]
;;;50     		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
00002e  2003              MOVS     r0,#3
000030  f88d0039          STRB     r0,[sp,#0x39]
;;;51     		GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
000034  2000              MOVS     r0,#0
000036  f88d003b          STRB     r0,[sp,#0x3b]
;;;52     		GPIO_Init(GPIO_PORT_DR16, &GPIO_InitStructure);
00003a  a90d              ADD      r1,sp,#0x34
00003c  4831              LDR      r0,|L4.260|
00003e  f7fffffe          BL       GPIO_Init
;;;53     		USART_DeInit(USART_DR16);
000042  4831              LDR      r0,|L4.264|
000044  f7fffffe          BL       USART_DeInit
;;;54     		USART_InitStructure.USART_BaudRate = 100000;
000048  4830              LDR      r0,|L4.268|
00004a  9009              STR      r0,[sp,#0x24]
;;;55     		USART_InitStructure.USART_WordLength = USART_WordLength_8b;
00004c  2000              MOVS     r0,#0
00004e  f8ad0028          STRH     r0,[sp,#0x28]
;;;56     		USART_InitStructure.USART_StopBits = USART_StopBits_1;
000052  f8ad002a          STRH     r0,[sp,#0x2a]
;;;57     		USART_InitStructure.USART_Parity = USART_Parity_Even;
000056  f44f6080          MOV      r0,#0x400
00005a  f8ad002c          STRH     r0,[sp,#0x2c]
;;;58     		USART_InitStructure.USART_Mode = USART_Mode_Rx;
00005e  2004              MOVS     r0,#4
000060  f8ad002e          STRH     r0,[sp,#0x2e]
;;;59     		USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
000064  2000              MOVS     r0,#0
000066  f8ad0030          STRH     r0,[sp,#0x30]
;;;60     		USART_Init(USART_DR16,&USART_InitStructure);
00006a  a909              ADD      r1,sp,#0x24
00006c  4826              LDR      r0,|L4.264|
00006e  f7fffffe          BL       USART_Init
;;;61     		USART_Cmd(USART_DR16,ENABLE);
000072  2101              MOVS     r1,#1
000074  4824              LDR      r0,|L4.264|
000076  f7fffffe          BL       USART_Cmd
;;;62     		USART_DMACmd(USART_DR16,USART_DMAReq_Rx,ENABLE);
00007a  2201              MOVS     r2,#1
00007c  2140              MOVS     r1,#0x40
00007e  4822              LDR      r0,|L4.264|
000080  f7fffffe          BL       USART_DMACmd
;;;63     	}
;;;64     	/* -------------- Configure NVIC ---------------------------------------*/
;;;65     	{
;;;66     		NVIC_InitTypeDef NVIC_InitStructure;
;;;67     		NVIC_InitStructure.NVIC_IRQChannel = DMA_IRQn_DR16;
000084  2010              MOVS     r0,#0x10
000086  f88d0038          STRB     r0,[sp,#0x38]
;;;68     		NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = Priority_DR16_DMA_Pre;
00008a  2001              MOVS     r0,#1
00008c  f88d0039          STRB     r0,[sp,#0x39]
;;;69     		NVIC_InitStructure.NVIC_IRQChannelSubPriority = Priority_DR16_DMA_Sub;
000090  f88d003a          STRB     r0,[sp,#0x3a]
;;;70     		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000094  f88d003b          STRB     r0,[sp,#0x3b]
;;;71     		NVIC_Init(&NVIC_InitStructure);
000098  a80e              ADD      r0,sp,#0x38
00009a  f7fffffe          BL       NVIC_Init
;;;72     	}
;;;73     	/* -------------- Configure DMA -----------------------------------------*/
;;;74     	{
;;;75     		DMA_InitTypeDef DMA_InitStructure;
;;;76     		DMA_DeInit(DMA_Stream_DR16);
00009e  481c              LDR      r0,|L4.272|
0000a0  f7fffffe          BL       DMA_DeInit
;;;77     		DMA_InitStructure.DMA_Channel = DMA_Channel_DR16;
0000a4  f04f6000          MOV      r0,#0x8000000
0000a8  9000              STR      r0,[sp,#0]
;;;78     		DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)&(USART_DR16->DR);
0000aa  4817              LDR      r0,|L4.264|
0000ac  1d00              ADDS     r0,r0,#4
0000ae  9001              STR      r0,[sp,#4]
;;;79     		DMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)sbus_rx_buffer;
0000b0  4818              LDR      r0,|L4.276|
0000b2  9002              STR      r0,[sp,#8]
;;;80     		DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralToMemory;
0000b4  2000              MOVS     r0,#0
0000b6  9003              STR      r0,[sp,#0xc]
;;;81     		DMA_InitStructure.DMA_BufferSize = 18;
0000b8  2012              MOVS     r0,#0x12
0000ba  9004              STR      r0,[sp,#0x10]
;;;82     		DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
0000bc  2000              MOVS     r0,#0
0000be  9005              STR      r0,[sp,#0x14]
;;;83     		DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
0000c0  f44f6080          MOV      r0,#0x400
0000c4  9006              STR      r0,[sp,#0x18]
;;;84     		DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
0000c6  2000              MOVS     r0,#0
0000c8  9007              STR      r0,[sp,#0x1c]
;;;85     		DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
0000ca  9008              STR      r0,[sp,#0x20]
;;;86     		DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
0000cc  f44f7080          MOV      r0,#0x100
0000d0  9009              STR      r0,[sp,#0x24]
;;;87     		DMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;
0000d2  f44f3040          MOV      r0,#0x30000
0000d6  900a              STR      r0,[sp,#0x28]
;;;88     		DMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Disable;
0000d8  2000              MOVS     r0,#0
0000da  900b              STR      r0,[sp,#0x2c]
;;;89     		DMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_1QuarterFull;
0000dc  900c              STR      r0,[sp,#0x30]
;;;90     		DMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_Single;
0000de  900d              STR      r0,[sp,#0x34]
;;;91     		DMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
0000e0  900e              STR      r0,[sp,#0x38]
;;;92     		DMA_Init(DMA_Stream_DR16,&DMA_InitStructure);
0000e2  4669              MOV      r1,sp
0000e4  480a              LDR      r0,|L4.272|
0000e6  f7fffffe          BL       DMA_Init
;;;93     		DMA_ITConfig(DMA_Stream_DR16,DMA_IT_TC,ENABLE);
0000ea  2201              MOVS     r2,#1
0000ec  2110              MOVS     r1,#0x10
0000ee  4808              LDR      r0,|L4.272|
0000f0  f7fffffe          BL       DMA_ITConfig
;;;94     		DMA_Cmd(DMA_Stream_DR16,ENABLE);
0000f4  2101              MOVS     r1,#1
0000f6  4806              LDR      r0,|L4.272|
0000f8  f7fffffe          BL       DMA_Cmd
;;;95     	}
;;;96     }
0000fc  b00f              ADD      sp,sp,#0x3c
0000fe  bd00              POP      {pc}
;;;97     
                          ENDP

                  |L4.256|
                          DCD      0x00200001
                  |L4.260|
                          DCD      0x40020000
                  |L4.264|
                          DCD      0x40004400
                  |L4.268|
                          DCD      0x000186a0
                  |L4.272|
                          DCD      0x40026088
                  |L4.276|
                          DCD      sbus_rx_buffer

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  dr16_mailbox
                          %        4112
                  sbus_rx_buffer
                          %        25

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\src\\bsp_dr16.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_dr16_c_c223ce21____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_bsp_dr16_c_c223ce21____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_dr16_c_c223ce21____REVSH|
#line 144
|__asm___10_bsp_dr16_c_c223ce21____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_dr16_c_c223ce21____RRX|
#line 300
|__asm___10_bsp_dr16_c_c223ce21____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
