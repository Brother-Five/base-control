; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\flash\obj\debugtoolsconfig.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\debugtoolsconfig.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\MySrc -I..\..\Libraries -I..\..\MySrc\ostask -I..\..\MySrc\MPU6050 -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 -DSTM32F40_41xxx --omf_browse=.\flash\obj\debugtoolsconfig.crf ..\..\MySrc\DebugToolsConfig.cpp]
                          THUMB

                          AREA ||i.DebugToolsInit||, CODE, READONLY, ALIGN=1

                  DebugToolsInit PROC
;;;90     
;;;91     void DebugToolsInit(void)
000000  b510              PUSH     {r4,lr}
;;;92     {
;;;93     	Initial_System_Timer();
000002  f7fffffe          BL       Initial_System_Timer
;;;94     //	UsartDMA_Init();
;;;95     //	TIMResetModeForDMA();
;;;96     //	EXTI_Configuration();
;;;97     }
000006  bd10              POP      {r4,pc}
;;;98     
                          ENDP


                          AREA ||i._Z10SetDMaxMinff||, CODE, READONLY, ALIGN=2

                  _Z10SetDMaxMinff PROC ; SetDMaxMin(float, float)
;;;33     }
;;;34     void SetDMaxMin(float m_Rdi, float m_Rda){
000000  b510              PUSH     {r4,lr}
000002  ed2d8b02          VPUSH    {d8}
000006  eeb08a40          VMOV.F32 s16,s0
00000a  eef08a60          VMOV.F32 s17,s1
;;;35     	TurnplatePID.SetDMaxMin(m_Rdi,m_Rda);
00000e  eef00a68          VMOV.F32 s1,s17
000012  eeb00a48          VMOV.F32 s0,s16
000016  4803              LDR      r0,|L2.36|
000018  f7fffffe          BL       _ZN7PIDBase10SetDMaxMinEff ; PIDBase::SetDMaxMin(float, float)
;;;36     }
00001c  ecbd8b02          VPOP     {d8}
000020  bd10              POP      {r4,pc}
;;;37     void SetDeadZone(float m_DeadZone){
                          ENDP

000022  0000              DCW      0x0000
                  |L2.36|
                          DCD      TurnplatePID

                          AREA ||i._Z10SetIMaxMinff||, CODE, READONLY, ALIGN=2

                  _Z10SetIMaxMinff PROC ; SetIMaxMin(float, float)
;;;30     }
;;;31     void SetIMaxMin(float m_Rii, float m_Ria){
000000  b510              PUSH     {r4,lr}
000002  ed2d8b02          VPUSH    {d8}
000006  eeb08a40          VMOV.F32 s16,s0
00000a  eef08a60          VMOV.F32 s17,s1
;;;32     	TurnplatePID.SetIMaxMin(m_Rii,m_Ria);
00000e  eef00a68          VMOV.F32 s1,s17
000012  eeb00a48          VMOV.F32 s0,s16
000016  4803              LDR      r0,|L3.36|
000018  f7fffffe          BL       _ZN7PIDBase10SetIMaxMinEff ; PIDBase::SetIMaxMin(float, float)
;;;33     }
00001c  ecbd8b02          VPOP     {d8}
000020  bd10              POP      {r4,pc}
;;;34     void SetDMaxMin(float m_Rdi, float m_Rda){
                          ENDP

000022  0000              DCW      0x0000
                  |L3.36|
                          DCD      TurnplatePID

                          AREA ||i._Z10SetPMaxMinff||, CODE, READONLY, ALIGN=2

                  _Z10SetPMaxMinff PROC ; SetPMaxMin(float, float)
;;;27     }
;;;28     void SetPMaxMin(float m_Rpi, float m_Rpa){
000000  b510              PUSH     {r4,lr}
000002  ed2d8b02          VPUSH    {d8}
000006  eeb08a40          VMOV.F32 s16,s0
00000a  eef08a60          VMOV.F32 s17,s1
;;;29     	TurnplatePID.SetPMaxMin(m_Rpi,m_Rpa);
00000e  eef00a68          VMOV.F32 s1,s17
000012  eeb00a48          VMOV.F32 s0,s16
000016  4803              LDR      r0,|L4.36|
000018  f7fffffe          BL       _ZN7PIDBase10SetPMaxMinEff ; PIDBase::SetPMaxMin(float, float)
;;;30     }
00001c  ecbd8b02          VPOP     {d8}
000020  bd10              POP      {r4,pc}
;;;31     void SetIMaxMin(float m_Rii, float m_Ria){
                          ENDP

000022  0000              DCW      0x0000
                  |L4.36|
                          DCD      TurnplatePID

                          AREA ||i._Z11SetAutoXPIDfff||, CODE, READONLY, ALIGN=1

                  _Z11SetAutoXPIDfff PROC ; SetAutoXPID(float, float, float)
;;;41     }
;;;42     void SetAutoXPID(float m_Kp, float m_Ki, float m_Kd)
000000  4770              BX       lr
;;;43     {
;;;44     //	CVPID.DeadZone = m_DeadZone;
;;;45     //	TurnplatePID.SetDeadZone(m_DeadZone);
;;;46     }
;;;47     
                          ENDP


                          AREA ||i._Z11SetDeadZonef||, CODE, READONLY, ALIGN=2

                  _Z11SetDeadZonef PROC ; SetDeadZone(float)
;;;36     }
;;;37     void SetDeadZone(float m_DeadZone){
000000  b510              PUSH     {r4,lr}
000002  ed2d8b02          VPUSH    {d8}
000006  eeb08a40          VMOV.F32 s16,s0
;;;38     //	CVPID.DeadZone = m_DeadZone;
;;;39     	TurnplatePID.SetDeadZone(m_DeadZone);
00000a  eeb00a48          VMOV.F32 s0,s16
00000e  4803              LDR      r0,|L6.28|
000010  f7fffffe          BL       _ZN7PIDBase11SetDeadZoneEf ; PIDBase::SetDeadZone(float)
;;;40     
;;;41     }
000014  ecbd8b02          VPOP     {d8}
000018  bd10              POP      {r4,pc}
;;;42     void SetAutoXPID(float m_Kp, float m_Ki, float m_Kd)
                          ENDP

00001a  0000              DCW      0x0000
                  |L6.28|
                          DCD      TurnplatePID

                          AREA ||i._Z11SetPitchPidfff||, CODE, READONLY, ALIGN=2

                  _Z11SetPitchPidfff PROC ; SetPitchPid(float, float, float)
;;;19     extern FUZZYSPID TurnplatePID,CVPID;
;;;20     void SetPitchPid(float m_Kp, float m_Ki, float m_Kd)
000000  b500              PUSH     {lr}
;;;21     {
000002  ed2d8b0a          VPUSH    {d8-d12}
000006  b085              SUB      sp,sp,#0x14
000008  eeb08a40          VMOV.F32 s16,s0
00000c  eef08a60          VMOV.F32 s17,s1
000010  eeb09a41          VMOV.F32 s18,s2
;;;22     	TurnplatePID.SetPID(m_Kp, m_Ki,m_Kd);
000014  eeb01a49          VMOV.F32 s2,s18
000018  eef00a68          VMOV.F32 s1,s17
00001c  eeb00a48          VMOV.F32 s0,s16
000020  4810              LDR      r0,|L7.100|
000022  f7fffffe          BL       _ZN7PIDBase6SetPIDEfff ; PIDBase::SetPID(float, float, float)
;;;23     	u1_printf("p:%f\ti:%f\td:%f\r\n",m_Kp,m_Ki,m_Kd);
000026  ee190a10          VMOV     r0,s18
00002a  f7fffffe          BL       __aeabi_f2d
00002e  ec410b1a          VMOV     d10,r0,r1
000032  ee180a90          VMOV     r0,s17
000036  f7fffffe          BL       __aeabi_f2d
00003a  ec410b1b          VMOV     d11,r0,r1
00003e  ee180a10          VMOV     r0,s16
000042  f7fffffe          BL       __aeabi_f2d
000046  ec410b1c          VMOV     d12,r0,r1
00004a  ed8dab02          VSTR     d10,[sp,#8]
00004e  ed8dbb00          VSTR     d11,[sp,#0]
000052  ec532b1c          VMOV     r2,r3,d12
000056  a004              ADR      r0,|L7.104|
000058  f7fffffe          BL       u1_printf
;;;24     }
00005c  b005              ADD      sp,sp,#0x14
00005e  ecbd8b0a          VPOP     {d8-d12}
000062  bd00              POP      {pc}
;;;25     void SetTarget(float m_T){
                          ENDP

                  |L7.100|
                          DCD      TurnplatePID
                  |L7.104|
000068  703a2566          DCB      "p:%f\ti:%f\td:%f\r\n",0
00006c  09693a25
000070  6609643a
000074  25660d0a
000078  00      
000079  00                DCB      0
00007a  00                DCB      0
00007b  00                DCB      0

                          AREA ||i._Z4tipsv||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  _Z4tipsv PROC ; tips()
;;;94     
;;;4      void tips(void)
000000  b510              PUSH     {r4,lr}
;;;5      {
;;;6      	unsigned char i;
;;;7      	for(i=0;i<dev.fnum-1;i++)
000002  2400              MOVS     r4,#0
000004  e00b              B        |L8.30|
                  |L8.6|
;;;8      	{
;;;9      		printf("%s\r\n",dev.tab[i].tips);
000006  4809              LDR      r0,|L8.44|
000008  6800              LDR      r0,[r0,#0]  ; dev
00000a  eb040244          ADD      r2,r4,r4,LSL #1
00000e  eb000082          ADD      r0,r0,r2,LSL #2
000012  6881              LDR      r1,[r0,#8]
000014  a006              ADR      r0,|L8.48|
000016  f7fffffe          BL       __2printf
00001a  1c60              ADDS     r0,r4,#1              ;7
00001c  b2c4              UXTB     r4,r0                 ;7
                  |L8.30|
00001e  4803              LDR      r0,|L8.44|
000020  7900              LDRB     r0,[r0,#4]            ;7  ; dev
000022  1e40              SUBS     r0,r0,#1              ;7
000024  42a0              CMP      r0,r4                 ;7
000026  dcee              BGT      |L8.6|
;;;10     	}
;;;11     }
000028  bd10              POP      {r4,pc}
;;;12     
                          ENDP

00002a  0000              DCW      0x0000
                  |L8.44|
                          DCD      ||dev||
                  |L8.48|
000030  25730d0a          DCB      "%s\r\n",0
000034  00      
000035  00                DCB      0
000036  00                DCB      0
000037  00                DCB      0

                          AREA ||i._Z8SetFuzzyffff||, CODE, READONLY, ALIGN=2

                  _Z8SetFuzzyffff PROC ; SetFuzzy(float, float, float, float)
;;;47     
;;;48     void SetFuzzy(float mode,float _NB_PB,float _NM_PM,float _NS_PS){
000000  b500              PUSH     {lr}
000002  ed2d8b0a          VPUSH    {d8-d12}
000006  b085              SUB      sp,sp,#0x14
000008  eeb08a40          VMOV.F32 s16,s0
00000c  eef08a60          VMOV.F32 s17,s1
000010  eeb09a41          VMOV.F32 s18,s2
000014  eef09a61          VMOV.F32 s19,s3
;;;49     	TurnplatePID.SetFuzzy(mode,_NB_PB,_NM_PM,_NS_PS);
000018  eef01a69          VMOV.F32 s3,s19
00001c  eeb01a49          VMOV.F32 s2,s18
000020  eef00a68          VMOV.F32 s1,s17
000024  eeb00a48          VMOV.F32 s0,s16
000028  485b              LDR      r0,|L9.408|
00002a  f7fffffe          BL       _ZN8FUZZYPID8SetFuzzyEffff ; FUZZYPID::SetFuzzy(float, float, float, float)
;;;50     	switch((u8)mode){
00002e  eebc0ac8          VCVT.U32.F32 s0,s16
000032  ee100a10          VMOV     r0,s0
000036  b2c0              UXTB     r0,r0
000038  b130              CBZ      r0,|L9.72|
00003a  2801              CMP      r0,#1
00003c  d02c              BEQ      |L9.152|
00003e  2802              CMP      r0,#2
000040  d052              BEQ      |L9.232|
000042  2803              CMP      r0,#3
000044  d175              BNE      |L9.306|
000046  e079              B        |L9.316|
                  |L9.72|
;;;51     			case 0:u1_printf("mode0:\t::%f\t::%f\t::%f\r\n",TurnplatePID.NB_PB,TurnplatePID.NM_PM,TurnplatePID.NS_PS);break;
000048  4853              LDR      r0,|L9.408|
00004a  ed900a1d          VLDR     s0,[r0,#0x74]
00004e  ee101a10          VMOV     r1,s0
000052  4608              MOV      r0,r1
000054  f7fffffe          BL       __aeabi_f2d
000058  ec410b1a          VMOV     d10,r0,r1
00005c  484e              LDR      r0,|L9.408|
00005e  ed900a1c          VLDR     s0,[r0,#0x70]
000062  ee101a10          VMOV     r1,s0
000066  4608              MOV      r0,r1
000068  f7fffffe          BL       __aeabi_f2d
00006c  ec410b1b          VMOV     d11,r0,r1
000070  4849              LDR      r0,|L9.408|
000072  ed900a1b          VLDR     s0,[r0,#0x6c]
000076  ee101a10          VMOV     r1,s0
00007a  4608              MOV      r0,r1
00007c  f7fffffe          BL       __aeabi_f2d
000080  ec410b1c          VMOV     d12,r0,r1
000084  ed8dab02          VSTR     d10,[sp,#8]
000088  ed8dbb00          VSTR     d11,[sp,#0]
00008c  ec532b1c          VMOV     r2,r3,d12
000090  a042              ADR      r0,|L9.412|
000092  f7fffffe          BL       u1_printf
000096  e07a              B        |L9.398|
                  |L9.152|
;;;52     			case 1:u1_printf("mode1:\t::%f\t::%f\t::%f\r\n",TurnplatePID.NB_PB_kp,TurnplatePID.NM_PM_kp,TurnplatePID.NS_PS_kp);break;
000098  483f              LDR      r0,|L9.408|
00009a  ed900a20          VLDR     s0,[r0,#0x80]
00009e  ee101a10          VMOV     r1,s0
0000a2  4608              MOV      r0,r1
0000a4  f7fffffe          BL       __aeabi_f2d
0000a8  ec410b1a          VMOV     d10,r0,r1
0000ac  483a              LDR      r0,|L9.408|
0000ae  ed900a1f          VLDR     s0,[r0,#0x7c]
0000b2  ee101a10          VMOV     r1,s0
0000b6  4608              MOV      r0,r1
0000b8  f7fffffe          BL       __aeabi_f2d
0000bc  ec410b1b          VMOV     d11,r0,r1
0000c0  4835              LDR      r0,|L9.408|
0000c2  ed900a1e          VLDR     s0,[r0,#0x78]
0000c6  ee101a10          VMOV     r1,s0
0000ca  4608              MOV      r0,r1
0000cc  f7fffffe          BL       __aeabi_f2d
0000d0  ec410b1c          VMOV     d12,r0,r1
0000d4  ed8dab02          VSTR     d10,[sp,#8]
0000d8  ed8dbb00          VSTR     d11,[sp,#0]
0000dc  ec532b1c          VMOV     r2,r3,d12
0000e0  a034              ADR      r0,|L9.436|
0000e2  f7fffffe          BL       u1_printf
0000e6  e052              B        |L9.398|
                  |L9.232|
;;;53     			case 2:u1_printf("mode2:\t::%f\t::%f\t::%f\r\n",TurnplatePID.NB_PB_ki,TurnplatePID.NM_PM_ki,TurnplatePID.NS_PS_ki);break;
0000e8  482b              LDR      r0,|L9.408|
0000ea  ed900a23          VLDR     s0,[r0,#0x8c]
0000ee  ee101a10          VMOV     r1,s0
0000f2  4608              MOV      r0,r1
0000f4  f7fffffe          BL       __aeabi_f2d
0000f8  ec410b1a          VMOV     d10,r0,r1
0000fc  4826              LDR      r0,|L9.408|
0000fe  ed900a22          VLDR     s0,[r0,#0x88]
000102  ee101a10          VMOV     r1,s0
000106  4608              MOV      r0,r1
000108  f7fffffe          BL       __aeabi_f2d
00010c  ec410b1b          VMOV     d11,r0,r1
000110  4821              LDR      r0,|L9.408|
000112  ed900a21          VLDR     s0,[r0,#0x84]
000116  ee101a10          VMOV     r1,s0
00011a  4608              MOV      r0,r1
00011c  f7fffffe          BL       __aeabi_f2d
000120  ec410b1c          VMOV     d12,r0,r1
000124  ed8dab02          VSTR     d10,[sp,#8]
000128  ed8dbb00          VSTR     d11,[sp,#0]
00012c  ec532b1c          VMOV     r2,r3,d12
000130  e000              B        |L9.308|
                  |L9.306|
000132  e02b              B        |L9.396|
                  |L9.308|
000134  a025              ADR      r0,|L9.460|
000136  f7fffffe          BL       u1_printf
00013a  e028              B        |L9.398|
                  |L9.316|
;;;54     			case 3:u1_printf("mode3:\t::%f\t::%f\t::%f\r\n",TurnplatePID.NB_PB_kd,TurnplatePID.NM_PM_kd,TurnplatePID.NS_PS_kd);break;
00013c  4816              LDR      r0,|L9.408|
00013e  ed900a26          VLDR     s0,[r0,#0x98]
000142  ee101a10          VMOV     r1,s0
000146  4608              MOV      r0,r1
000148  f7fffffe          BL       __aeabi_f2d
00014c  ec410b1a          VMOV     d10,r0,r1
000150  4811              LDR      r0,|L9.408|
000152  ed900a25          VLDR     s0,[r0,#0x94]
000156  ee101a10          VMOV     r1,s0
00015a  4608              MOV      r0,r1
00015c  f7fffffe          BL       __aeabi_f2d
000160  ec410b1b          VMOV     d11,r0,r1
000164  480c              LDR      r0,|L9.408|
000166  ed900a24          VLDR     s0,[r0,#0x90]
00016a  ee101a10          VMOV     r1,s0
00016e  4608              MOV      r0,r1
000170  f7fffffe          BL       __aeabi_f2d
000174  ec410b1c          VMOV     d12,r0,r1
000178  ed8dab02          VSTR     d10,[sp,#8]
00017c  ed8dbb00          VSTR     d11,[sp,#0]
000180  ec532b1c          VMOV     r2,r3,d12
000184  a017              ADR      r0,|L9.484|
000186  f7fffffe          BL       u1_printf
00018a  e000              B        |L9.398|
                  |L9.396|
;;;55     			default:break;
00018c  bf00              NOP      
                  |L9.398|
00018e  bf00              NOP                            ;51
;;;56     			}
;;;57     }
000190  b005              ADD      sp,sp,#0x14
000192  ecbd8b0a          VPOP     {d8-d12}
000196  bd00              POP      {pc}
;;;58     //extern void SetPara_DR(float _DR_SPEED,float _PitchScale,float _YawScale,float CARFRAMEWEIGHT);
                          ENDP

                  |L9.408|
                          DCD      TurnplatePID
                  |L9.412|
00019c  6d6f6465          DCB      "mode0:\t::%f\t::%f\t::%f\r\n",0
0001a0  303a093a
0001a4  3a256609
0001a8  3a3a2566
0001ac  093a3a25
0001b0  660d0a00
                  |L9.436|
0001b4  6d6f6465          DCB      "mode1:\t::%f\t::%f\t::%f\r\n",0
0001b8  313a093a
0001bc  3a256609
0001c0  3a3a2566
0001c4  093a3a25
0001c8  660d0a00
                  |L9.460|
0001cc  6d6f6465          DCB      "mode2:\t::%f\t::%f\t::%f\r\n",0
0001d0  323a093a
0001d4  3a256609
0001d8  3a3a2566
0001dc  093a3a25
0001e0  660d0a00
                  |L9.484|
0001e4  6d6f6465          DCB      "mode3:\t::%f\t::%f\t::%f\r\n",0
0001e8  333a093a
0001ec  3a256609
0001f0  3a3a2566
0001f4  093a3a25
0001f8  660d0a00

                          AREA ||i._Z9SetTargetf||, CODE, READONLY, ALIGN=2

                  _Z9SetTargetf PROC ; SetTarget(float)
;;;24     }
;;;25     void SetTarget(float m_T){
000000  b510              PUSH     {r4,lr}
000002  ed2d8b02          VPUSH    {d8}
000006  eeb08a40          VMOV.F32 s16,s0
;;;26     	TurnplatePID.SetTarget(m_T);
00000a  eeb00a48          VMOV.F32 s0,s16
00000e  4803              LDR      r0,|L10.28|
000010  f7fffffe          BL       _ZN7PIDBase9SetTargetEf ; PIDBase::SetTarget(float)
;;;27     }
000014  ecbd8b02          VPOP     {d8}
000018  bd10              POP      {r4,pc}
;;;28     void SetPMaxMin(float m_Rpi, float m_Rpa){
                          ENDP

00001a  0000              DCW      0x0000
                  |L10.28|
                          DCD      TurnplatePID

                          AREA ||.ARM.exidx||, LINKORDER=||i._Z4tipsv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._Z4tipsv||
                          DCD      0x00000001

                          AREA ||area_number.12||, LINKORDER=||i._Z11SetPitchPidfff||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z11SetPitchPidfff||
                          DCD      0x00000001

                          AREA ||area_number.13||, LINKORDER=||i._Z9SetTargetf||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z9SetTargetf||
                          DCD      0x00000001

                          AREA ||area_number.14||, LINKORDER=||i._Z10SetPMaxMinff||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.14||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z10SetPMaxMinff||
                          DCD      0x00000001

                          AREA ||area_number.15||, LINKORDER=||i._Z10SetIMaxMinff||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.15||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z10SetIMaxMinff||
                          DCD      0x00000001

                          AREA ||area_number.16||, LINKORDER=||i._Z10SetDMaxMinff||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.16||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z10SetDMaxMinff||
                          DCD      0x00000001

                          AREA ||area_number.17||, LINKORDER=||i._Z11SetDeadZonef||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.17||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z11SetDeadZonef||
                          DCD      0x00000001

                          AREA ||area_number.18||, LINKORDER=||i._Z11SetAutoXPIDfff||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.18||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z11SetAutoXPIDfff||
                          DCD      0x00000001

                          AREA ||area_number.19||, LINKORDER=||i._Z8SetFuzzyffff||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.19||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z8SetFuzzyffff||
                          DCD      0x00000001

                          AREA ||area_number.20||, LINKORDER=||i.DebugToolsInit||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.20||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.DebugToolsInit||
                          DCD      0x00000001

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  53657450          DCB      "SetPitchPid",0
000004  69746368
000008  50696400
00000c  53657450          DCB      "SetPitchPid(float m_Kp, float m_Ki, float m_Kd)",0
000010  69746368
000014  50696428
000018  666c6f61
00001c  74206d5f
000020  4b702c20
000024  666c6f61
000028  74206d5f
00002c  4b692c20
000030  666c6f61
000034  74206d5f
000038  4b642900
00003c  53657454          DCB      "SetTarget",0
000040  61726765
000044  7400    
000046  00                DCB      0
000047  00                DCB      0
000048  53657454          DCB      "SetTarget(float m_T)",0
00004c  61726765
000050  7428666c
000054  6f617420
000058  6d5f5429
00005c  00      
00005d  00                DCB      0
00005e  00                DCB      0
00005f  00                DCB      0
000060  53657450          DCB      "SetPMaxMin",0
000064  4d61784d
000068  696e00  
00006b  00                DCB      0
00006c  53657450          DCB      "SetPMaxMin(float m_Rpi, float m_Rpa)",0
000070  4d61784d
000074  696e2866
000078  6c6f6174
00007c  206d5f52
000080  70692c20
000084  666c6f61
000088  74206d5f
00008c  52706129
000090  00      
000091  00                DCB      0
000092  00                DCB      0
000093  00                DCB      0
000094  53657449          DCB      "SetIMaxMin",0
000098  4d61784d
00009c  696e00  
00009f  00                DCB      0
0000a0  53657449          DCB      "SetIMaxMin(float m_Rii, float m_Ria)",0
0000a4  4d61784d
0000a8  696e2866
0000ac  6c6f6174
0000b0  206d5f52
0000b4  69692c20
0000b8  666c6f61
0000bc  74206d5f
0000c0  52696129
0000c4  00      
0000c5  00                DCB      0
0000c6  00                DCB      0
0000c7  00                DCB      0
0000c8  45534353          DCB      "ESCSetPara",0
0000cc  65745061
0000d0  726100  
0000d3  00                DCB      0
0000d4  45534353          DCB      "ESCSetPara(ESC_PWM1,ESC_PWM2,ESC_PWM_CONSTANTLY,ONCE_FI"
0000d8  65745061
0000dc  72612845
0000e0  53435f50
0000e4  574d312c
0000e8  4553435f
0000ec  50574d32
0000f0  2c455343
0000f4  5f50574d
0000f8  5f434f4e
0000fc  5354414e
000100  544c592c
000104  4f4e4345
000108  5f4649  
00010b  52455f54          DCB      "RE_TIME,RSF)",0
00010f  494d452c
000113  52534629
000117  00      
000118  53657446          DCB      "SetFuzzy",0
00011c  757a7a79
000120  00      
000121  00                DCB      0
000122  00                DCB      0
000123  00                DCB      0
000124  53657446          DCB      "SetFuzzy(float mode,float _NB_PB,float _NM_PM,float _NS"
000128  757a7a79
00012c  28666c6f
000130  6174206d
000134  6f64652c
000138  666c6f61
00013c  74205f4e
000140  425f5042
000144  2c666c6f
000148  6174205f
00014c  4e4d5f50
000150  4d2c666c
000154  6f617420
000158  5f4e53  
00015b  5f505329          DCB      "_PS)",0
00015f  00      
000160  53657450          DCB      "SetPara_DR",0
000164  6172615f
000168  445200  
00016b  00                DCB      0
00016c  53657450          DCB      "SetPara_DR(float _DR_SPEED,float _PitchScale,float _Yaw"
000170  6172615f
000174  44522866
000178  6c6f6174
00017c  205f4452
000180  5f535045
000184  45442c66
000188  6c6f6174
00018c  205f5069
000190  74636853
000194  63616c65
000198  2c666c6f
00019c  6174205f
0001a0  596177  
0001a3  5363616c          DCB      "Scale,float CARFRAMEWEIGHT)",0
0001a7  652c666c
0001ab  6f617420
0001af  43415246
0001b3  52414d45
0001b7  57454947
0001bb  48542900
0001bf  00                DCB      0
0001c0  53657450          DCB      "SetPara_KM",0
0001c4  6172615f
0001c8  4b4d00  
0001cb  00                DCB      0
0001cc  766f6964          DCB      "void SetPara_KM(SPEED1,SPEED2,PITCHWEIGHT,YAWWEIGHT1,YA"
0001d0  20536574
0001d4  50617261
0001d8  5f4b4d28
0001dc  53504545
0001e0  44312c53
0001e4  50454544
0001e8  322c5049
0001ec  54434857
0001f0  45494748
0001f4  542c5941
0001f8  57574549
0001fc  47485431
000200  2c5941  
000203  57574549          DCB      "WWEIGHT2,CARFRAMEWEIGHT)",0
000207  47485432
00020b  2c434152
00020f  4652414d
000213  45574549
000217  47485429
00021b  00      
00021c  53657450          DCB      "SetPara_Operater",0
000220  6172615f
000224  4f706572
000228  61746572
00022c  00      
00022d  00                DCB      0
00022e  00                DCB      0
00022f  00                DCB      0
000230  53657450          DCB      "SetPara_Operater(u8 mode)//0:P_Mid\t1:P_Up\t2:P_Down\t3"
000234  6172615f
000238  4f706572
00023c  61746572
000240  28753820
000244  6d6f6465
000248  292f2f30
00024c  3a505f4d
000250  69640931
000254  3a505f55
000258  7009323a
00025c  505f446f
000260  776e0933
000264  3a595f4d          DCB      ":Y_Mid",0
000268  696400  
00026b  00                DCB      0
00026c  50617261          DCB      "ParaSetting",0
000270  53657474
000274  696e6700
000278  50617261          DCB      "ParaSetting(float _pFlag)//1:Start Setting\t2:Init Para"
00027c  53657474
000280  696e6728
000284  666c6f61
000288  74205f70
00028c  466c6167
000290  292f2f31
000294  3a537461
000298  72742053
00029c  65747469
0002a0  6e670932
0002a4  3a496e69
0002a8  74205061
0002ac  7261    
0002ae  09333a53          DCB      "\t3:Save Para",0
0002b2  61766520
0002b6  50617261
0002ba  00      
0002bb  00                DCB      0
0002bc  74697073          DCB      "tips",0
0002c0  00      
0002c1  00                DCB      0
0002c2  00                DCB      0
0002c3  00                DCB      0
0002c4  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  nametab
                          DCD      _Z11SetPitchPidfff ; SetPitchPid(float, float, float)
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0xc
                          DCD      _Z9SetTargetf ; SetTarget(float)
                          DCD      ||.conststring||+0x3c
                          DCD      ||.conststring||+0x48
                          DCD      _Z10SetPMaxMinff ; SetPMaxMin(float, float)
                          DCD      ||.conststring||+0x60
                          DCD      ||.conststring||+0x6c
                          DCD      _Z10SetIMaxMinff ; SetIMaxMin(float, float)
                          DCD      ||.conststring||+0x94
                          DCD      ||.conststring||+0xa0
                          DCD      _Z10ESCSetParafffff ; ESCSetPara(float, float, float, float, float)
                          DCD      ||.conststring||+0xc8
                          DCD      ||.conststring||+0xd4
                          DCD      _Z8SetFuzzyffff ; SetFuzzy(float, float, float, float)
                          DCD      ||.conststring||+0x118
                          DCD      ||.conststring||+0x124
                          DCD      SetPara_DR
                          DCD      ||.conststring||+0x160
                          DCD      ||.conststring||+0x16c
                          DCD      SetPara_KM
                          DCD      ||.conststring||+0x1c0
                          DCD      ||.conststring||+0x1cc
                          DCD      SetPara_Operater
                          DCD      ||.conststring||+0x21c
                          DCD      ||.conststring||+0x230
                          DCD      ParaSetting
                          DCD      ||.conststring||+0x26c
                          DCD      ||.conststring||+0x278
                          DCD      _Z4tipsv ; tips()
                          DCD      ||.conststring||+0x2bc
                          DCD      ||.conststring||+0x2c4
                  ||dev||
                          DCD      nametab
000088  0b000000          DCB      0x0b,0x00,0x00,0x00
                          %        80

                          AREA ||i._ZN8FUZZYPID8SetFuzzyEffff||, COMGROUP=_ZN8FUZZYPID8SetFuzzyEffff, CODE, READONLY, ALIGN=1

                  _ZN8FUZZYPID8SetFuzzyEffff PROC ; FUZZYPID::SetFuzzy(float, float, float, float)
;;;77     
;;;78     	void SetFuzzy(float mode,float _NB_PB_kx1,float _NM_PM_kx2,float _NS_PS_kx3){
000000  eebc2ac0          VCVT.U32.F32 s4,s0
;;;79     		switch((u8)mode){
000004  ee121a10          VMOV     r1,s4
000008  b2c9              UXTB     r1,r1
00000a  b131              CBZ      r1,|L81.26|
00000c  2901              CMP      r1,#1
00000e  d00b              BEQ      |L81.40|
000010  2902              CMP      r1,#2
000012  d010              BEQ      |L81.54|
000014  2903              CMP      r1,#3
000016  d11c              BNE      |L81.82|
000018  e014              B        |L81.68|
                  |L81.26|
;;;80     			case 0:NB_PB = _NB_PB_kx1; 	NM_PM = _NM_PM_kx2;	 NS_PS = _NS_PS_kx3;break;
00001a  edc00a1b          VSTR     s1,[r0,#0x6c]
00001e  ed801a1c          VSTR     s2,[r0,#0x70]
000022  edc01a1d          VSTR     s3,[r0,#0x74]
000026  e015              B        |L81.84|
                  |L81.40|
;;;81     			case 1:NB_PB_kp = _NB_PB_kx1; NM_PM_kp = _NM_PM_kx2; NS_PS_kp = _NS_PS_kx3;break;
000028  edc00a1e          VSTR     s1,[r0,#0x78]
00002c  ed801a1f          VSTR     s2,[r0,#0x7c]
000030  edc01a20          VSTR     s3,[r0,#0x80]
000034  e00e              B        |L81.84|
                  |L81.54|
;;;82     			case 2:NB_PB_ki = _NB_PB_kx1; NM_PM_ki = _NM_PM_kx2; NS_PS_ki = _NS_PS_kx3;break;
000036  edc00a21          VSTR     s1,[r0,#0x84]
00003a  ed801a22          VSTR     s2,[r0,#0x88]
00003e  edc01a23          VSTR     s3,[r0,#0x8c]
000042  e007              B        |L81.84|
                  |L81.68|
;;;83     			case 3:NB_PB_kd = _NB_PB_kx1; NM_PM_kd = _NM_PM_kx2; NS_PS_kd = _NS_PS_kx3;break;
000044  edc00a24          VSTR     s1,[r0,#0x90]
000048  ed801a25          VSTR     s2,[r0,#0x94]
00004c  edc01a26          VSTR     s3,[r0,#0x98]
000050  e000              B        |L81.84|
                  |L81.82|
;;;84     			default:break;
000052  bf00              NOP      
                  |L81.84|
000054  bf00              NOP                            ;80
;;;85     			}
;;;86     		};
000056  4770              BX       lr
;;;87     
                          ENDP


                          AREA ||area_number.82||, COMGROUP=_ZN8FUZZYPID8SetFuzzyEffff, LINKORDER=||i._ZN8FUZZYPID8SetFuzzyEffff||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.82||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8FUZZYPID8SetFuzzyEffff||
                          DCD      0x00000001

;*** Start embedded assembler ***

#line 1 "..\\..\\MySrc\\DebugToolsConfig.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___20_DebugToolsConfig_cpp__Z4tipsv___Z7__REV16j|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___20_DebugToolsConfig_cpp__Z4tipsv___Z7__REV16j| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___20_DebugToolsConfig_cpp__Z4tipsv___Z7__REVSHi|
#line 144
|__asm___20_DebugToolsConfig_cpp__Z4tipsv___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___20_DebugToolsConfig_cpp__Z4tipsv___Z5__RRXj|
#line 300
|__asm___20_DebugToolsConfig_cpp__Z4tipsv___Z5__RRXj| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
