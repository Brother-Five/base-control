; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\rt_list.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\rt_list.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\MySrc -I..\..\Libraries -I..\..\MySrc\ostask -I..\..\MySrc\MPU6050 -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 -DSTM32F40_41xxx --omf_browse=.\flash\obj\rt_list.crf ..\..\RTX\src\rt_List.c]
                          THUMB

                          AREA ||i.rt_dec_dly||, CODE, READONLY, ALIGN=2

                  rt_dec_dly PROC
;;;186    
;;;187    void rt_dec_dly (void) {
000000  b510              PUSH     {r4,lr}
;;;188      /* Decrement delta time of list head: remove tasks having a value of zero.*/
;;;189      P_TCB p_rdy;
;;;190    
;;;191      if (os_dly.p_dlnk == NULL) {
000002  4821              LDR      r0,|L1.136|
000004  68c0              LDR      r0,[r0,#0xc]  ; os_dly
000006  b900              CBNZ     r0,|L1.10|
                  |L1.8|
;;;192        return;
;;;193      }
;;;194      os_dly.delta_time--;
;;;195      while ((os_dly.delta_time == 0) && (os_dly.p_dlnk != NULL)) {
;;;196        p_rdy = os_dly.p_dlnk;
;;;197        if (p_rdy->p_rlnk != NULL) {
;;;198          /* Task is really enqueued, remove task from semaphore/mailbox */
;;;199          /* timeout waiting list. */
;;;200          p_rdy->p_rlnk->p_lnk = p_rdy->p_lnk;
;;;201          if (p_rdy->p_lnk != NULL) {
;;;202            p_rdy->p_lnk->p_rlnk = p_rdy->p_rlnk;
;;;203            p_rdy->p_lnk = NULL;
;;;204          }
;;;205          p_rdy->p_rlnk = NULL;
;;;206        }
;;;207        rt_put_prio (&os_rdy, p_rdy);
;;;208        os_dly.delta_time = p_rdy->delta_time;
;;;209        if (p_rdy->state == WAIT_ITV) {
;;;210          /* Calculate the next time for interval wait. */
;;;211          p_rdy->delta_time = p_rdy->interval_time + (U16)os_time;
;;;212        }
;;;213        p_rdy->state   = READY;
;;;214        p_rdy->ret_val = OS_R_TMO;
;;;215        os_dly.p_dlnk = p_rdy->p_dlnk;
;;;216        if (p_rdy->p_dlnk != NULL) {
;;;217          p_rdy->p_dlnk->p_blnk =  (P_TCB)&os_dly;
;;;218          p_rdy->p_dlnk = NULL;
;;;219        }
;;;220        p_rdy->p_blnk = NULL;
;;;221      }
;;;222    }
000008  bd10              POP      {r4,pc}
                  |L1.10|
00000a  481f              LDR      r0,|L1.136|
00000c  8a80              LDRH     r0,[r0,#0x14]         ;194  ; os_dly
00000e  1e40              SUBS     r0,r0,#1              ;194
000010  491d              LDR      r1,|L1.136|
000012  8288              STRH     r0,[r1,#0x14]         ;194
000014  e02e              B        |L1.116|
                  |L1.22|
000016  481c              LDR      r0,|L1.136|
000018  68c4              LDR      r4,[r0,#0xc]          ;196  ; os_dly
00001a  68a0              LDR      r0,[r4,#8]            ;197
00001c  b158              CBZ      r0,|L1.54|
00001e  e9d40101          LDRD     r0,r1,[r4,#4]         ;200
000022  6048              STR      r0,[r1,#4]            ;200
000024  6860              LDR      r0,[r4,#4]            ;201
000026  b120              CBZ      r0,|L1.50|
000028  e9d41001          LDRD     r1,r0,[r4,#4]         ;202
00002c  6088              STR      r0,[r1,#8]            ;202
00002e  2000              MOVS     r0,#0                 ;203
000030  6060              STR      r0,[r4,#4]            ;203
                  |L1.50|
000032  2000              MOVS     r0,#0                 ;205
000034  60a0              STR      r0,[r4,#8]            ;205
                  |L1.54|
000036  4621              MOV      r1,r4                 ;207
000038  4814              LDR      r0,|L1.140|
00003a  f7fffffe          BL       rt_put_prio
00003e  8aa0              LDRH     r0,[r4,#0x14]         ;208
000040  4911              LDR      r1,|L1.136|
000042  8288              STRH     r0,[r1,#0x14]         ;208
000044  7860              LDRB     r0,[r4,#1]            ;209
000046  2804              CMP      r0,#4                 ;209
000048  d104              BNE      |L1.84|
00004a  8ae0              LDRH     r0,[r4,#0x16]         ;211
00004c  4910              LDR      r1,|L1.144|
00004e  8809              LDRH     r1,[r1,#0]            ;211  ; os_time
000050  4408              ADD      r0,r0,r1              ;211
000052  82a0              STRH     r0,[r4,#0x14]         ;211
                  |L1.84|
000054  2001              MOVS     r0,#1                 ;213
000056  7060              STRB     r0,[r4,#1]            ;213
000058  f8840025          STRB     r0,[r4,#0x25]         ;214
00005c  490a              LDR      r1,|L1.136|
00005e  68e0              LDR      r0,[r4,#0xc]          ;215
000060  60c8              STR      r0,[r1,#0xc]          ;215  ; os_dly
000062  68e0              LDR      r0,[r4,#0xc]          ;216
000064  b120              CBZ      r0,|L1.112|
000066  4608              MOV      r0,r1                 ;217
000068  68e1              LDR      r1,[r4,#0xc]          ;217
00006a  6108              STR      r0,[r1,#0x10]         ;217
00006c  2000              MOVS     r0,#0                 ;218
00006e  60e0              STR      r0,[r4,#0xc]          ;218
                  |L1.112|
000070  2000              MOVS     r0,#0                 ;220
000072  6120              STR      r0,[r4,#0x10]         ;220
                  |L1.116|
000074  4804              LDR      r0,|L1.136|
000076  8a80              LDRH     r0,[r0,#0x14]         ;195  ; os_dly
000078  b918              CBNZ     r0,|L1.130|
00007a  4803              LDR      r0,|L1.136|
00007c  68c0              LDR      r0,[r0,#0xc]          ;195  ; os_dly
00007e  2800              CMP      r0,#0                 ;195
000080  d1c9              BNE      |L1.22|
                  |L1.130|
000082  bf00              NOP      
000084  e7c0              B        |L1.8|
;;;223    
                          ENDP

000086  0000              DCW      0x0000
                  |L1.136|
                          DCD      os_dly
                  |L1.140|
                          DCD      os_rdy
                  |L1.144|
                          DCD      os_time

                          AREA ||i.rt_get_first||, CODE, READONLY, ALIGN=1

                  rt_get_first PROC
;;;71     
;;;72     P_TCB rt_get_first (P_XCB p_CB) {
000000  4601              MOV      r1,r0
;;;73       /* Get task at head of list: it is the task with highest priority. */
;;;74       /* "p_CB" points to head of list. */
;;;75       P_TCB p_first;
;;;76     
;;;77       p_first = p_CB->p_lnk;
000002  6848              LDR      r0,[r1,#4]
;;;78       p_CB->p_lnk = p_first->p_lnk;
000004  6842              LDR      r2,[r0,#4]
000006  604a              STR      r2,[r1,#4]
;;;79       if (p_CB->cb_type == SCB || p_CB->cb_type == MCB || p_CB->cb_type == MUCB) {
000008  780a              LDRB     r2,[r1,#0]
00000a  2a02              CMP      r2,#2
00000c  d005              BEQ      |L2.26|
00000e  780a              LDRB     r2,[r1,#0]
000010  2a01              CMP      r2,#1
000012  d002              BEQ      |L2.26|
000014  780a              LDRB     r2,[r1,#0]
000016  2a03              CMP      r2,#3
000018  d108              BNE      |L2.44|
                  |L2.26|
;;;80         if (p_first->p_lnk != NULL) {
00001a  6842              LDR      r2,[r0,#4]
00001c  b11a              CBZ      r2,|L2.38|
;;;81           p_first->p_lnk->p_rlnk = (P_TCB)p_CB;
00001e  6842              LDR      r2,[r0,#4]
000020  6091              STR      r1,[r2,#8]
;;;82           p_first->p_lnk = NULL;
000022  2200              MOVS     r2,#0
000024  6042              STR      r2,[r0,#4]
                  |L2.38|
;;;83         }
;;;84         p_first->p_rlnk = NULL;
000026  2200              MOVS     r2,#0
000028  6082              STR      r2,[r0,#8]
00002a  e001              B        |L2.48|
                  |L2.44|
;;;85       }
;;;86       else {
;;;87         p_first->p_lnk = NULL;
00002c  2200              MOVS     r2,#0
00002e  6042              STR      r2,[r0,#4]
                  |L2.48|
;;;88       }
;;;89       return (p_first);
;;;90     }
000030  4770              BX       lr
;;;91     
                          ENDP


                          AREA ||i.rt_get_same_rdy_prio||, CODE, READONLY, ALIGN=2

                  rt_get_same_rdy_prio PROC
;;;105    
;;;106    P_TCB rt_get_same_rdy_prio (void) {
000000  4808              LDR      r0,|L3.36|
;;;107      /* Remove a task of same priority from ready list if any exists. Other-   */
;;;108      /* wise return NULL.                                                      */
;;;109      P_TCB p_first;
;;;110    
;;;111      p_first = os_rdy.p_lnk;
000002  6841              LDR      r1,[r0,#4]  ; os_rdy
;;;112      if (p_first->prio == os_tsk.run->prio) {
000004  7888              LDRB     r0,[r1,#2]
000006  4a08              LDR      r2,|L3.40|
000008  6812              LDR      r2,[r2,#0]  ; os_tsk
00000a  7892              LDRB     r2,[r2,#2]
00000c  4290              CMP      r0,r2
00000e  d106              BNE      |L3.30|
;;;113        os_rdy.p_lnk = os_rdy.p_lnk->p_lnk;
000010  4804              LDR      r0,|L3.36|
000012  6840              LDR      r0,[r0,#4]  ; os_rdy
000014  6840              LDR      r0,[r0,#4]
000016  4a03              LDR      r2,|L3.36|
000018  6050              STR      r0,[r2,#4]  ; os_rdy
;;;114        return (p_first);
00001a  4608              MOV      r0,r1
                  |L3.28|
;;;115      }
;;;116      return (NULL);
;;;117    }
00001c  4770              BX       lr
                  |L3.30|
00001e  2000              MOVS     r0,#0                 ;116
000020  e7fc              B        |L3.28|
;;;118    
                          ENDP

000022  0000              DCW      0x0000
                  |L3.36|
                          DCD      os_rdy
                  |L3.40|
                          DCD      os_tsk

                          AREA ||i.rt_psq_enq||, CODE, READONLY, ALIGN=2

                  rt_psq_enq PROC
;;;279    
;;;280    void rt_psq_enq (OS_ID entry, U32 arg) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
;;;281      /* Insert post service request "entry" into ps-queue. */
;;;282      U32 idx;
;;;283    
;;;284      idx = rt_inc_qi (os_psq->size, &os_psq->count, &os_psq->first);
000008  481b              LDR      r0,|L4.120|
00000a  78c1              LDRB     r1,[r0,#3]  ; os_fifo
00000c  1c82              ADDS     r2,r0,#2
00000e  4603              MOV      r3,r0
000010  bf00              NOP      
000012  bf00              NOP      
                  |L4.20|
000014  e8d20f4f          LDREXB   r0,[r2]
000018  4288              CMP      r0,r1
00001a  d102              BNE      |L4.34|
00001c  f3bf8f2f          CLREX    
000020  e018              B        |L4.84|
                  |L4.34|
000022  f1000c01          ADD      r12,r0,#1
000026  f00c08ff          AND      r8,r12,#0xff
00002a  e8c28f4c          STREXB   r12,r8,[r2]
00002e  f1bc0f00          CMP      r12,#0
000032  d1ef              BNE      |L4.20|
000034  bf00              NOP      
                  |L4.54|
000036  e8d3cf4f          LDREXB   r12,[r3]
00003a  4660              MOV      r0,r12
00003c  1c47              ADDS     r7,r0,#1
00003e  428f              CMP      r7,r1
000040  d100              BNE      |L4.68|
000042  2700              MOVS     r7,#0
                  |L4.68|
000044  f00708ff          AND      r8,r7,#0xff
000048  e8c38f4c          STREXB   r12,r8,[r3]
00004c  f1bc0f00          CMP      r12,#0
000050  d1f1              BNE      |L4.54|
000052  bf00              NOP      
                  |L4.84|
000054  4604              MOV      r4,r0
;;;285      if (idx < os_psq->size) {
000056  4808              LDR      r0,|L4.120|
000058  78c0              LDRB     r0,[r0,#3]  ; os_fifo
00005a  42a0              CMP      r0,r4
00005c  d907              BLS      |L4.110|
;;;286        os_psq->q[idx].id  = entry;
00005e  4806              LDR      r0,|L4.120|
000060  1d00              ADDS     r0,r0,#4
000062  f8405034          STR      r5,[r0,r4,LSL #3]
;;;287        os_psq->q[idx].arg = arg;
000066  eb0000c4          ADD      r0,r0,r4,LSL #3
00006a  6046              STR      r6,[r0,#4]
00006c  e002              B        |L4.116|
                  |L4.110|
;;;288      }
;;;289      else {
;;;290        os_error (OS_ERR_FIFO_OVF);
00006e  2002              MOVS     r0,#2
000070  f7fffffe          BL       os_error
                  |L4.116|
;;;291      }
;;;292    }
000074  e8bd81f0          POP      {r4-r8,pc}
;;;293    
                          ENDP

                  |L4.120|
                          DCD      os_fifo

                          AREA ||i.rt_put_dly||, CODE, READONLY, ALIGN=2

                  rt_put_dly PROC
;;;146    
;;;147    void rt_put_dly (P_TCB p_task, U16 delay) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
;;;148      /* Put a task identified with "p_task" into chained delay wait list using */
;;;149      /* a delay value of "delay".                                              */
;;;150      P_TCB p;
;;;151      U32 delta,idelay = delay;
000004  4623              MOV      r3,r4
;;;152    
;;;153      p = (P_TCB)&os_dly;
000006  4914              LDR      r1,|L5.88|
;;;154      if (p->p_dlnk == NULL) {
000008  68cd              LDR      r5,[r1,#0xc]
00000a  b90d              CBNZ     r5,|L5.16|
;;;155        /* Delay list empty */
;;;156        delta = 0;
00000c  2200              MOVS     r2,#0
;;;157        goto last;
00000e  e005              B        |L5.28|
                  |L5.16|
;;;158      }
;;;159      delta = os_dly.delta_time;
000010  4d11              LDR      r5,|L5.88|
000012  8aaa              LDRH     r2,[r5,#0x14]  ; os_dly
;;;160      while (delta < idelay) {
000014  e00e              B        |L5.52|
                  |L5.22|
;;;161        if (p->p_dlnk == NULL) {
000016  68cd              LDR      r5,[r1,#0xc]
000018  b94d              CBNZ     r5,|L5.46|
;;;162          /* End of list found */
;;;163    last: p_task->p_dlnk = NULL;
00001a  bf00              NOP      
                  |L5.28|
00001c  2500              MOVS     r5,#0
00001e  60c5              STR      r5,[r0,#0xc]
;;;164          p->p_dlnk = p_task;
000020  60c8              STR      r0,[r1,#0xc]
;;;165          p_task->p_blnk = p;
000022  6101              STR      r1,[r0,#0x10]
;;;166          p->delta_time = (U16)(idelay - delta);
000024  1a9d              SUBS     r5,r3,r2
000026  828d              STRH     r5,[r1,#0x14]
;;;167          p_task->delta_time = 0;
000028  2500              MOVS     r5,#0
00002a  8285              STRH     r5,[r0,#0x14]
                  |L5.44|
;;;168          return;
;;;169        }
;;;170        p = p->p_dlnk;
;;;171        delta += p->delta_time;
;;;172      }
;;;173      /* Right place found */
;;;174      p_task->p_dlnk = p->p_dlnk;
;;;175      p->p_dlnk = p_task;
;;;176      p_task->p_blnk = p;
;;;177      if (p_task->p_dlnk != NULL) {
;;;178        p_task->p_dlnk->p_blnk = p_task;
;;;179      }
;;;180      p_task->delta_time = (U16)(delta - idelay);
;;;181      p->delta_time -= p_task->delta_time;
;;;182    }
00002c  bd70              POP      {r4-r6,pc}
                  |L5.46|
00002e  68c9              LDR      r1,[r1,#0xc]          ;170
000030  8a8d              LDRH     r5,[r1,#0x14]         ;171
000032  442a              ADD      r2,r2,r5              ;171
                  |L5.52|
000034  429a              CMP      r2,r3                 ;160
000036  d3ee              BCC      |L5.22|
000038  68cd              LDR      r5,[r1,#0xc]          ;174
00003a  60c5              STR      r5,[r0,#0xc]          ;174
00003c  60c8              STR      r0,[r1,#0xc]          ;175
00003e  6101              STR      r1,[r0,#0x10]         ;176
000040  68c5              LDR      r5,[r0,#0xc]          ;177
000042  b10d              CBZ      r5,|L5.72|
000044  68c5              LDR      r5,[r0,#0xc]          ;178
000046  6128              STR      r0,[r5,#0x10]         ;178
                  |L5.72|
000048  1ad5              SUBS     r5,r2,r3              ;180
00004a  8285              STRH     r5,[r0,#0x14]         ;180
00004c  8a8d              LDRH     r5,[r1,#0x14]         ;181
00004e  8a86              LDRH     r6,[r0,#0x14]         ;181
000050  1bad              SUBS     r5,r5,r6              ;181
000052  828d              STRH     r5,[r1,#0x14]         ;181
000054  bf00              NOP      
000056  e7e9              B        |L5.44|
;;;183    
                          ENDP

                  |L5.88|
                          DCD      os_dly

                          AREA ||i.rt_put_prio||, CODE, READONLY, ALIGN=1

                  rt_put_prio PROC
;;;36     
;;;37     void rt_put_prio (P_XCB p_CB, P_TCB p_task) {
000000  b530              PUSH     {r4,r5,lr}
000002  460a              MOV      r2,r1
;;;38       /* Put task identified with "p_task" into list ordered by priority.       */
;;;39       /* "p_CB" points to head of list; list has always an element at end with  */
;;;40       /* a priority less than "p_task->prio".                                   */
;;;41       P_TCB p_CB2;
;;;42       U32 prio;
;;;43       BOOL sem_mbx = __FALSE;
000004  2400              MOVS     r4,#0
;;;44     
;;;45       if (p_CB->cb_type == SCB || p_CB->cb_type == MCB || p_CB->cb_type == MUCB) {
000006  7805              LDRB     r5,[r0,#0]
000008  2d02              CMP      r5,#2
00000a  d005              BEQ      |L6.24|
00000c  7805              LDRB     r5,[r0,#0]
00000e  2d01              CMP      r5,#1
000010  d002              BEQ      |L6.24|
000012  7805              LDRB     r5,[r0,#0]
000014  2d03              CMP      r5,#3
000016  d100              BNE      |L6.26|
                  |L6.24|
;;;46         sem_mbx = __TRUE;
000018  2401              MOVS     r4,#1
                  |L6.26|
;;;47       }
;;;48       prio = p_task->prio;
00001a  7893              LDRB     r3,[r2,#2]
;;;49       p_CB2 = p_CB->p_lnk;
00001c  6841              LDR      r1,[r0,#4]
;;;50       /* Search for an entry in the list */
;;;51       while (p_CB2 != NULL && prio <= p_CB2->prio) {
00001e  e001              B        |L6.36|
                  |L6.32|
;;;52         p_CB = (P_XCB)p_CB2;
000020  4608              MOV      r0,r1
;;;53         p_CB2 = p_CB2->p_lnk;
000022  6849              LDR      r1,[r1,#4]
                  |L6.36|
000024  b111              CBZ      r1,|L6.44|
000026  788d              LDRB     r5,[r1,#2]            ;51
000028  429d              CMP      r5,r3                 ;51
00002a  d2f9              BCS      |L6.32|
                  |L6.44|
;;;54       }
;;;55       /* Entry found, insert the task into the list */
;;;56       p_task->p_lnk = p_CB2;
00002c  6051              STR      r1,[r2,#4]
;;;57       p_CB->p_lnk = p_task;
00002e  6042              STR      r2,[r0,#4]
;;;58       if (sem_mbx) {
000030  b11c              CBZ      r4,|L6.58|
;;;59         if (p_CB2 != NULL) {
000032  b101              CBZ      r1,|L6.54|
;;;60           p_CB2->p_rlnk = p_task;
000034  608a              STR      r2,[r1,#8]
                  |L6.54|
;;;61         }
;;;62         p_task->p_rlnk = (P_TCB)p_CB;
000036  6090              STR      r0,[r2,#8]
000038  e001              B        |L6.62|
                  |L6.58|
;;;63       }
;;;64       else {
;;;65         p_task->p_rlnk = NULL;
00003a  2500              MOVS     r5,#0
00003c  6095              STR      r5,[r2,#8]
                  |L6.62|
;;;66       }
;;;67     }
00003e  bd30              POP      {r4,r5,pc}
;;;68     
                          ENDP


                          AREA ||i.rt_put_rdy_first||, CODE, READONLY, ALIGN=2

                  rt_put_rdy_first PROC
;;;94     
;;;95     void rt_put_rdy_first (P_TCB p_task) {
000000  4903              LDR      r1,|L7.16|
;;;96       /* Put task identified with "p_task" at the head of the ready list. The   */
;;;97       /* task must have at least a priority equal to highest priority in list.  */
;;;98       p_task->p_lnk = os_rdy.p_lnk;
000002  6849              LDR      r1,[r1,#4]  ; os_rdy
000004  6041              STR      r1,[r0,#4]
;;;99       p_task->p_rlnk = NULL;
000006  2100              MOVS     r1,#0
000008  6081              STR      r1,[r0,#8]
;;;100      os_rdy.p_lnk = p_task;
00000a  4901              LDR      r1,|L7.16|
00000c  6048              STR      r0,[r1,#4]  ; os_rdy
;;;101    }
00000e  4770              BX       lr
;;;102    
                          ENDP

                  |L7.16|
                          DCD      os_rdy

                          AREA ||i.rt_resort_prio||, CODE, READONLY, ALIGN=2

                  rt_resort_prio PROC
;;;121    
;;;122    void rt_resort_prio (P_TCB p_task) {
000000  b530              PUSH     {r4,r5,lr}
000002  4605              MOV      r5,r0
;;;123      /* Re-sort ordered lists after the priority of 'p_task' has changed.      */
;;;124      P_TCB p_CB;
;;;125    
;;;126      if (p_task->p_rlnk == NULL) {
000004  68a8              LDR      r0,[r5,#8]
000006  b920              CBNZ     r0,|L8.18|
;;;127        if (p_task->state == READY) {
000008  7868              LDRB     r0,[r5,#1]
00000a  2801              CMP      r0,#1
00000c  d10f              BNE      |L8.46|
;;;128          /* Task is chained into READY list. */
;;;129          p_CB = (P_TCB)&os_rdy;
00000e  4c08              LDR      r4,|L8.48|
;;;130          goto res;
000010  e006              B        |L8.32|
                  |L8.18|
;;;131        }
;;;132      }
;;;133      else {
;;;134        p_CB = p_task->p_rlnk;
000012  68ac              LDR      r4,[r5,#8]
;;;135        while (p_CB->cb_type == TCB) {
000014  e000              B        |L8.24|
                  |L8.22|
;;;136          /* Find a header of this task chain list. */
;;;137          p_CB = p_CB->p_rlnk;
000016  68a4              LDR      r4,[r4,#8]
                  |L8.24|
000018  7820              LDRB     r0,[r4,#0]            ;135
00001a  2800              CMP      r0,#0                 ;135
00001c  d0fb              BEQ      |L8.22|
;;;138        }
;;;139    res:rt_rmv_list (p_task);
00001e  bf00              NOP      
                  |L8.32|
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       rt_rmv_list
;;;140        rt_put_prio ((P_XCB)p_CB, p_task);
000026  4629              MOV      r1,r5
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       rt_put_prio
                  |L8.46|
;;;141      }
;;;142    }
00002e  bd30              POP      {r4,r5,pc}
;;;143    
                          ENDP

                  |L8.48|
                          DCD      os_rdy

                          AREA ||i.rt_rmv_dly||, CODE, READONLY, ALIGN=1

                  rt_rmv_dly PROC
;;;254    
;;;255    void rt_rmv_dly (P_TCB p_task) {
000000  6901              LDR      r1,[r0,#0x10]
;;;256      /* Remove task identified with "p_task" from delay list if enqueued.      */
;;;257      P_TCB p_b;
;;;258    
;;;259      p_b = p_task->p_blnk;
;;;260      if (p_b != NULL) {
000002  b181              CBZ      r1,|L9.38|
;;;261        /* Task is really enqueued */
;;;262        p_b->p_dlnk = p_task->p_dlnk;
000004  68c2              LDR      r2,[r0,#0xc]
000006  60ca              STR      r2,[r1,#0xc]
;;;263        if (p_task->p_dlnk != NULL) {
000008  68c2              LDR      r2,[r0,#0xc]
00000a  b142              CBZ      r2,|L9.30|
;;;264          /* 'p_task' is in the middle of list */
;;;265          p_b->delta_time += p_task->delta_time;
00000c  8a8a              LDRH     r2,[r1,#0x14]
00000e  8a83              LDRH     r3,[r0,#0x14]
000010  441a              ADD      r2,r2,r3
000012  828a              STRH     r2,[r1,#0x14]
;;;266          p_task->p_dlnk->p_blnk = p_b;
000014  68c2              LDR      r2,[r0,#0xc]
000016  6111              STR      r1,[r2,#0x10]
;;;267          p_task->p_dlnk = NULL;
000018  2200              MOVS     r2,#0
00001a  60c2              STR      r2,[r0,#0xc]
00001c  e001              B        |L9.34|
                  |L9.30|
;;;268        }
;;;269        else {
;;;270          /* 'p_task' is at the end of list */
;;;271          p_b->delta_time = 0;
00001e  2200              MOVS     r2,#0
000020  828a              STRH     r2,[r1,#0x14]
                  |L9.34|
;;;272        }
;;;273        p_task->p_blnk = NULL;
000022  2200              MOVS     r2,#0
000024  6102              STR      r2,[r0,#0x10]
                  |L9.38|
;;;274      }
;;;275    }
000026  4770              BX       lr
;;;276    
                          ENDP


                          AREA ||i.rt_rmv_list||, CODE, READONLY, ALIGN=2

                  rt_rmv_list PROC
;;;226    
;;;227    void rt_rmv_list (P_TCB p_task) {
000000  6882              LDR      r2,[r0,#8]
;;;228      /* Remove task identified with "p_task" from ready, semaphore or mailbox  */
;;;229      /* waiting list if enqueued.                                              */
;;;230      P_TCB p_b;
;;;231    
;;;232      if (p_task->p_rlnk != NULL) {
000002  b142              CBZ      r2,|L10.22|
;;;233        /* A task is enqueued in semaphore / mailbox waiting list. */
;;;234        p_task->p_rlnk->p_lnk = p_task->p_lnk;
000004  e9d02301          LDRD     r2,r3,[r0,#4]
000008  605a              STR      r2,[r3,#4]
;;;235        if (p_task->p_lnk != NULL) {
00000a  6842              LDR      r2,[r0,#4]
00000c  b112              CBZ      r2,|L10.20|
;;;236          p_task->p_lnk->p_rlnk = p_task->p_rlnk;
00000e  e9d03201          LDRD     r3,r2,[r0,#4]
000012  609a              STR      r2,[r3,#8]
                  |L10.20|
;;;237        }
;;;238        return;
;;;239      }
;;;240    
;;;241      p_b = (P_TCB)&os_rdy;
;;;242      while (p_b != NULL) {
;;;243        /* Search the ready list for task "p_task" */
;;;244        if (p_b->p_lnk == p_task) {
;;;245          p_b->p_lnk = p_task->p_lnk;
;;;246          return;
;;;247        }
;;;248        p_b = p_b->p_lnk;
;;;249      }
;;;250    }
000014  4770              BX       lr
                  |L10.22|
000016  4906              LDR      r1,|L10.48|
000018  e006              B        |L10.40|
                  |L10.26|
00001a  684a              LDR      r2,[r1,#4]            ;244
00001c  4282              CMP      r2,r0                 ;244
00001e  d102              BNE      |L10.38|
000020  6842              LDR      r2,[r0,#4]            ;245
000022  604a              STR      r2,[r1,#4]            ;245
000024  e7f6              B        |L10.20|
                  |L10.38|
000026  6849              LDR      r1,[r1,#4]            ;248
                  |L10.40|
000028  2900              CMP      r1,#0                 ;242
00002a  d1f6              BNE      |L10.26|
00002c  bf00              NOP      
00002e  e7f1              B        |L10.20|
;;;251    
                          ENDP

                  |L10.48|
                          DCD      os_rdy

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  os_rdy
                          %        24
                  os_dly
                          %        24
