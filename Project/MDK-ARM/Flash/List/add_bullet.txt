; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\add_bullet.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\add_bullet.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\MySrc -I..\..\Libraries -I..\..\MySrc\ostask -I..\..\MySrc\MPU6050 -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 -DSTM32F40_41xxx --omf_browse=.\flash\obj\add_bullet.crf ..\..\MySrc\add_bullet.c]
                          THUMB

                          AREA ||i.add_bullet||, CODE, READONLY, ALIGN=2

                  add_bullet PROC
;;;33     
;;;34     void add_bullet(CanRxMsg *msg_rece)
000000  b570              PUSH     {r4-r6,lr}
;;;35     {
000002  4604              MOV      r4,r0
;;;36     
;;;37     	 //if(bumark||vmark||cir_mark||timemark)FollowMode =1;else{FollowMode = 0;}
;;;38     //			if(vmark)Motor_Aguest(rrx,rry,rrth); //标定板定位
;;;39     	if(bumark)//os_evt_wait_or (BIT_0, 200) == OS_R_EVT)
000004  481a              LDR      r0,|L1.112|
000006  7800              LDRB     r0,[r0,#0]  ; bumark
000008  b388              CBZ      r0,|L1.110|
;;;40     		{
;;;41     					// os_evt_set (BIT_3, HandleDisconnectCheck);//断线保护
;;;42     					// os_evt_set (BIT_4, HandleDisconnectCheck);//断线保护
;;;43     					for(i=0;i<4;i++)																		//循线程序代码
00000a  2000              MOVS     r0,#0
00000c  4919              LDR      r1,|L1.116|
00000e  8008              STRH     r0,[r1,#0]
000010  e01d              B        |L1.78|
                  |L1.18|
;;;44     					{
;;;45     						temp[i]=(((int16_t)msg_rece->Data[2*i])<<8)+msg_rece->Data[2*i+1];
000012  4818              LDR      r0,|L1.116|
000014  f9b00000          LDRSH    r0,[r0,#0]  ; i
000018  0040              LSLS     r0,r0,#1
00001a  1c40              ADDS     r0,r0,#1
00001c  f104010b          ADD      r1,r4,#0xb
000020  5c09              LDRB     r1,[r1,r0]
000022  4814              LDR      r0,|L1.116|
000024  f9b00000          LDRSH    r0,[r0,#0]  ; i
000028  0042              LSLS     r2,r0,#1
00002a  f104000b          ADD      r0,r4,#0xb
00002e  5c80              LDRB     r0,[r0,r2]
000030  eb012000          ADD      r0,r1,r0,LSL #8
000034  b200              SXTH     r0,r0
000036  4910              LDR      r1,|L1.120|
000038  4a0e              LDR      r2,|L1.116|
00003a  f9b22000          LDRSH    r2,[r2,#0]  ; i
00003e  f8210012          STRH     r0,[r1,r2,LSL #1]
000042  480c              LDR      r0,|L1.116|
000044  8800              LDRH     r0,[r0,#0]            ;43  ; i
000046  1c40              ADDS     r0,r0,#1              ;43
000048  b200              SXTH     r0,r0                 ;43
00004a  490a              LDR      r1,|L1.116|
00004c  8008              STRH     r0,[r1,#0]            ;43
                  |L1.78|
00004e  4809              LDR      r0,|L1.116|
000050  f9b00000          LDRSH    r0,[r0,#0]            ;43  ; i
000054  2804              CMP      r0,#4                 ;43
000056  dbdc              BLT      |L1.18|
;;;46     					}
;;;47     //					if(temp[0]==1&&temp[1]==1&&temp[2]==1&&temp[3]==1)
;;;48     //						{bumark=0;USART1_DMA_Send(chessbuf,sizeof(chessbuf));vmark=1;}   //巡到公路出口，依靠棋盘标定
;;;49     
;;;50     //					if(temp[0]==0&&temp[1]==0&&temp[2]==0&&temp[3]==0)
;;;51     //						{lmark=1;bumark=0;redmark=1;Motor_Aguest(1024,1024,0);timemark=1;}		//printf("out bumark\r\n");}							//发信号延时等待落弹开始
;;;52     //					else
;;;53     					Motor_CarFrame(temp[0],temp[1],temp[2],temp[3] );//printf("send\r\n");
000058  4d07              LDR      r5,|L1.120|
00005a  f9b53006          LDRSH    r3,[r5,#6]  ; temp
00005e  f9b52004          LDRSH    r2,[r5,#4]  ; temp
000062  f9b51002          LDRSH    r1,[r5,#2]  ; temp
000066  f9b50000          LDRSH    r0,[r5,#0]  ; temp
00006a  f7fffffe          BL       Motor_CarFrame
                  |L1.110|
;;;54     			}
;;;55     		
;;;56     }
00006e  bd70              POP      {r4-r6,pc}
;;;57     
                          ENDP

                  |L1.112|
                          DCD      bumark
                  |L1.116|
                          DCD      i
                  |L1.120|
                          DCD      temp

                          AREA ||i.rece_usart||, CODE, READONLY, ALIGN=2

                  rece_usart PROC
;;;135    
;;;136    void rece_usart(u8* uart_rx)
000000  7801              LDRB     r1,[r0,#0]
;;;137    {
;;;138    			if(uart_rx[0]==0xaa)
000002  29aa              CMP      r1,#0xaa
000004  d11a              BNE      |L2.60|
;;;139    	       {
;;;140    			rx=uart_rx[1]<<8;
000006  7841              LDRB     r1,[r0,#1]
000008  0209              LSLS     r1,r1,#8
00000a  4a34              LDR      r2,|L2.220|
00000c  8011              STRH     r1,[r2,#0]
;;;141    			rx|=uart_rx[2];
00000e  7881              LDRB     r1,[r0,#2]
000010  8812              LDRH     r2,[r2,#0]  ; rx
000012  4311              ORRS     r1,r1,r2
000014  4a31              LDR      r2,|L2.220|
000016  8011              STRH     r1,[r2,#0]
;;;142    			ry=uart_rx[3]<<8;
000018  78c1              LDRB     r1,[r0,#3]
00001a  0209              LSLS     r1,r1,#8
00001c  4a30              LDR      r2,|L2.224|
00001e  8011              STRH     r1,[r2,#0]
;;;143    			ry|=uart_rx[4];
000020  7901              LDRB     r1,[r0,#4]
000022  8812              LDRH     r2,[r2,#0]  ; ry
000024  4311              ORRS     r1,r1,r2
000026  4a2e              LDR      r2,|L2.224|
000028  8011              STRH     r1,[r2,#0]
;;;144    			rth=uart_rx[5]<<8;
00002a  7941              LDRB     r1,[r0,#5]
00002c  0209              LSLS     r1,r1,#8
00002e  4a2d              LDR      r2,|L2.228|
000030  8011              STRH     r1,[r2,#0]
;;;145    			rth|=uart_rx[6];
000032  7981              LDRB     r1,[r0,#6]
000034  8812              LDRH     r2,[r2,#0]  ; rth
000036  4311              ORRS     r1,r1,r2
000038  4a2a              LDR      r2,|L2.228|
00003a  8011              STRH     r1,[r2,#0]
                  |L2.60|
;;;146    			//printf("%d\t%d\t%d\t",rx,ry,rth);
;;;147    			}
;;;148    		   if(rx==666&&vmark==1){vmark=0;cir_mark=1;rrx=rry=1024;rrth=0;}
00003c  4927              LDR      r1,|L2.220|
00003e  8809              LDRH     r1,[r1,#0]  ; rx
000040  f240229a          MOV      r2,#0x29a
000044  4291              CMP      r1,r2
000046  d112              BNE      |L2.110|
000048  4927              LDR      r1,|L2.232|
00004a  7809              LDRB     r1,[r1,#0]  ; vmark
00004c  2901              CMP      r1,#1
00004e  d10e              BNE      |L2.110|
000050  2100              MOVS     r1,#0
000052  4a25              LDR      r2,|L2.232|
000054  7011              STRB     r1,[r2,#0]
000056  2101              MOVS     r1,#1
000058  4a24              LDR      r2,|L2.236|
00005a  7011              STRB     r1,[r2,#0]
00005c  0289              LSLS     r1,r1,#10
00005e  4a24              LDR      r2,|L2.240|
000060  8011              STRH     r1,[r2,#0]
000062  4a24              LDR      r2,|L2.244|
000064  8011              STRH     r1,[r2,#0]
000066  2100              MOVS     r1,#0
000068  4a23              LDR      r2,|L2.248|
00006a  8011              STRH     r1,[r2,#0]
00006c  e00f              B        |L2.142|
                  |L2.110|
;;;149    		   else {rrx=rx;rry=ry;rrth=(int)(rth-1024)*7;}
00006e  491b              LDR      r1,|L2.220|
000070  8809              LDRH     r1,[r1,#0]  ; rx
000072  4a20              LDR      r2,|L2.244|
000074  8011              STRH     r1,[r2,#0]
000076  491a              LDR      r1,|L2.224|
000078  8809              LDRH     r1,[r1,#0]  ; ry
00007a  4a1d              LDR      r2,|L2.240|
00007c  8011              STRH     r1,[r2,#0]
00007e  4919              LDR      r1,|L2.228|
000080  8809              LDRH     r1,[r1,#0]  ; rth
000082  f5a16180          SUB      r1,r1,#0x400
000086  ebc101c1          RSB      r1,r1,r1,LSL #3
00008a  4a1b              LDR      r2,|L2.248|
00008c  8011              STRH     r1,[r2,#0]
                  |L2.142|
;;;150    		    if(rx==888&&vmark==1){vmark=0;rrx=rry=1024;rrth=0;}//bu_mark=1;
00008e  4913              LDR      r1,|L2.220|
000090  8809              LDRH     r1,[r1,#0]  ; rx
000092  f5b17f5e          CMP      r1,#0x378
000096  d110              BNE      |L2.186|
000098  4913              LDR      r1,|L2.232|
00009a  7809              LDRB     r1,[r1,#0]  ; vmark
00009c  2901              CMP      r1,#1
00009e  d10c              BNE      |L2.186|
0000a0  2100              MOVS     r1,#0
0000a2  4a11              LDR      r2,|L2.232|
0000a4  7011              STRB     r1,[r2,#0]
0000a6  f44f6180          MOV      r1,#0x400
0000aa  4a11              LDR      r2,|L2.240|
0000ac  8011              STRH     r1,[r2,#0]
0000ae  4a11              LDR      r2,|L2.244|
0000b0  8011              STRH     r1,[r2,#0]
0000b2  2100              MOVS     r1,#0
0000b4  4a10              LDR      r2,|L2.248|
0000b6  8011              STRH     r1,[r2,#0]
0000b8  e00f              B        |L2.218|
                  |L2.186|
;;;151    		   else
;;;152    			{rrx=rx;rry=ry;rrth=(int)(rth-1024)*7;}
0000ba  4908              LDR      r1,|L2.220|
0000bc  8809              LDRH     r1,[r1,#0]  ; rx
0000be  4a0d              LDR      r2,|L2.244|
0000c0  8011              STRH     r1,[r2,#0]
0000c2  4907              LDR      r1,|L2.224|
0000c4  8809              LDRH     r1,[r1,#0]  ; ry
0000c6  4a0a              LDR      r2,|L2.240|
0000c8  8011              STRH     r1,[r2,#0]
0000ca  4906              LDR      r1,|L2.228|
0000cc  8809              LDRH     r1,[r1,#0]  ; rth
0000ce  f5a16180          SUB      r1,r1,#0x400
0000d2  ebc101c1          RSB      r1,r1,r1,LSL #3
0000d6  4a08              LDR      r2,|L2.248|
0000d8  8011              STRH     r1,[r2,#0]
                  |L2.218|
;;;153    }
0000da  4770              BX       lr
;;;154    
                          ENDP

                  |L2.220|
                          DCD      ||rx||
                  |L2.224|
                          DCD      ||ry||
                  |L2.228|
                          DCD      ||rth||
                  |L2.232|
                          DCD      vmark
                  |L2.236|
                          DCD      cir_mark
                  |L2.240|
                          DCD      ||rry||
                  |L2.244|
                          DCD      ||rrx||
                  |L2.248|
                          DCD      rrth

                          AREA ||i.send_cmd||, CODE, READONLY, ALIGN=2

                  send_cmd PROC
;;;57     
;;;58     void send_cmd()
000000  200a              MOVS     r0,#0xa
;;;59     {
;;;60     //	if(cir_mark)							//由侧面转为正面
;;;61     //			{
;;;62     //
;;;63     //				Motor_Aguest(224,1824,0);
;;;64     //				delay_ms(500);
;;;65     //				Motor_Aguest(224,1824,0);
;;;66     //				delay_ms(500);
;;;67     //				Motor_Aguest(124,1724,1000);
;;;68     //				delay_ms(500);
;;;69     //				Motor_Aguest(24,1624,3200);
;;;70     //				delay_ms(500);
;;;71     //				cir_mark=0;
;;;72     //				//bumark=1;
;;;73     //				//USART1_DMA_Send(chessbuf,sizeof(chessbuf)); //通知PC启动圆形标定识别
;;;74     //				vmark=1;
;;;75     ////				bu_mark=1;
;;;76     //			}
;;;77     //		if(bu_mark)
;;;78     //			{
;;;79     //
;;;80     //				Motor_Aguest(324,1924,0);
;;;81     //				delay_ms(500);
;;;82     //				Motor_Aguest(24,1924,0);
;;;83     //				delay_ms(500);
;;;84     //			    Motor_Aguest(1024,1334,0);//			   Motor_Aguest(1024,1424,0);
;;;85     //				delay_ms(500);
;;;86     //				bu_mark=0;
;;;87     ////				Motor_Aguest(1024,1424,0);
;;;88     ////				delay_ms(500);
;;;89     ////				printf("t\r\n");
;;;90     //				Motor_Aguest(1024,1024,0);
;;;91     //				delay_ms(100);
;;;92     //				printf("v0");
;;;93     //				bumark=1;									//圆形标定完后直走后启动循线补弹
;;;94     //		    }
;;;95     //
;;;96     //		if(redmark&&lmark)						//红外发送,通知左边落弹
;;;97     //			{
;;;98     //				//delay_ms(200);
;;;99     //				UART1_BAUD=9600;
;;;100    //				bsp_InitUart();
;;;101    //				//delay_ms(200);
;;;102    //				USART1_DMA_Send(lbuf,sizeof(lbuf));
;;;103    //				delay_ms(20);USART1_DMA_Send(lbuf,sizeof(lbuf));
;;;104    //				delay_ms(20);USART1_DMA_Send(lbuf,sizeof(lbuf));
;;;105    //				lmark=redmark=0;
;;;106    //				delay_ms(200);
;;;107    //				UART1_BAUD=115200;
;;;108    //				bsp_InitUart();
;;;109    //				//delay_ms(200);
;;;110    //
;;;111    //			}
;;;112    //		if(redmark&&rmark)						//红外发送,通知右边落弹
;;;113    //			{
;;;114    //				UART1_BAUD=9600;
;;;115    //				bsp_InitUart();
;;;116    //				USART1_DMA_Send(rbuf,sizeof(rbuf));
;;;117    //				delay_ms(20);USART1_DMA_Send(rbuf,sizeof(rbuf));
;;;118    //				delay_ms(20);USART1_DMA_Send(rbuf,sizeof(rbuf));
;;;119    //				delay_ms(200);
;;;120    //				UART1_BAUD=115200;
;;;121    //				bsp_InitUart();
;;;122    //				rmark=redmark=0;
;;;123    //			}
;;;124    //		if(timemark)
;;;125    //		{
;;;126    //			delay_ms(3000);				//收到信号开始延时2.5s收弹
;;;127    //			delay_ms(2000);
;;;128    //			redmark=1;
;;;129    //			timemark=0;
;;;130    //			bumark=0;
;;;131    //		}
;;;132    //
;;;133    		delay_ms(10);
000002  f8dfc008          LDR      r12,|L3.12|
000006  df00              SVC      #0x0
;;;134    }
000008  4770              BX       lr
;;;135    
                          ENDP

00000a  0000              DCW      0x0000
                  |L3.12|
                          DCD      rt_dly_wait

                          AREA ||.data||, DATA, ALIGN=1

                  temp
                          %        8
                  i
000008  0000              DCB      0x00,0x00
                  chessbuf
00000a  5566              DCB      0x55,0x66
00000c  77                DCB      0x77
                  circlebuf
00000d  558899            DCB      0x55,0x88,0x99
                  lbuf
000010  a1f11122          DCB      0xa1,0xf1,0x11,0x22
000014  33                DCB      0x33
                  rbuf
000015  a1f111            DCB      0xa1,0xf1,0x11
000018  4455              DCB      0x44,0x55
                  bumark
00001a  00                DCB      0x00
                  timemark
00001b  00                DCB      0x00
                  vmark
00001c  00                DCB      0x00
                  redmark
00001d  00                DCB      0x00
                  lmark
00001e  00                DCB      0x00
                  rmark
00001f  00                DCB      0x00
                  bu_mark
000020  00                DCB      0x00
                  cir_mark
000021  00                DCB      0x00
                  ||rx||
000022  0400              DCW      0x0400
                  ||rrx||
000024  0400              DCW      0x0400
                  ||rry||
000026  0400              DCW      0x0400
                  ||ry||
000028  0400              DCW      0x0400
                  rrth
00002a  0000              DCW      0x0000
                  ||rth||
00002c  0400              DCW      0x0400

;*** Start embedded assembler ***

#line 1 "..\\..\\MySrc\\add_bullet.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_add_bullet_c_chessbuf____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_add_bullet_c_chessbuf____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_add_bullet_c_chessbuf____REVSH|
#line 144
|__asm___12_add_bullet_c_chessbuf____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___12_add_bullet_c_chessbuf____RRX|
#line 300
|__asm___12_add_bullet_c_chessbuf____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
