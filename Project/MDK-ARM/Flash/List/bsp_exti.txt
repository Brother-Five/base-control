; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_exti.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_exti.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\MySrc -I..\..\Libraries -I..\..\MySrc\ostask -I..\..\MySrc\MPU6050 -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 -DSTM32F40_41xxx --omf_browse=.\flash\obj\bsp_exti.crf ..\..\User\bsp_stm32f4xx\src\bsp_exti.c]
                          THUMB

                          AREA ||i.EXTI15_10_IRQHandler||, CODE, READONLY, ALIGN=1

                  EXTI15_10_IRQHandler PROC
;;;460    
;;;461    void EXTI15_10_IRQHandler(void)
000000  4770              BX       lr
;;;462    {
;;;463    
;;;464    #ifdef USE_EXTI_LINE_10
;;;465    	if(EXTI_GetITStatus(EXTI_Line10) != RESET)
;;;466    	{
;;;467    		EXTI_ClearITPendingBit(EXTI_Line10); /* 清除中断标志位 */
;;;468    		if(_EXTI_MODE&EXTI_Line10)//
;;;469    			EXTI_Cmd(EXTI_Line10,DISABLE);
;;;470    		s_EXTI_LINE10();
;;;471    	}
;;;472    #endif
;;;473    
;;;474    #ifdef USE_EXTI_LINE_11
;;;475    	if(EXTI_GetITStatus(EXTI_Line11) != RESET)
;;;476    	{
;;;477    		EXTI_ClearITPendingBit(EXTI_Line11); /* 清除中断标志位 */
;;;478    		if(_EXTI_MODE&EXTI_Line11)//
;;;479    			EXTI_Cmd(EXTI_Line11,DISABLE);
;;;480    		s_EXTI_LINE11();
;;;481    	}
;;;482    #endif
;;;483    
;;;484    #ifdef USE_EXTI_LINE_12
;;;485    	if(EXTI_GetITStatus(EXTI_Line12) != RESET)
;;;486    	{
;;;487    		EXTI_ClearITPendingBit(EXTI_Line12); /* 清除中断标志位 */
;;;488    		if(_EXTI_MODE&EXTI_Line12)//
;;;489    			EXTI_Cmd(EXTI_Line12,DISABLE);
;;;490    		s_EXTI_LINE12();
;;;491    	}
;;;492    #endif
;;;493    
;;;494    #ifdef USE_EXTI_LINE_13
;;;495    	if(EXTI_GetITStatus(EXTI_Line13) != RESET)
;;;496    	{
;;;497    		EXTI_ClearITPendingBit(EXTI_Line13); /* 清除中断标志位 */
;;;498    		if(_EXTI_MODE&EXTI_Line13)//
;;;499    			EXTI_Cmd(EXTI_Line13,DISABLE);
;;;500    		s_EXTI_LINE13();
;;;501    	}
;;;502    #endif
;;;503    
;;;504    #ifdef USE_EXTI_LINE_14
;;;505    	if(EXTI_GetITStatus(EXTI_Line14) != RESET)
;;;506    	{
;;;507    		EXTI_ClearITPendingBit(EXTI_Line14); /* 清除中断标志位 */
;;;508    		if(_EXTI_MODE&EXTI_Line14)//
;;;509    			EXTI_Cmd(EXTI_Line14,DISABLE);
;;;510    		s_EXTI_LINE14();
;;;511    	}
;;;512    #endif
;;;513    
;;;514    #ifdef USE_EXTI_LINE_15
;;;515    	if(EXTI_GetITStatus(EXTI_Line15) != RESET)
;;;516    	{
;;;517    		EXTI_ClearITPendingBit(EXTI_Line15); /* 清除中断标志位 */
;;;518    		if(_EXTI_MODE&EXTI_Line15)//
;;;519    			EXTI_Cmd(EXTI_Line15,DISABLE);
;;;520    		s_EXTI_LINE15();
;;;521    	}
;;;522    #endif
;;;523    }
;;;524    
                          ENDP


                          AREA ||i.EXTI9_5_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI9_5_IRQHandler PROC
;;;405    
;;;406    void EXTI9_5_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;407    {
;;;408    #ifdef USE_EXTI_LINE_5
;;;409    	if(EXTI_GetITStatus(EXTI_Line5) != RESET)
;;;410    	{
;;;411    		EXTI_ClearITPendingBit(EXTI_Line5); /* 清除中断标志位 */
;;;412    		if(_EXTI_MODE&EXTI_Line5)//
;;;413    			EXTI_Cmd(EXTI_Line5,DISABLE);
;;;414    		s_EXTI_LINE5();
;;;415    	}
;;;416    #endif
;;;417    
;;;418    #ifdef USE_EXTI_LINE_6
;;;419    	if(EXTI_GetITStatus(EXTI_Line6) != RESET)
;;;420    	{
;;;421    		EXTI_ClearITPendingBit(EXTI_Line6); /* 清除中断标志位 */
;;;422    		if(_EXTI_MODE&EXTI_Line6)//
;;;423    			EXTI_Cmd(EXTI_Line6,DISABLE);
;;;424    		s_EXTI_LINE6();
;;;425    	}
;;;426    #endif
;;;427    
;;;428    #ifdef USE_EXTI_LINE_7
;;;429    	if(EXTI_GetITStatus(EXTI_Line7) != RESET)
;;;430    	{
;;;431    		EXTI_ClearITPendingBit(EXTI_Line7); /* 清除中断标志位 */
;;;432    		if(_EXTI_MODE&EXTI_Line7)//
;;;433    			EXTI_Cmd(EXTI_Line7,DISABLE);
;;;434    		s_EXTI_LINE7();
;;;435    	}
;;;436    #endif
;;;437    
;;;438    #ifdef USE_EXTI_LINE_8
;;;439    	if(EXTI_GetITStatus(EXTI_Line8) != RESET)
000002  f44f7080          MOV      r0,#0x100
000006  f7fffffe          BL       EXTI_GetITStatus
00000a  b180              CBZ      r0,|L2.46|
;;;440    	{
;;;441    		EXTI_ClearITPendingBit(EXTI_Line8); /* 清除中断标志位 */
00000c  f44f7080          MOV      r0,#0x100
000010  f7fffffe          BL       EXTI_ClearITPendingBit
;;;442    		if(_EXTI_MODE&EXTI_Line8)//
000014  4811              LDR      r0,|L2.92|
000016  8800              LDRH     r0,[r0,#0]  ; _EXTI_MODE
000018  f4007080          AND      r0,r0,#0x100
00001c  b120              CBZ      r0,|L2.40|
;;;443    			EXTI_Cmd(EXTI_Line8,DISABLE);
00001e  2100              MOVS     r1,#0
000020  f44f7080          MOV      r0,#0x100
000024  f7fffffe          BL       EXTI_Cmd
                  |L2.40|
;;;444    		s_EXTI_LINE8();
000028  480d              LDR      r0,|L2.96|
00002a  6800              LDR      r0,[r0,#0]  ; s_EXTI_LINE8
00002c  4780              BLX      r0
                  |L2.46|
;;;445    	}
;;;446    #endif
;;;447    
;;;448    #ifdef USE_EXTI_LINE_9
;;;449    	if(EXTI_GetITStatus(EXTI_Line9) != RESET)
00002e  f44f7000          MOV      r0,#0x200
000032  f7fffffe          BL       EXTI_GetITStatus
000036  b180              CBZ      r0,|L2.90|
;;;450    	{
;;;451    		EXTI_ClearITPendingBit(EXTI_Line9); /* 清除中断标志位 */
000038  f44f7000          MOV      r0,#0x200
00003c  f7fffffe          BL       EXTI_ClearITPendingBit
;;;452    		if(_EXTI_MODE&EXTI_Line9)//
000040  4806              LDR      r0,|L2.92|
000042  8800              LDRH     r0,[r0,#0]  ; _EXTI_MODE
000044  f4007000          AND      r0,r0,#0x200
000048  b120              CBZ      r0,|L2.84|
;;;453    			EXTI_Cmd(EXTI_Line9,DISABLE);
00004a  2100              MOVS     r1,#0
00004c  f44f7000          MOV      r0,#0x200
000050  f7fffffe          BL       EXTI_Cmd
                  |L2.84|
;;;454    		s_EXTI_LINE9();
000054  4803              LDR      r0,|L2.100|
000056  6800              LDR      r0,[r0,#0]  ; s_EXTI_LINE9
000058  4780              BLX      r0
                  |L2.90|
;;;455    	}
;;;456    #endif
;;;457    
;;;458    
;;;459    }
00005a  bd10              POP      {r4,pc}
;;;460    
                          ENDP

                  |L2.92|
                          DCD      _EXTI_MODE
                  |L2.96|
                          DCD      s_EXTI_LINE8
                  |L2.100|
                          DCD      s_EXTI_LINE9

                          AREA ||i.EXTI_Cmd||, CODE, READONLY, ALIGN=2

                  EXTI_Cmd PROC
;;;330     */
;;;331    void EXTI_Cmd(uint32_t Linex,FunctionalState NewState)
000000  4a09              LDR      r2,|L3.40|
;;;332    {
;;;333    
;;;334    	EXTI->PR = Linex; //清除Linex上的中断标志位
000002  6010              STR      r0,[r2,#0]
;;;335    	if(NewState)
000004  b139              CBZ      r1,|L3.22|
;;;336    		EXTI->IMR|=Linex;
000006  4a08              LDR      r2,|L3.40|
000008  3a14              SUBS     r2,r2,#0x14
00000a  6812              LDR      r2,[r2,#0]
00000c  4302              ORRS     r2,r2,r0
00000e  4b06              LDR      r3,|L3.40|
000010  3b14              SUBS     r3,r3,#0x14
000012  601a              STR      r2,[r3,#0]
000014  e006              B        |L3.36|
                  |L3.22|
;;;337    	else
;;;338    		EXTI->IMR&=~Linex;
000016  4a04              LDR      r2,|L3.40|
000018  3a14              SUBS     r2,r2,#0x14
00001a  6812              LDR      r2,[r2,#0]
00001c  4382              BICS     r2,r2,r0
00001e  4b02              LDR      r3,|L3.40|
000020  3b14              SUBS     r3,r3,#0x14
000022  601a              STR      r2,[r3,#0]
                  |L3.36|
;;;339    }
000024  4770              BX       lr
;;;340    #ifdef USE_EXTI_LINE_0
                          ENDP

000026  0000              DCW      0x0000
                  |L3.40|
                          DCD      0x40013c14

                          AREA ||i.ExtiConfiguration||, CODE, READONLY, ALIGN=2

                  ExtiConfiguration PROC
;;;160    
;;;161    void ExtiConfiguration(uint8_t EXTI_PortSourceGPIOx,uint8_t EXTI_PinSourcex,EXTITrigger_TypeDef _EXTITrigger,void * _pCallBack,MODE_T _mode)
000000  e92d43fe          PUSH     {r1-r9,lr}
;;;162    {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
00000a  461d              MOV      r5,r3
00000c  f8dd8028          LDR      r8,[sp,#0x28]
;;;163    	NVIC_InitTypeDef   NVIC_InitStructure;
;;;164    	EXTI_InitTypeDef   EXTI_InitStructure;
;;;165    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
000010  2101              MOVS     r1,#1
000012  0388              LSLS     r0,r1,#14
000014  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;166    
;;;167    	SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOx, EXTI_PinSourcex);
000018  4621              MOV      r1,r4
00001a  4638              MOV      r0,r7
00001c  f7fffffe          BL       SYSCFG_EXTILineConfig
;;;168    	EXTI_InitStructure.EXTI_Line    = 1<<EXTI_PinSourcex;
000020  2001              MOVS     r0,#1
000022  40a0              LSLS     r0,r0,r4
000024  9000              STR      r0,[sp,#0]
;;;169    	EXTI_InitStructure.EXTI_Mode    = EXTI_Mode_Interrupt;
000026  2000              MOVS     r0,#0
000028  f88d0004          STRB     r0,[sp,#4]
;;;170    	EXTI_InitStructure.EXTI_Trigger = _EXTITrigger;
00002c  f88d6005          STRB     r6,[sp,#5]
;;;171    	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
000030  2001              MOVS     r0,#1
000032  f88d0006          STRB     r0,[sp,#6]
;;;172    	EXTI_Init(&EXTI_InitStructure);
000036  4668              MOV      r0,sp
000038  f7fffffe          BL       EXTI_Init
;;;173    	_EXTI_MODE |= _mode<<EXTI_PinSourcex;
00003c  fa08f004          LSL      r0,r8,r4
000040  491c              LDR      r1,|L4.180|
000042  6809              LDR      r1,[r1,#0]  ; _EXTI_MODE
000044  4308              ORRS     r0,r0,r1
000046  491b              LDR      r1,|L4.180|
000048  6008              STR      r0,[r1,#0]  ; _EXTI_MODE
;;;174    //	_EXTI_MODE &= !_mode<<EXTI_PinSourcex;
;;;175    	switch (EXTI_PinSourcex)
00004a  2c08              CMP      r4,#8
00004c  d002              BEQ      |L4.84|
00004e  2c09              CMP      r4,#9
000050  d106              BNE      |L4.96|
000052  e002              B        |L4.90|
                  |L4.84|
;;;176    	{
;;;177    
;;;178    #ifdef USE_EXTI_LINE_0
;;;179    		case 0:s_EXTI_LINE0=_pCallBack;
;;;180    				NVIC_InitStructure.NVIC_IRQChannel                   = EXTI0_IRQn;
;;;181    				NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = Priority_EXTI0_Pre;
;;;182    				NVIC_InitStructure.NVIC_IRQChannelSubPriority        = Priority_EXTI0_Sub;
;;;183    				NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
;;;184    				NVIC_Init(&NVIC_InitStructure);
;;;185    				break;
;;;186    #endif
;;;187    
;;;188    
;;;189    
;;;190    #ifdef USE_EXTI_LINE_1
;;;191    		case 1:s_EXTI_LINE1=_pCallBack;
;;;192    				NVIC_InitStructure.NVIC_IRQChannel                   = EXTI1_IRQn;
;;;193    				NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = Priority_EXTI1_Pre;
;;;194    				NVIC_InitStructure.NVIC_IRQChannelSubPriority        = Priority_EXTI1_Sub;
;;;195    				NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
;;;196    				NVIC_Init(&NVIC_InitStructure);
;;;197    				break;
;;;198    #endif
;;;199    
;;;200    
;;;201    #ifdef USE_EXTI_LINE_2
;;;202    		case 2:s_EXTI_LINE2=_pCallBack;
;;;203    				NVIC_InitStructure.NVIC_IRQChannel                   = EXTI2_IRQn;
;;;204    				NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = Priority_EXTI2_Pre;
;;;205    				NVIC_InitStructure.NVIC_IRQChannelSubPriority        = Priority_EXTI2_Sub;
;;;206    				NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
;;;207    				NVIC_Init(&NVIC_InitStructure);
;;;208    				break;
;;;209    #endif
;;;210    
;;;211    
;;;212    
;;;213    #ifdef USE_EXTI_LINE_3
;;;214    		case 3:s_EXTI_LINE3=_pCallBack;
;;;215    				NVIC_InitStructure.NVIC_IRQChannel                   = EXTI3_IRQn;
;;;216    				NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = Priority_EXTI3_Pre;
;;;217    				NVIC_InitStructure.NVIC_IRQChannelSubPriority        = Priority_EXTI3_Sub;
;;;218    				NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
;;;219    				NVIC_Init(&NVIC_InitStructure);
;;;220    				break;
;;;221    #endif
;;;222    
;;;223    
;;;224    
;;;225    #ifdef USE_EXTI_LINE_4
;;;226    		case 4:s_EXTI_LINE4=_pCallBack;
;;;227    				NVIC_InitStructure.NVIC_IRQChannel                   = EXTI4_IRQn;
;;;228    				NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = Priority_EXTI4_Pre;
;;;229    				NVIC_InitStructure.NVIC_IRQChannelSubPriority        = Priority_EXTI4_Sub;
;;;230    				NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
;;;231    				NVIC_Init(&NVIC_InitStructure);
;;;232    				break;
;;;233    #endif
;;;234    
;;;235    
;;;236    
;;;237    #ifdef USE_EXTI_LINE_5
;;;238    		case 5:s_EXTI_LINE5=_pCallBack;break;
;;;239    #endif
;;;240    
;;;241    
;;;242    
;;;243    #ifdef USE_EXTI_LINE_6
;;;244    		case 6:s_EXTI_LINE6=_pCallBack;break;
;;;245    #endif
;;;246    
;;;247    
;;;248    
;;;249    #ifdef USE_EXTI_LINE_7
;;;250    		case 7:s_EXTI_LINE7=_pCallBack;break;
;;;251    #endif
;;;252    
;;;253    
;;;254    
;;;255    #ifdef USE_EXTI_LINE_8
;;;256    		case 8:s_EXTI_LINE8=_pCallBack;break;
000054  4818              LDR      r0,|L4.184|
000056  6005              STR      r5,[r0,#0]  ; s_EXTI_LINE8
000058  e003              B        |L4.98|
                  |L4.90|
;;;257    #endif
;;;258    
;;;259    
;;;260    
;;;261    #ifdef USE_EXTI_LINE_9
;;;262    		case 9:s_EXTI_LINE9=_pCallBack;break;
00005a  4818              LDR      r0,|L4.188|
00005c  6005              STR      r5,[r0,#0]  ; s_EXTI_LINE9
00005e  e000              B        |L4.98|
                  |L4.96|
;;;263    #endif
;;;264    
;;;265    
;;;266    
;;;267    #ifdef USE_EXTI_LINE_10
;;;268    		case 10:s_EXTI_LINE10=_pCallBack;break;
;;;269    #endif
;;;270    
;;;271    
;;;272    
;;;273    #ifdef USE_EXTI_LINE_11
;;;274    		case 11:s_EXTI_LINE11=_pCallBack;break;
;;;275    #endif
;;;276    
;;;277    
;;;278    
;;;279    #ifdef USE_EXTI_LINE_12
;;;280    		case 12:s_EXTI_LINE12=_pCallBack;break;
;;;281    #endif
;;;282    
;;;283    
;;;284    
;;;285    #ifdef USE_EXTI_LINE_13
;;;286    		case 13:s_EXTI_LINE13=_pCallBack;break;
;;;287    #endif
;;;288    
;;;289    
;;;290    
;;;291    #ifdef USE_EXTI_LINE_14
;;;292    		case 14:s_EXTI_LINE14=_pCallBack;break;
;;;293    #endif
;;;294    
;;;295    
;;;296    
;;;297    #ifdef USE_EXTI_LINE_15
;;;298    		case 15:s_EXTI_LINE15=_pCallBack;break;
;;;299    #endif
;;;300    
;;;301    
;;;302    		default : break;
000060  bf00              NOP      
                  |L4.98|
000062  bf00              NOP                            ;256
;;;303    	}
;;;304    	if(EXTI_PinSourcex>=5 || EXTI_PinSourcex<=9)
000064  2c05              CMP      r4,#5
000066  da01              BGE      |L4.108|
000068  2c09              CMP      r4,#9
00006a  dc0e              BGT      |L4.138|
                  |L4.108|
;;;305    	{
;;;306    		NVIC_InitStructure.NVIC_IRQChannel                   = EXTI9_5_IRQn;
00006c  2017              MOVS     r0,#0x17
00006e  f88d0008          STRB     r0,[sp,#8]
;;;307    		NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = Priority_EXTI9_Pre;
000072  2000              MOVS     r0,#0
000074  f88d0009          STRB     r0,[sp,#9]
;;;308    		NVIC_InitStructure.NVIC_IRQChannelSubPriority        = Priority_EXTI9_Sub;
000078  2005              MOVS     r0,#5
00007a  f88d000a          STRB     r0,[sp,#0xa]
;;;309    		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
00007e  2001              MOVS     r0,#1
000080  f88d000b          STRB     r0,[sp,#0xb]
;;;310    		NVIC_Init(&NVIC_InitStructure);
000084  a802              ADD      r0,sp,#8
000086  f7fffffe          BL       NVIC_Init
                  |L4.138|
;;;311    	}
;;;312    	if(EXTI_PinSourcex>=10 || EXTI_PinSourcex<=15)
00008a  2c0a              CMP      r4,#0xa
00008c  da01              BGE      |L4.146|
00008e  2c0f              CMP      r4,#0xf
000090  dc0e              BGT      |L4.176|
                  |L4.146|
;;;313    	{
;;;314    		NVIC_InitStructure.NVIC_IRQChannel                   = EXTI15_10_IRQn;
000092  2028              MOVS     r0,#0x28
000094  f88d0008          STRB     r0,[sp,#8]
;;;315    		NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = Priority_EXTI15_Pre;
000098  2000              MOVS     r0,#0
00009a  f88d0009          STRB     r0,[sp,#9]
;;;316    		NVIC_InitStructure.NVIC_IRQChannelSubPriority        = Priority_EXTI15_Sub;
00009e  2006              MOVS     r0,#6
0000a0  f88d000a          STRB     r0,[sp,#0xa]
;;;317    		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
0000a4  2001              MOVS     r0,#1
0000a6  f88d000b          STRB     r0,[sp,#0xb]
;;;318    		NVIC_Init(&NVIC_InitStructure);
0000aa  a802              ADD      r0,sp,#8
0000ac  f7fffffe          BL       NVIC_Init
                  |L4.176|
;;;319    	}
;;;320    
;;;321    
;;;322    
;;;323    }
0000b0  e8bd83fe          POP      {r1-r9,pc}
;;;324    /**
                          ENDP

                  |L4.180|
                          DCD      _EXTI_MODE
                  |L4.184|
                          DCD      s_EXTI_LINE8
                  |L4.188|
                          DCD      s_EXTI_LINE9

                          AREA ||i.bsp_InitEXTI||, CODE, READONLY, ALIGN=2

                  bsp_InitEXTI PROC
;;;77     */
;;;78     void bsp_InitEXTI(void)
000000  b538              PUSH     {r3-r5,lr}
;;;79     {
;;;80     	void * p;
;;;81     #ifdef USE_EXTI_LINE_0
;;;82     	p = EXTI_LINE_0_CallBack;
;;;83     	ExtiConfiguration(EXTI_LINE_0_PortSource,EXTI_PinSource0,EXTI_LINE_0_Trigger,p,EXTI_LINE_0_Mode);
;;;84     #endif
;;;85     
;;;86     #ifdef USE_EXTI_LINE_1
;;;87     	p = EXTI_LINE_1_CallBack;
;;;88     	ExtiConfiguration(EXTI_LINE_1_PortSource,EXTI_PinSource1,EXTI_LINE_1_Trigger,p,EXTI_LINE_1_Mode);
;;;89     #endif
;;;90     #ifdef USE_EXTI_LINE_2
;;;91     	p = EXTI_LINE_2_CallBack;
;;;92     	ExtiConfiguration(EXTI_LINE_2_PortSource,EXTI_PinSource2,EXTI_LINE_2_Trigger,p,EXTI_LINE_2_Mode);
;;;93     #endif
;;;94     
;;;95     #ifdef USE_EXTI_LINE_3
;;;96     	p = EXTI_LINE_3_CallBack;
;;;97     	ExtiConfiguration(EXTI_LINE_3_PortSource,EXTI_PinSource3,EXTI_LINE_3_Trigger,p,EXTI_LINE_3_Mode);
;;;98     #endif
;;;99     
;;;100    #ifdef USE_EXTI_LINE_4
;;;101    	p = EXTI_LINE_4_CallBack;
;;;102    	ExtiConfiguration(EXTI_LINE_4_PortSource,EXTI_PinSource4,EXTI_LINE_4_Trigger,p,EXTI_LINE_4_Mode);
;;;103    #endif
;;;104    
;;;105    #ifdef USE_EXTI_LINE_5
;;;106    	p = EXTI_LINE_5_CallBack;
;;;107    	ExtiConfiguration(EXTI_LINE_5_PortSource,EXTI_PinSource5,EXTI_LINE_5_Trigger,p,EXTI_LINE_5_Mode);
;;;108    #endif
;;;109    
;;;110    #ifdef USE_EXTI_LINE_6
;;;111    	p = EXTI_LINE_6_CallBack;
;;;112    	ExtiConfiguration(EXTI_LINE_6_PortSource,EXTI_PinSource6,EXTI_LINE_6_Trigger,p,EXTI_LINE_6_Mode);
;;;113    #endif
;;;114    
;;;115    #ifdef USE_EXTI_LINE_7
;;;116    	p = EXTI_LINE_7_CallBack;
;;;117    	ExtiConfiguration(EXTI_LINE_7_PortSource,EXTI_PinSource7,EXTI_LINE_7_Trigger,p,EXTI_LINE_7_Mode);
;;;118    #endif
;;;119    
;;;120    #ifdef USE_EXTI_LINE_8
;;;121    	p = EXTI_LINE_8_CallBack;
000002  4c09              LDR      r4,|L5.40|
;;;122    	ExtiConfiguration(EXTI_LINE_8_PortSource,EXTI_PinSource8,EXTI_LINE_8_Trigger,p,EXTI_LINE_8_Mode);
000004  2000              MOVS     r0,#0
000006  4623              MOV      r3,r4
000008  2208              MOVS     r2,#8
00000a  4611              MOV      r1,r2
00000c  9000              STR      r0,[sp,#0]
00000e  2002              MOVS     r0,#2
000010  f7fffffe          BL       ExtiConfiguration
;;;123    #endif
;;;124    
;;;125    #ifdef USE_EXTI_LINE_9
;;;126    	p = EXTI_LINE_9_CallBack;
000014  4c05              LDR      r4,|L5.44|
;;;127    	ExtiConfiguration(EXTI_LINE_9_PortSource,EXTI_PinSource9,EXTI_LINE_9_Trigger,p,EXTI_LINE_9_Mode);
000016  2000              MOVS     r0,#0
000018  4623              MOV      r3,r4
00001a  2208              MOVS     r2,#8
00001c  2109              MOVS     r1,#9
00001e  9000              STR      r0,[sp,#0]
000020  2002              MOVS     r0,#2
000022  f7fffffe          BL       ExtiConfiguration
;;;128    #endif
;;;129    
;;;130    #ifdef USE_EXTI_LINE_10
;;;131    	p = EXTI_LINE_10_CallBack;
;;;132    	ExtiConfiguration(EXTI_LINE_10_PortSource,EXTI_PinSource10,EXTI_LINE_10_Trigger,p,EXTI_LINE_10_Mode);
;;;133    #endif
;;;134    
;;;135    #ifdef USE_EXTI_LINE_11
;;;136    	p = EXTI_LINE_11_CallBack;
;;;137    	ExtiConfiguration(EXTI_LINE_11_PortSource,EXTI_PinSource11,EXTI_LINE_11_Trigger,p,EXTI_LINE_11_Mode);
;;;138    #endif
;;;139    
;;;140    #ifdef USE_EXTI_LINE_12
;;;141    	p = EXTI_LINE_12_CallBack;
;;;142    	ExtiConfiguration(EXTI_LINE_12_PortSource,EXTI_PinSource12,EXTI_LINE_12_Trigger,p,EXTI_LINE_12_Mode);
;;;143    #endif
;;;144    
;;;145    #ifdef USE_EXTI_LINE_13
;;;146    	p = EXTI_LINE_13_CallBack;
;;;147    	ExtiConfiguration(EXTI_LINE_13_PortSource,EXTI_PinSource13,EXTI_LINE_13_Trigger,p,EXTI_LINE_13_Mode);
;;;148    #endif
;;;149    
;;;150    #ifdef USE_EXTI_LINE_14
;;;151    	p = EXTI_LINE_14_CallBack;
;;;152    	ExtiConfiguration(EXTI_LINE_14_PortSource,EXTI_PinSource14,EXTI_LINE_14_Trigger,p,EXTI_LINE_14_Mode);
;;;153    #endif
;;;154    
;;;155    #ifdef USE_EXTI_LINE_15
;;;156    	p = EXTI_LINE_15_CallBack;
;;;157    	ExtiConfiguration(EXTI_LINE_15_PortSource,EXTI_PinSource15,EXTI_LINE_15_Trigger,p,EXTI_LINE_15_Mode);
;;;158    #endif
;;;159    }
000026  bd38              POP      {r3-r5,pc}
;;;160    
                          ENDP

                  |L5.40|
                          DCD      EXTI_CallBack0
                  |L5.44|
                          DCD      EXTI_CallBack1

                          AREA ||.data||, DATA, ALIGN=2

                  _EXTI_MODE
                          DCD      0x00000000
                  s_EXTI_LINE8
                          DCD      0x00000000
                  s_EXTI_LINE9
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\src\\bsp_exti.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_exti_c_7cc6a091____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_bsp_exti_c_7cc6a091____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_exti_c_7cc6a091____REVSH|
#line 144
|__asm___10_bsp_exti_c_7cc6a091____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_exti_c_7cc6a091____RRX|
#line 300
|__asm___10_bsp_exti_c_7cc6a091____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
