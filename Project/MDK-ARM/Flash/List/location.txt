; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\location.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\location.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\MySrc -I..\..\Libraries -I..\..\MySrc\ostask -I..\..\MySrc\MPU6050 -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 -DSTM32F40_41xxx --omf_browse=.\flash\obj\location.crf ..\..\MySrc\location.c]
                          THUMB

                          AREA ||i.Location||, CODE, READONLY, ALIGN=2

                  Location PROC
;;;8      float body_X,body_Y,body_C;
;;;9      void Location(MOTORSTRUCT *_pMotorMassage)
000000  b510              PUSH     {r4,lr}
;;;10     {
000002  ed2d8b04          VPUSH    {d8-d9}
000006  4604              MOV      r4,r0
;;;11     	float dx,dy;
;;;12     	static uint32_t now_time,last_time;
;;;13     	float dt;
;;;14     
;;;15     	if(last_time == 0)
000008  485c              LDR      r0,|L1.380|
00000a  6800              LDR      r0,[r0,#0]  ; last_time
00000c  b930              CBNZ     r0,|L1.28|
;;;16     	{
;;;17     		last_time = micros();
00000e  485c              LDR      r0,|L1.384|
000010  6800              LDR      r0,[r0,#0]
000012  495a              LDR      r1,|L1.380|
000014  6008              STR      r0,[r1,#0]  ; last_time
                  |L1.22|
;;;18     		return ;
;;;19     	}
;;;20     	now_time = micros();
;;;21     	if(now_time < last_time)
;;;22     	{
;;;23     	  	dt = (float)(now_time + (0xFFFFFFFF - last_time) );
;;;24     	}
;;;25     	else
;;;26     	{
;;;27     		dt = (float)(now_time - last_time);
;;;28     	}
;;;29       	last_time = now_time ;
;;;30     
;;;31     	dt /= 1000000.0f;
;;;32     	dx = -body_X*dt;
;;;33     	dy = -body_Y*dt;
;;;34     
;;;35     	body_C *=0.61591103507271171941830624465355f;
;;;36     	body_C -=(((int)body_C)/360)*360;
;;;37     	if(body_C<0)
;;;38     		body_C+=360;
;;;39     
;;;40     //	u1_printf("%d\t%d\t%d\r\n",(int)dx,(int)dy,(int)body_C);
;;;41     //	body_Y=(float)(_pMotorMassage->motor1.speed+_pMotorMassage->motor2.speed+_pMotorMassage->motor3.speed+_pMotorMassage->motor4.speed)/4;
;;;42     //	body_X=(float)(_pMotorMassage->motor1.speed-_pMotorMassage->motor2.speed+_pMotorMassage->motor3.speed-_pMotorMassage->motor4.speed)/4;
;;;43     //	body_C=(float)(-_pMotorMassage->motor1.position+_pMotorMassage->motor2.position+_pMotorMassage->motor3.position-_pMotorMassage->motor4.position)/4*90/25844;
;;;44     	// if(body_C>=180.0f)
;;;45     	// 	body_C=body_C-360.0f;
;;;46     	// else if(body_C<-180.0)
;;;47     	// 	body_C=body_C+360.0f;
;;;48     //	if(body_C>=-180&&body_C<180)
;;;49     		{
;;;50     // 			car_location.gobal_X+=(body_Y*sin(body_C*Pi/180.0f)+body_X*cos(body_C*Pi/180.0f));
;;;51     // 			car_location.gobal_Y+=(body_Y*cos(body_C*Pi/180.0f)-body_X*sin(body_C*Pi/180.0f));
;;;52     			// car_location.gobal_X+=(body_Y*sin(10*Pi/180)+body_X*cos(10*Pi/180));
;;;53      		//  	car_location.gobal_Y+=(body_Y*cos(10*Pi/180)-body_X*sin(10*Pi/180));
;;;54     			// car_location.gobal_X+=(dy*sin(body_C*D2R)+dx*cos(body_C*D2R));
;;;55     			// car_location.gobal_Y+=(dy*cos(body_C*D2R)-dx*sin(body_C*D2R));
;;;56     			// car_location.car_body_C=body_C;
;;;57     //			car_location.gobal_X = sin(-1*D2R);
;;;58     		}
;;;59     		// temp[0] = arm_sin_f32(90*D2R);
;;;60     		car_location.gobal_X += (dy*arm_sin_f32(body_C*D2R)+dx*arm_cos_f32(body_C*D2R));
;;;61     		car_location.gobal_Y += (dy*arm_cos_f32(body_C*D2R)-dx*arm_sin_f32(body_C*D2R));
;;;62     		car_location.gobal_Z=body_C;
;;;63     		
;;;64     }
000016  ecbd8b04          VPOP     {d8-d9}
00001a  bd10              POP      {r4,pc}
                  |L1.28|
00001c  4858              LDR      r0,|L1.384|
00001e  6800              LDR      r0,[r0,#0]            ;20
000020  4958              LDR      r1,|L1.388|
000022  6008              STR      r0,[r1,#0]            ;20  ; now_time
000024  4608              MOV      r0,r1                 ;21
000026  6800              LDR      r0,[r0,#0]            ;21  ; now_time
000028  4954              LDR      r1,|L1.380|
00002a  6809              LDR      r1,[r1,#0]            ;21  ; last_time
00002c  4288              CMP      r0,r1                 ;21
00002e  d20b              BCS      |L1.72|
000030  4852              LDR      r0,|L1.380|
000032  6800              LDR      r0,[r0,#0]            ;23  ; last_time
000034  f1c030ff          RSB      r0,r0,#0xffffffff     ;23
000038  4952              LDR      r1,|L1.388|
00003a  6809              LDR      r1,[r1,#0]            ;23  ; now_time
00003c  4408              ADD      r0,r0,r1              ;23
00003e  ee000a10          VMOV     s0,r0                 ;23
000042  eeb88a40          VCVT.F32.U32 s16,s0                ;23
000046  e008              B        |L1.90|
                  |L1.72|
000048  484e              LDR      r0,|L1.388|
00004a  6800              LDR      r0,[r0,#0]            ;27  ; now_time
00004c  494b              LDR      r1,|L1.380|
00004e  6809              LDR      r1,[r1,#0]            ;27  ; last_time
000050  1a40              SUBS     r0,r0,r1              ;27
000052  ee000a10          VMOV     s0,r0                 ;27
000056  eeb88a40          VCVT.F32.U32 s16,s0                ;27
                  |L1.90|
00005a  484a              LDR      r0,|L1.388|
00005c  6800              LDR      r0,[r0,#0]            ;29  ; now_time
00005e  4947              LDR      r1,|L1.380|
000060  6008              STR      r0,[r1,#0]            ;29  ; last_time
000062  ed9f0a49          VLDR     s0,|L1.392|
000066  eec80a00          VDIV.F32 s1,s16,s0             ;31
00006a  eeb08a60          VMOV.F32 s16,s1                ;31
00006e  4847              LDR      r0,|L1.396|
000070  ed900a00          VLDR     s0,[r0,#0]            ;32
000074  eeb10a40          VNEG.F32 s0,s0                 ;32
000078  ee608a08          VMUL.F32 s17,s0,s16            ;32
00007c  4844              LDR      r0,|L1.400|
00007e  ed900a00          VLDR     s0,[r0,#0]            ;33
000082  eeb10a40          VNEG.F32 s0,s0                 ;33
000086  ee209a08          VMUL.F32 s18,s0,s16            ;33
00008a  4842              LDR      r0,|L1.404|
00008c  ed900a00          VLDR     s0,[r0,#0]            ;35
000090  eddf0a41          VLDR     s1,|L1.408|
000094  ee200a20          VMUL.F32 s0,s0,s1              ;35
000098  ed800a00          VSTR     s0,[r0,#0]            ;35
00009c  ed900a00          VLDR     s0,[r0,#0]            ;36
0000a0  eebd0ac0          VCVT.S32.F32 s0,s0                 ;36
0000a4  ee100a10          VMOV     r0,s0                 ;36
0000a8  f44f71b4          MOV      r1,#0x168             ;36
0000ac  fb90f0f1          SDIV     r0,r0,r1              ;36
0000b0  4348              MULS     r0,r1,r0              ;36
0000b2  ee000a10          VMOV     s0,r0                 ;36
0000b6  eeb80ac0          VCVT.F32.S32 s0,s0                 ;36
0000ba  4836              LDR      r0,|L1.404|
0000bc  edd00a00          VLDR     s1,[r0,#0]            ;36
0000c0  ee300ac0          VSUB.F32 s0,s1,s0              ;36
0000c4  ed800a00          VSTR     s0,[r0,#0]            ;36
0000c8  ed900a00          VLDR     s0,[r0,#0]            ;37
0000cc  eeb50ac0          VCMPE.F32 s0,#0.0               ;37
0000d0  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;37
0000d4  d207              BCS      |L1.230|
0000d6  ed900a00          VLDR     s0,[r0,#0]            ;38
0000da  eddf0a30          VLDR     s1,|L1.412|
0000de  ee300a20          VADD.F32 s0,s0,s1              ;38
0000e2  ed800a00          VSTR     s0,[r0,#0]            ;38
                  |L1.230|
0000e6  482b              LDR      r0,|L1.404|
0000e8  edd00a00          VLDR     s1,[r0,#0]            ;60
0000ec  ed9f1a2c          VLDR     s2,|L1.416|
0000f0  ee600a81          VMUL.F32 s1,s1,s2              ;60
0000f4  eeb00a60          VMOV.F32 s0,s1                 ;60
0000f8  f7fffffe          BL       arm_sin_f32
0000fc  ee609a09          VMUL.F32 s19,s0,s18            ;60
000100  4824              LDR      r0,|L1.404|
000102  edd00a00          VLDR     s1,[r0,#0]            ;60
000106  ed9f1a26          VLDR     s2,|L1.416|
00010a  ee600a81          VMUL.F32 s1,s1,s2              ;60
00010e  eeb00a60          VMOV.F32 s0,s1                 ;60
000112  f7fffffe          BL       arm_cos_f32
000116  ee489a80          VMLA.F32 s19,s17,s0            ;60
00011a  4822              LDR      r0,|L1.420|
00011c  ed900a00          VLDR     s0,[r0,#0]            ;60
000120  ee390a80          VADD.F32 s0,s19,s0             ;60
000124  ed800a00          VSTR     s0,[r0,#0]            ;60
000128  481a              LDR      r0,|L1.404|
00012a  edd00a00          VLDR     s1,[r0,#0]            ;61
00012e  ed9f1a1c          VLDR     s2,|L1.416|
000132  ee600a81          VMUL.F32 s1,s1,s2              ;61
000136  eeb00a60          VMOV.F32 s0,s1                 ;61
00013a  f7fffffe          BL       arm_cos_f32
00013e  ee609a09          VMUL.F32 s19,s0,s18            ;61
000142  4814              LDR      r0,|L1.404|
000144  edd00a00          VLDR     s1,[r0,#0]            ;61
000148  ed9f1a15          VLDR     s2,|L1.416|
00014c  ee600a81          VMUL.F32 s1,s1,s2              ;61
000150  eeb00a60          VMOV.F32 s0,s1                 ;61
000154  f7fffffe          BL       arm_sin_f32
000158  ee489ac0          VMLS.F32 s19,s17,s0            ;61
00015c  4811              LDR      r0,|L1.420|
00015e  ed900a01          VLDR     s0,[r0,#4]            ;61
000162  ee390a80          VADD.F32 s0,s19,s0             ;61
000166  ed800a01          VSTR     s0,[r0,#4]            ;61
00016a  480a              LDR      r0,|L1.404|
00016c  ed900a00          VLDR     s0,[r0,#0]            ;62
000170  480c              LDR      r0,|L1.420|
000172  ed800a02          VSTR     s0,[r0,#8]            ;62
000176  bf00              NOP      
000178  e74d              B        |L1.22|
                          ENDP

00017a  0000              DCW      0x0000
                  |L1.380|
                          DCD      last_time
                  |L1.384|
                          DCD      0x40000c24
                  |L1.388|
                          DCD      now_time
                  |L1.392|
000188  49742400          DCFS     0x49742400 ; 1000000
                  |L1.396|
                          DCD      body_X
                  |L1.400|
                          DCD      body_Y
                  |L1.404|
                          DCD      body_C
                  |L1.408|
000198  3f1dac58          DCFS     0x3f1dac58 ; 0.61591100692749023
                  |L1.412|
00019c  43b40000          DCFS     0x43b40000 ; 360
                  |L1.416|
0001a0  3c8efa03          DCFS     0x3c8efa03 ; 0.017453199252486229
                  |L1.420|
                          DCD      car_location

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  MotorMassage
                          %        32
                  car_location
                          %        12

                          AREA ||.data||, DATA, ALIGN=2

                  body_X
                          DCD      0x00000000
                  body_Y
                          DCD      0x00000000
                  body_C
                          DCD      0x00000000
                  now_time
                          DCD      0x00000000
                  last_time
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\MySrc\\location.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_location_c_Location____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_location_c_Location____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_location_c_Location____REVSH|
#line 144
|__asm___10_location_c_Location____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_location_c_Location____RRX|
#line 300
|__asm___10_location_c_Location____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
