2016-2-20
1. 拨盘速度闭环控制
2. PID修改,将原来PID拆成几个基本类，用继承的方式生成CPID和SCPID(用于拨盘电机闭环)
3. 代码整理，将任务的内容分散到几个*.cpp中
4. 使用买的RMDS-103驱动板，初始化时需要注意没初始化时不能发送控制信息
5. DebugTools换用串口的空闲中断
6. 修改了05.删除目标文件(用于打包备份).bat和Project\MDK-ARM\CopyHex_Flash.bat

2016-2-24
1. 增加鼠标键盘遥控

2016-2-25
1.重写了CAN,使用FIFO与标记邮箱的方式发,确保每个数据按顺序且不漏包地发送
2.修正了FIFO溢出死循环的问题
3.新建一个任务专门处理底盘跟随，降低底盘电机的控制频率，防止CAN数据FIFO长期饱满

2016-2-26
1. 加入模糊PID控制
2. 用6050代替大疆的单轴陀螺仪

2016-2-27
1. 加入外部中断任务
2. 加入了Flash保存参数（bsp_stmflash.c和SetParameter.c）

2016-3-11
1.基地随机运动功能

2016-3-13
1.陀螺仪校正

2016-3-25
1. 增加底盘跟随模式选择。YawPID.MODE = 0时底盘跟随；YawPID.MODE = 1时YAW轴电机跟随底盘
2. 加入了bsp_usart.c(精简版的bsp_uart_fifo.c),使用printf时是使用阻塞式发送（程序运行时少用printf,可以用USART1_DMA_Send）

2016-3-27
1. 加入串口协议（包含STM32和软件处理的两个版本：UsartFrame_STM32和UsartFrame_Soft）

2016-4-01
1.速度阈值等变量宏定义
2.方向移动封装

2016-4-06
1. 修改模糊PID
2. 使用扭矩较大的PITCH轴电机

2016-4-10
1.PITCH位置速度双闭环
2.拨盘电机速度闭环
3.delay_ms_nos与delay_us_nos修改
4.去除PID中的死区，加上Iterm清零部分

2016-4-25
1.参数改到新车上
2.串口与PC连接，在UsartFrameSTM32中，使用串口3的接收中断
3.云台控制用定时器中断，控制频率5K,motor中CAN1发送使用STM32官方库来发送（不使用FIFO）

2016-4-27
1.自动手动模式切换

2016-5-01
1.适应新车机械架构
2.增加二轴云台

2016-5-02
1.硬件产生随机数
2.横向纵向速度区分
3.增加移动方向标志
4.CAN1功能函数封装
5.防撞壁保护

2016-5-04
1.增加超声波校正
2016-5-11
1.使用官方DSP库，修改各个滤波的BUG
2.电机码盘值连续处理
3.串口与PC连接，在UsartFrameSTM32中，使用串口3进行接发
4.CV与单片机视觉连接接口初步完成
5.串口互动调参完成（基于之前的SetParameter.c）
6.bsp_usart.c中增加检测接收长度的函数

2016-5-17
1.filter函数大改，代替PIDFitler
2.PID函数改动较大，CPID和FUZZYPID使用外接数据作为D的运算（使用陀螺仪加速度，效果不错），SCPID做为一个常规的PID函数，去掉死区参数和D的分级运算
3.串口参数加入陀螺仪的Offset校准
4.底盘跟随参数改动，PITCH和YAW操作速度降低

2016-5-23
1.修改电机码盘数据溢出BUG
2.修改FUZZYPID，各个FUZZY参数通过DebugToot来进行调节，初始参数调整，超调量减少，反抗力加大

2016-5-23
1.修改电机码盘数据溢出BUG
2.修改FUZZYPID，各个FUZZY参数通过DebugToot来进行调节，初始参数调整，超调量减少，反抗力加大
3.基地与射手通过宏来共用同一个程序，CV_MODE宏来判定是否启用CV
4.拨盘电机参数改动
5.掉线保护任务中串口打印掉线信息
6.操作参数:KM参数YAW轴改成2级可调

2016-5-27
1.根据步兵6.18移植
2.云台固定，不进行底盘跟随


2016-6-6
1.功率限制：通过usart3接裁判系统电压数据，计算出最大电流发送给驱动板，与CV冲突，待解决
2.motor.c中增加Motor_DataScale，实现各个电机值不超过给定的最大值来进行缩放，操作性提升

2016-6-7
1.修改filter.cpp中的冒泡排序BUG
2.修改YAWPID.MODE=1时，z轴数据为无符号的BUG
3.根据资料修改裁判系统数据接口（暂时未加CRC校验）

2016-6-16
1.解决漂移问题

2016-6-19
1.bsp_dr16.c中采用结构体获取数据
2.开始使用串口&CAN转接板1.1数据接口，功率分配在小板上执行，裁判系统和PC通过小板间接与主控通讯
3.不必要的注释删除，使用FollowMode和StrategicMode两个宏定义，用于底盘跟随的切换和战略性动作的实现
4.按C键时（StrategicMode = 2），底盘不动  || 按V键时（StrategicMode = 3），底盘抖动  ，但是云台控制权还是属于操作手
5.只有摩擦轮开启时，拨盘才允许动
6.增加ESCSetPara函数，用于调摩擦轮速度，拨盘转速

2016-6-23
1.使用串口&CAN小板
2.切换视觉按Q键
3.软件上将底盘不动时YAW电机限位（<85度）

2016-6-26
1.拨盘电机使用位置环，双边不同幅度滑窗防堵转，每次转一格加四份之一格然后回转四份之一格
2.根据裁判系统射频闭环暂时注释掉
3.代码未整理，修改部分较乱

2016-6-28
1.新的随机运动方式
2.新的CAN设备接入（红外加校正超声波）

2016-7-03
1.随机运动区域划分逻辑重写
2.电机输出量限幅
3.加入串口转接板进行功率保护，有BUG待修正
4.分开对横纵向距离阈值进行宏定义
5.原有随机运动基础上增加旋转运动

