01. bsp的使用可参考\User\bsp_stm32f4xx\03.STM32BSP介绍
02. AppTaskCreate();/* 创建任务 */
	AppObjCreate();/* 创建任务通信机制和有时序需要的初始化步骤 */
	注意上面在TaskStart任务中两个函数的顺序，必须在任务开始后再初始化邮箱，否则不能正常使用邮箱
03. 有些bsp中需要定时执行部分函数(参考01)，这部分放在TaskStart任务中
04. 少用全局变量，在自己写的*.c中用无所谓，但不能再main函数中使用，或者extern所使用的全局变量
	可以通过其他方法来达到全局变量的效果，如RTX中的事件标志组合，信号量和邮箱，可参考DisconnectCheck任务
05. 用到芯片的硬件资源时若不能确定是否已用或冲突时可以先问我，免得到时要改
06. 尽量不中断处理数据，可以在中断中把数据通过邮箱发送出来，开一个任务来监听该邮箱，再进行处理，可以参考
	DR16_DATA_Rec任务，CAN2_DATA0_Rec任务，CAN2_DATA1_Rec任务
07. 关于delay_ms():定义为      #define delay_ms		os_dly_wait
	就是说这个是RTX系统中的延时函数，这段延时时间任务会把CPU占用权交出去，这里需要注意在这段时间内是否数
	据不被其他任务修改
	delay_ms_nos这个不是系统的延时函数是通过计算系统时钟进行阻塞式计算，但会被高优先级的任务抢占
08. 系统节拍为0.5ms,就是说delay_ms(2)不是2ms,而是1ms,对应着os_dly_wait(2)
09. 自己写的*.c中用到邮箱统一把邮箱的初始化和邮箱的接收封装成可调用的函数，邮箱初始化放在AppObjCreate()中，
	邮箱的接收可参考DR16_DATA_Rec任务
10. 经常用到can,can的接收设置筛选器，参考CAN2_DATA0_Rec任务，发送参考PID_Aguest任务中Motor_YawPitch函数中的can发送